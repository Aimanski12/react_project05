{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\components\\\\MenuList\\\\TopMenuList\\\\Menu.js\";\nvar __jsx = React.createElement;\nimport React from 'react'; // import * as action from '../../../store/actions/index'\n// import {connect} from 'react-redux'\n// import {hover} from '../../../utils/common/menuListEvents'\n// import {navHoverElements} from '../../../utils/common/elementSorter'\n// import {closeMenu} from '../../../utils/common/menuClickEvents'\n// import {openTopLayer} from '../../../utils/common/topLayerAnim'\n// import anime from 'animejs'\n// import './Menu.css'\n\nfunction Menu(props) {\n  var _this = this;\n\n  var menus = ['home', 'about', 'projects', 'contacts']; // const menuClicked = (uPath) => {\n  //   let path = uPath === 'home' ? '' : uPath\n  //   // if menu is open then run animation\n  //   // to close the menu\n  //   if (props.isOpen) {\n  //     closeMenuBtn()\n  //   } \n  //   // set the isOpen menu state to close\n  //   props.setMenu(false)\n  //   setTimeout(()=>{\n  //     openTopLayer()\n  //     setTimeout(() => {\n  //       props.setRedirect(true, `/${path}ls`)\n  //     }, 800)\n  //   }, 800)\n  // }\n  // // close menu function\n  // const closeMenuBtn = () => {\n  //   const el = navHoverElements()\n  //   // call function to close animation\n  //   closeMenu(false)\n  //   const n = document.querySelector('.navbar-container')\n  //   let tl = anime.timeline({\n  //     easing: 'easeInQuad',\n  //     duration: 200,\n  //   })\n  //   tl\n  //   .add({\n  //     targets: n,\n  //     opacity: 0,\n  //   })\n  //   .add({\n  //     duration: 10,\n  //     complete: function (anim) {\n  //       props.setMenu(!props.isOpen)\n  //     }\n  //   })\n  //   .add({\n  //     targets: n,\n  //     opacity: 1,\n  //     complete: function (anim) {\n  //       el.middle.style.color = props.colorModes.close.main\n  //     }\n  //   })\n  // }\n\n  var menuList = function menuList() {\n    return menus.map(function (menu, i) {\n      return __jsx(\"li\", {\n        className: \"menu-list\",\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 14\n        }\n      }, __jsx(\"div\", {\n        className: \"menu-list-container\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, __jsx(\"div\", {\n        className: \"content-center list-front\\n                  \".concat(menu === props.activeRoute ? 'active' : ''),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, __jsx(\"a\", {\n        href: menu === 'home' ? '/' : \"/\".concat(menu),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, __jsx(\"span\", {\n        className: \"menu-list-text\",\n        onMouseEnter: function onMouseEnter(e) {\n          return hover(e, 'hoverIn');\n        },\n        onMouseOut: function onMouseOut(e) {\n          return hover(e, 'hoverOut');\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }\n      }, menu))), __jsx(\"div\", {\n        className: \"content-center list-back \\n                  \".concat(menu === props.activeRoute ? 'active' : ''),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, __jsx(\"span\", {\n        className: \"menu-list-backer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }\n      }, menu))));\n    });\n  };\n\n  return __jsx(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, menuList()));\n} // const mapStateToProps = (state) => {\n//   return {\n//     menus: state.state.menus,\n//     activeRoute: state.state.activeRoute,\n//     // colorModes: state.state.colorModes,\n//     // isOpen: state.state.isOpen,\n//     // isAnimating: state.state.isAnimating,\n//     // isClicked: state.state.isClicked\n//   }\n// }\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     // setMenu: (val) => { dispatch(action.menuIsOpen(val)) },\n//     // checkPage: () => {dispatch(action.checkPageLocation())},\n//     // setRedirect: (istrue, path) => { dispatch(action.setRedirect(istrue, path))}\n//   }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(Menu);\n\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/components/MenuList/TopMenuList/Menu.js"],"names":["React","Menu","props","menus","menuList","map","menu","i","activeRoute","e","hover"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,MAAIC,KAAK,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,UAAlB,EAA8B,UAA9B,CAAZ,CADmB,CAGnB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,WAAOD,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP,EAAY;AAE3B,aAAO;AAAI,QAAA,SAAS,EAAC,WAAd;AAA0B,QAAA,GAAG,EAAEA,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,yDACVD,IAAI,KAAKJ,KAAK,CAACM,WAAf,GAA6B,QAA7B,GAAwC,EAD9B,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMA;AAAG,QAAA,IAAI,EAAEF,IAAI,KAAK,MAAT,GAAkB,GAAlB,cAA4BA,IAA5B,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,gBAAhB;AACE,QAAA,YAAY,EAAE,sBAACG,CAAD;AAAA,iBAAKC,KAAK,CAACD,CAAD,EAAI,SAAJ,CAAV;AAAA,SADhB;AAEE,QAAA,UAAU,EAAE,oBAACA,CAAD;AAAA,iBAAKC,KAAK,CAACD,CAAD,EAAI,UAAJ,CAAV;AAAA,SAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAE0CH,IAF1C,CADF,CANA,CADF,EAaE;AAAK,QAAA,SAAS,yDACVA,IAAI,KAAKJ,KAAK,CAACM,WAAf,GAA6B,QAA7B,GAAwC,EAD9B,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCF,IAApC,CAFF,CAbF,CADD,CAAP;AAoBD,KAtBM,CAAP;AAuBD,GAxBD;;AA0BA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,EADX,CADF,CADF;AAOD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;KA5GSH,I;AA6GT,eAAeA,IAAf","sourcesContent":["import React from 'react'\r\n// import * as action from '../../../store/actions/index'\r\n// import {connect} from 'react-redux'\r\n// import {hover} from '../../../utils/common/menuListEvents'\r\n// import {navHoverElements} from '../../../utils/common/elementSorter'\r\n// import {closeMenu} from '../../../utils/common/menuClickEvents'\r\n// import {openTopLayer} from '../../../utils/common/topLayerAnim'\r\n// import anime from 'animejs'\r\n// import './Menu.css'\r\n\r\nfunction Menu(props) {\r\n  let menus = ['home', 'about', 'projects', 'contacts']\r\n\r\n  // const menuClicked = (uPath) => {\r\n  //   let path = uPath === 'home' ? '' : uPath\r\n  //   // if menu is open then run animation\r\n  //   // to close the menu\r\n  //   if (props.isOpen) {\r\n  //     closeMenuBtn()\r\n  //   } \r\n\r\n  //   // set the isOpen menu state to close\r\n  //   props.setMenu(false)\r\n\r\n  //   setTimeout(()=>{\r\n  //     openTopLayer()\r\n  //     setTimeout(() => {\r\n  //       props.setRedirect(true, `/${path}ls`)\r\n  //     }, 800)\r\n  //   }, 800)\r\n  // }\r\n\r\n  // // close menu function\r\n  // const closeMenuBtn = () => {\r\n  //   const el = navHoverElements()\r\n  //   // call function to close animation\r\n  //   closeMenu(false)\r\n\r\n  //   const n = document.querySelector('.navbar-container')\r\n\r\n  //   let tl = anime.timeline({\r\n  //     easing: 'easeInQuad',\r\n  //     duration: 200,\r\n  //   })\r\n  //   tl\r\n  //   .add({\r\n  //     targets: n,\r\n  //     opacity: 0,\r\n  //   })\r\n  //   .add({\r\n  //     duration: 10,\r\n  //     complete: function (anim) {\r\n  //       props.setMenu(!props.isOpen)\r\n  //     }\r\n  //   })\r\n  //   .add({\r\n  //     targets: n,\r\n  //     opacity: 1,\r\n  //     complete: function (anim) {\r\n  //       el.middle.style.color = props.colorModes.close.main\r\n  //     }\r\n  //   })\r\n  // }\r\n  \r\n  const menuList = () => {\r\n    return menus.map((menu, i )=>{\r\n      \r\n      return <li className='menu-list' key={i}>\r\n              <div className='menu-list-container'>\r\n                <div className={`content-center list-front\r\n                  ${menu === props.activeRoute ? 'active' : ''}`}>\r\n                  {/* <span className='menu-list-text'\r\n                    onMouseEnter={(e)=>mouseEnter(e)}\r\n                    onMouseOut={(e)=>mouseOut(e)}\r\n                    onClick={()=>menuClicked(`${menu}`)} >{menu}</span> */}\r\n                <a href={menu === 'home' ? '/' : `/${menu}`}>\r\n                  <span className='menu-list-text'\r\n                    onMouseEnter={(e)=>hover(e, 'hoverIn')}\r\n                    onMouseOut={(e)=>hover(e, 'hoverOut')}>{menu}</span>\r\n                </a>\r\n                </div>\r\n                <div className={`content-center list-back \r\n                  ${menu === props.activeRoute ? 'active' : ''}`}>\r\n                  <span className='menu-list-backer'>{menu}</span>\r\n                </div>\r\n              </div>\r\n            </li>\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <nav>\r\n      <ul>\r\n        {menuList()}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     menus: state.state.menus,\r\n//     activeRoute: state.state.activeRoute,\r\n//     // colorModes: state.state.colorModes,\r\n//     // isOpen: state.state.isOpen,\r\n//     // isAnimating: state.state.isAnimating,\r\n//     // isClicked: state.state.isClicked\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     // setMenu: (val) => { dispatch(action.menuIsOpen(val)) },\r\n//     // checkPage: () => {dispatch(action.checkPageLocation())},\r\n//     // setRedirect: (istrue, path) => { dispatch(action.setRedirect(istrue, path))}\r\n//   }\r\n// }\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Menu);\r\nexport default Menu;\r\n"]},"metadata":{},"sourceType":"module"}