{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\utils\\\\context\\\\stateContext.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, createContext } from 'react';\nimport { checkRoute } from '../common/common';\nexport const StateContext = createContext();\nexport class StateProvider extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      activeRoute: 'home',\n      menuIsOpen: false,\n      menuIsAnimating: false\n    });\n\n    _defineProperty(this, \"setApplicationState\", newState => {\n      this.setState(_objectSpread(_objectSpread({}, this.state), newState));\n    });\n\n    _defineProperty(this, \"getActiveRoute\", () => {\n      console.log(window); // let route = checkRoute(window.location.pathname)\n      // if(route != this.state.activeRoute){\n      //   this.setState ({\n      //     activeRoute: route\n      //   })\n      // }\n    });\n  }\n\n  render() {\n    this.getActiveRoute();\n    return __jsx(StateContext.Provider, {\n      value: {\n        state: this.state,\n        setState: this.setApplicationState\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/utils/context/stateContext.js"],"names":["React","Component","createContext","checkRoute","StateContext","StateProvider","activeRoute","menuIsOpen","menuIsAnimating","newState","setState","state","console","log","window","render","getActiveRoute","setApplicationState","props","children"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,aAA1B,QAA8C,OAA9C;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAO,MAAMC,YAAY,GAAGF,aAAa,EAAlC;AAGP,OAAO,MAAMG,aAAN,SAA4BJ,SAA5B,CAAsC;AAAA;AAAA;;AAAA,mCACpC;AACLK,MAAAA,WAAW,EAAE,MADR;AAELC,MAAAA,UAAU,EAAE,KAFP;AAGLC,MAAAA,eAAe,EAAE;AAHZ,KADoC;;AAAA,iDAOpBC,QAAD,IAAc;AAClC,WAAKC,QAAL,iCACK,KAAKC,KADV,GAEKF,QAFL;AAID,KAZ0C;;AAAA,4CAc1B,MAAM;AACrBG,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ,EADqB,CAErB;AACA;AACA;AACA;AACA;AACA;AACD,KAtB0C;AAAA;;AAwB3CC,EAAAA,MAAM,GAAE;AACN,SAAKC,cAAL;AAEA,WACE,MAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE;AAC5BL,QAAAA,KAAK,EAAE,KAAKA,KADgB;AAE5BD,QAAAA,QAAQ,EAAE,KAAKO;AAFa,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAKC,KAAL,CAAWC,QAJd,CADF;AAQD;;AAnC0C","sourcesContent":["import React, {Component, createContext} from 'react'\r\nimport {checkRoute} from '../common/common'\r\nexport const StateContext = createContext()\r\n\r\n\r\nexport class StateProvider extends Component {\r\n  state= {\r\n    activeRoute: 'home',\r\n    menuIsOpen: false,\r\n    menuIsAnimating: false\r\n  }\r\n\r\n  setApplicationState = (newState) => {\r\n    this.setState({\r\n      ...this.state,\r\n      ...newState\r\n    })\r\n  }\r\n\r\n  getActiveRoute = () => {\r\n    console.log(window)\r\n    // let route = checkRoute(window.location.pathname)\r\n    // if(route != this.state.activeRoute){\r\n    //   this.setState ({\r\n    //     activeRoute: route\r\n    //   })\r\n    // }\r\n  }\r\n\r\n  render(){\r\n    this.getActiveRoute()\r\n\r\n    return(\r\n      <StateContext.Provider value={{\r\n        state: this.state,\r\n        setState: this.setApplicationState\r\n      }}>\r\n        {this.props.children}\r\n      </StateContext.Provider>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}