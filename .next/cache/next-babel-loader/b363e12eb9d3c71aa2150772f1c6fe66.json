{"ast":null,"code":"import { topLayoverElements } from '../../common/elementSorter';\nimport anime from 'animejs'; // function for intro animation\n\nexport function introAnim(hasSession) {\n  var el = topLayoverElements(); // if it has a session no animation to run\n\n  if (hasSession === true) {\n    el.top.style.display = 'none';\n  } // if it has no session then we will run the animation\n\n\n  if (hasSession === false) {\n    el.top.style.display = 'block';\n    el.container.style.overflow = 'hidden';\n    el.svg.style.opacity = 0;\n    el.text.style.opacity = 0;\n    el.top.style.display = 'block';\n    el.runner.style.height = '100vh';\n    el.runner.style.width = '100%';\n    runTopAnimation(el);\n  }\n} // function to run if the browser has no sessions\n\nfunction runTopAnimation(el) {\n  var tl = anime.timeline({\n    easing: 'easeInSine'\n  });\n  tl.add({\n    targets: [el.svg, el.text],\n    opacity: 1,\n    duration: 1000\n  }).add({\n    duration: 500\n  }).add({\n    targets: [el.text],\n    opacity: 0,\n    duration: 400\n  }).add({\n    targets: [el.text],\n    opacity: 1,\n    duration: 400\n  }).add({\n    duration: 700\n  }).add({\n    targets: [el.text],\n    opacity: 0,\n    duration: 400\n  }).add({\n    targets: [el.text],\n    opacity: 1,\n    duration: 400\n  }).add({\n    duration: 700\n  }).add({\n    targets: [el.text],\n    opacity: 0,\n    duration: 400\n  }).add({\n    targets: [el.text],\n    opacity: 1,\n    duration: 400\n  }).add({\n    duration: 700\n  }).add({\n    targets: [el.text, el.svg],\n    opacity: 0,\n    duration: 800\n  }).add({\n    duration: 700\n  }).add({\n    targets: [el.runner],\n    height: 0,\n    easing: 'easeInSine',\n    duration: 500\n  }).add({\n    duration: 100,\n    complete: function complete(anim) {\n      el.top.style.display = 'none';\n      el.runner.style.height = '100vh';\n      el.runner.style.width = '0';\n      el.container.style.overflow = 'visible';\n    }\n  });\n} // function to open and run the top layer animation\n\n\nexport function openTopLayer() {\n  var el = topLayoverElements();\n  el.top.style.display = 'block';\n  el.container.style.overflow = 'hidden';\n  el.runner.style.height = '100vh';\n  el.runner.style.width = '0';\n  el.svg.style.width = '70%';\n  var tl = anime.timeline({\n    easing: 'easeInSine'\n  });\n  tl.add({\n    targets: el.runner,\n    duration: 500,\n    width: '100%',\n    complete: function complete(anim) {\n      anime({\n        targets: el.svg,\n        opacity: 1,\n        duration: 500\n      });\n    }\n  }).add({\n    duration: 500,\n    begin: function begin(anim) {\n      el.runner.style.right = 0;\n      el.runner.style[\"float\"] = 'right';\n    }\n  });\n} // function for closing the top layer\n\nexport function closeTopLayer() {\n  var el = topLayoverElements();\n  el.top.style.display = 'block';\n  el.container.style.overflow = 'hidden';\n  el.runner.style.height = '100vh';\n  el.runner.style.width = '100%';\n  el.runner.style.right = 0;\n  el.runner.style[\"float\"] = 'right';\n  el.svg.style.width = '70%';\n  var nav = document.querySelector('.navbar-container');\n  var tl = anime.timeline({\n    easing: 'easeInSine'\n  });\n  tl.add({\n    duration: 400\n  }).add({\n    targets: el.runner,\n    duration: 400,\n    width: '0%',\n    begin: function begin(anim) {\n      el.svg.style.opacity = 0;\n    }\n  }).add({\n    duration: 40,\n    complete: function complete(anim) {\n      el.top.style.display = 'none';\n      el.container.style.overflow = 'visible';\n      el.runner.style.height = '100vh';\n      el.runner.style.width = '100%';\n      el.runner.style.left = 0;\n      el.runner.style[\"float\"] = 'left';\n      nav.style.opacity = 1;\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}