{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\components\\\\FooterItem\\\\CopyRight\\\\CopyRight.js\";\nvar __jsx = React.createElement;\nimport React from 'react'; // import './CopyRight.css'\n// import {connect} from 'react-redux'\n// import * as action from '../../../store/actions/index'\n// import {navHoverElements} from '../../../utils/common/elementSorter'\n// import {closeMenu} from '../../../utils/common/menuClickEvents'\n// import anime from 'animejs'\n// import {openTopLayer} from '../../../utils/common/topLayerAnim'\n\nfunction CopyRight(props) {\n  // const menuClicked = () => {\n  //   // check if the privacy icon clicked is from \n  //   // the top menu not from the footer\n  //   if(props.fromTop){\n  //     // close the opened menu\n  //     if (props.isOpen) closeMenuBtn() \n  //     // set menu state to false to close the navbar and change color\n  //     props.setMenu(false)\n  //     setTimeout(() => {\n  //       openTopLayer()\n  //       setTimeout(()=>{\n  //         props.setRedirect(true, '/privacy')\n  //       },800)\n  //     }, 800)\n  //   } else {\n  //     openTopLayer()\n  //     setTimeout(() => {\n  //       props.setRedirect(true, '/privacy')\n  //     }, 800)\n  //   }\n  // }\n  // // close menu function\n  // const closeMenuBtn = () => {\n  //   const el = navHoverElements()\n  //   // call function to close animation\n  //   closeMenu(false)\n  //   const n = document.querySelector('.navbar-container')\n  //   let tl = anime.timeline({\n  //     easing: 'easeInQuad',\n  //     duration: 200,\n  //   })\n  //   tl.add({\n  //       targets: n,\n  //       opacity: 0,\n  //     })\n  //     .add({\n  //       duration: 10,\n  //       complete: function (anim) {\n  //         props.setMenu(!props.isOpen)\n  //       }\n  //     })\n  //     .add({\n  //       targets: n,\n  //       opacity: 1,\n  //       complete: function (anim) {\n  //         el.middle.style.color = props.colorModes.close.main\n  //       }\n  //     })\n  // }\n  return __jsx(\"div\", {\n    className: \"copyright\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"content-center copyright-runner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    style: {\n      color: props.pColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"\\xA9 Aiman Adlawan 2020. All rights reserved.\"), __jsx(\"a\", {\n    href: \"/privacy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"privacy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Privacy Policy.\"))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    colorModes: state.state.colorModes // isOpen: state.state.isOpen,\n\n  };\n}; // const mapDispatchToProps = (dispatch) => {\n//   return {\n//     setMenu: (val) => { dispatch(action.menuIsOpen(val)) },\n//     setRedirect: (istrue, path) => {dispatch(action.setRedirect(istrue, path))}\n//   }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(CopyRight);\n\n\nexport default connect(mapStateToProps)(CopyRight);","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/components/FooterItem/CopyRight/CopyRight.js"],"names":["React","CopyRight","props","color","pColor","mapStateToProps","state","colorModes","connect"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAExB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAED,KAAK,CAACE;AAAd,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADF,EAIE;AAAG,IAAA,IAAI,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAJF,CADF,CADF;AAYD;;AAED,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,UAAU,EAAGD,KAAK,CAACA,KAAN,CAAYC,UADpB,CAEL;;AAFK,GAAP;AAID,CALD,C,CAOA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,eAAeC,OAAO,CAACH,eAAD,CAAP,CAAyBJ,SAAzB,CAAf","sourcesContent":["import React from 'react'\r\n// import './CopyRight.css'\r\n// import {connect} from 'react-redux'\r\n// import * as action from '../../../store/actions/index'\r\n// import {navHoverElements} from '../../../utils/common/elementSorter'\r\n// import {closeMenu} from '../../../utils/common/menuClickEvents'\r\n// import anime from 'animejs'\r\n// import {openTopLayer} from '../../../utils/common/topLayerAnim'\r\n\r\n\r\nfunction CopyRight(props) {\r\n\r\n  // const menuClicked = () => {\r\n  //   // check if the privacy icon clicked is from \r\n  //   // the top menu not from the footer\r\n  //   if(props.fromTop){\r\n  //     // close the opened menu\r\n  //     if (props.isOpen) closeMenuBtn() \r\n\r\n  //     // set menu state to false to close the navbar and change color\r\n  //     props.setMenu(false)\r\n      \r\n  //     setTimeout(() => {\r\n  //       openTopLayer()\r\n  //       setTimeout(()=>{\r\n  //         props.setRedirect(true, '/privacy')\r\n  //       },800)\r\n  //     }, 800)\r\n  //   } else {\r\n  //     openTopLayer()\r\n  //     setTimeout(() => {\r\n  //       props.setRedirect(true, '/privacy')\r\n  //     }, 800)\r\n  //   }\r\n  // }\r\n\r\n  // // close menu function\r\n  // const closeMenuBtn = () => {\r\n  //   const el = navHoverElements()\r\n  //   // call function to close animation\r\n  //   closeMenu(false)\r\n\r\n  //   const n = document.querySelector('.navbar-container')\r\n\r\n  //   let tl = anime.timeline({\r\n  //     easing: 'easeInQuad',\r\n  //     duration: 200,\r\n  //   })\r\n  //   tl.add({\r\n  //       targets: n,\r\n  //       opacity: 0,\r\n  //     })\r\n  //     .add({\r\n  //       duration: 10,\r\n  //       complete: function (anim) {\r\n  //         props.setMenu(!props.isOpen)\r\n  //       }\r\n  //     })\r\n  //     .add({\r\n  //       targets: n,\r\n  //       opacity: 1,\r\n  //       complete: function (anim) {\r\n  //         el.middle.style.color = props.colorModes.close.main\r\n  //       }\r\n  //     })\r\n  // }\r\n\r\n  return (\r\n    <div className=\"copyright\">\r\n      <div className=\"content-center copyright-runner\">\r\n        <p style={{color: props.pColor}}>Â© Aiman Adlawan 2020. All rights reserved.</p>\r\n        {/* <span className='privacy' \r\n          onClick={menuClicked}>Privacy Policy.</span> */}\r\n        <a href=\"/privacy\">\r\n          <span className='privacy'>Privacy Policy.</span>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    colorModes : state.state.colorModes,\r\n    // isOpen: state.state.isOpen,\r\n  }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     setMenu: (val) => { dispatch(action.menuIsOpen(val)) },\r\n//     setRedirect: (istrue, path) => {dispatch(action.setRedirect(istrue, path))}\r\n//   }\r\n// }\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(CopyRight);\r\n\r\nexport default connect(mapStateToProps)(CopyRight);"]},"metadata":{},"sourceType":"module"}