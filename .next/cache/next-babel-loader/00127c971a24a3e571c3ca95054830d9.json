{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\components\\\\Navbar\\\\NavbarMenu\\\\NavbarMenu.js\";\nvar __jsx = React.createElement;\nimport React from 'react'; // import {connect} from 'react-redux'\n// import * as action from '../../../store/actions/index'\n// import {mouseOut, mouseEnter} from '../../../utils/common/menuHoverEvents'\n// import {openMenu, closeMenu} from '../../../utils/common/menuClickEvents'\n// import {navHoverElements} from '../../../utils/common/elementSorter'\n// import anime from 'animejs'\n\nimport Close from '../../../components/Svgs/Close/Close'; // import './NavbarMenu.css'\n\nfunction NavbarMenu(props) {\n  // click event \n  var clicked = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!props.isAnimating) {\n                setAnimate(true);\n\n                if (!props.isOpen) {\n                  openMenuBtn();\n                } else {\n                  closeMenuBtn();\n                }\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function clicked() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // close menu function\n\n\n  var closeMenuBtn = function closeMenuBtn() {\n    var el = navHoverElements(); // call function to close animation\n\n    closeMenu(true); // set is animating after 1700 milsec to block multiple click events\n\n    setAnimate(false);\n    var n = document.querySelector('.navbar-container');\n    var tl = anime.timeline({\n      easing: 'easeInQuad',\n      duration: 200\n    });\n    tl.add({\n      targets: n,\n      opacity: 0\n    }).add({\n      duration: 10,\n      complete: function complete(anim) {\n        props.setMenu(!props.isOpen);\n      }\n    }).add({\n      targets: n,\n      opacity: 1,\n      complete: function complete(anim) {\n        el.middle.style.color = props.colorModes.close.main;\n      }\n    });\n  }; // open menu function\n\n\n  var openMenuBtn = function openMenuBtn() {\n    // call function to open menu animtion\n    openMenu(); // set is animating after 1700 milsec to block multiple click events\n\n    setAnimate(false);\n    var n = document.querySelector('.navbar-container');\n    var tl = anime.timeline({\n      easing: 'easeInQuad',\n      duration: 200\n    });\n    tl.add({\n      targets: n,\n      opacity: 0\n    }).add({\n      duration: 10,\n      complete: function complete(anim) {\n        props.setMenu(!props.isOpen);\n      }\n    }).add({\n      targets: n,\n      opacity: 1\n    });\n  }; // function to set isanimating state\n\n\n  var setAnimate = function setAnimate(isAnim) {\n    isAnim ? props.setAnimating(isAnim) : setTimeout(function () {\n      props.setAnimating(false);\n    }, 1700);\n  }; // hover in functions and to set specific assigned colors\n\n\n  var hoverIn = function hoverIn() {\n    props.isOpen ? mouseEnter(props.colorModes.open, 'open') : mouseEnter(props.colorModes.close, 'close');\n  }; // hover out functions and to set specific assigned colors\n\n\n  var hoverOut = function hoverOut() {\n    props.isOpen ? mouseOut(props.colorModes.open, 'open') : mouseOut(props.colorModes.close, 'close');\n  }; // console.log(props.isAnimating)\n\n\n  return __jsx(\"div\", {\n    className: \"navbar-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"front content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: \"content-center front-text\",\n    style: {\n      'color': props.colors.close.main\n    },\n    onMouseOver: hoverIn,\n    onMouseLeave: hoverOut,\n    onClick: clicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, props.isOpen ? __jsx(Close, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }) : 'Menu')), __jsx(\"div\", {\n    className: \"middle content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: \"middle-span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"back content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: \"back-span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  })));\n} // const mapStateToProps = (state) => {\n//   return {\n//     colorModes: state.state.colorModes,\n//     isOpen: state.state.isOpen,\n//     isAnimating: state.state.isAnimating,\n//     activeRoute: state.state.activeRoute\n//   }\n// }\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     setAnimating: (val) => { dispatch(action.setAnimating(val)) },\n//     setMenu: (val) => { dispatch(action.menuIsOpen(val)) }\n//   }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(NavbarMenu)\n\n\n_c = NavbarMenu;\nexport default NavbarMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavbarMenu\");","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/components/Navbar/NavbarMenu/NavbarMenu.js"],"names":["React","Close","NavbarMenu","props","clicked","isAnimating","setAnimate","isOpen","openMenuBtn","closeMenuBtn","el","navHoverElements","closeMenu","n","document","querySelector","tl","anime","timeline","easing","duration","add","targets","opacity","complete","anim","setMenu","middle","style","color","colorModes","close","main","openMenu","isAnim","setAnimating","setTimeout","hoverIn","mouseEnter","open","hoverOut","mouseOut","colors"],"mappings":"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","sourcesContent":["import React from 'react'\r\n// import {connect} from 'react-redux'\r\n// import * as action from '../../../store/actions/index'\r\n// import {mouseOut, mouseEnter} from '../../../utils/common/menuHoverEvents'\r\n// import {openMenu, closeMenu} from '../../../utils/common/menuClickEvents'\r\n// import {navHoverElements} from '../../../utils/common/elementSorter'\r\n// import anime from 'animejs'\r\nimport Close from '../../../components/Svgs/Close/Close'\r\n// import './NavbarMenu.css'\r\n\r\nfunction NavbarMenu(props) {\r\n  \r\n\r\n  // click event \r\n  const clicked = async () => {\r\n    if(!props.isAnimating) {\r\n      setAnimate(true)\r\n      if(!props.isOpen) {\r\n        openMenuBtn()\r\n      } else {\r\n        closeMenuBtn()\r\n      }\r\n    }\r\n  }\r\n\r\n  // close menu function\r\n  const closeMenuBtn = () => {\r\n    const el = navHoverElements()\r\n    // call function to close animation\r\n    closeMenu(true)\r\n\r\n    // set is animating after 1700 milsec to block multiple click events\r\n    setAnimate(false)\r\n\r\n    const n = document.querySelector('.navbar-container')\r\n    \r\n    let tl = anime.timeline({\r\n      easing: 'easeInQuad',\r\n      duration: 200,\r\n    })\r\n    tl.add({\r\n        targets: n,\r\n        opacity: 0,\r\n      })\r\n      .add({\r\n        duration: 10,\r\n        complete: function (anim) {\r\n          props.setMenu(!props.isOpen)\r\n        }\r\n      })\r\n      .add({\r\n        targets: n,\r\n        opacity: 1,\r\n        complete: function (anim) {\r\n          el.middle.style.color = props.colorModes.close.main          \r\n        }\r\n      })\r\n    }\r\n\r\n  // open menu function\r\n  const openMenuBtn = () => {\r\n    // call function to open menu animtion\r\n    openMenu()\r\n\r\n    // set is animating after 1700 milsec to block multiple click events\r\n    setAnimate(false)\r\n    const n = document.querySelector('.navbar-container')\r\n    \r\n    let tl = anime.timeline({\r\n      easing: 'easeInQuad',\r\n      duration: 200,\r\n    })\r\n    tl.add({\r\n      targets: n,\r\n      opacity: 0,\r\n    })\r\n    .add ({\r\n      duration: 10,\r\n      complete: function (anim) {\r\n        props.setMenu(!props.isOpen)\r\n      }\r\n    })\r\n    .add({\r\n      targets: n,\r\n      opacity: 1,\r\n    })\r\n  }\r\n\r\n  // function to set isanimating state\r\n  const setAnimate = (isAnim) => {\r\n    isAnim ? props.setAnimating(isAnim) : \r\n    setTimeout(()=>{\r\n      props.setAnimating(false)\r\n    }, 1700)\r\n  }\r\n\r\n  // hover in functions and to set specific assigned colors\r\n  const hoverIn = () => {\r\n    props.isOpen ? mouseEnter(props.colorModes.open, 'open') :\r\n     mouseEnter(props.colorModes.close, 'close')\r\n  }\r\n\r\n  // hover out functions and to set specific assigned colors\r\n  const hoverOut = () => {\r\n    props.isOpen ? mouseOut(props.colorModes.open, 'open') :\r\n      mouseOut(props.colorModes.close, 'close')\r\n  }\r\n\r\n  // console.log(props.isAnimating)\r\n\r\n  return (\r\n    <div className=\"navbar-menu\">\r\n      <div className=\"front content-center\">\r\n        <span className=\"content-center front-text\"\r\n          style={{'color': props.colors.close.main}}\r\n          onMouseOver={hoverIn}\r\n          onMouseLeave={hoverOut}\r\n          onClick={clicked} >\r\n            {props.isOpen ? <Close /> : 'Menu'}</span>  \r\n      </div>\r\n      <div className=\"middle content-center\">\r\n        <span className=\"middle-span\"></span>\r\n      </div>\r\n      <div className=\"back content-center\">\r\n        <span className=\"back-span\"></span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     colorModes: state.state.colorModes,\r\n//     isOpen: state.state.isOpen,\r\n//     isAnimating: state.state.isAnimating,\r\n//     activeRoute: state.state.activeRoute\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     setAnimating: (val) => { dispatch(action.setAnimating(val)) },\r\n//     setMenu: (val) => { dispatch(action.menuIsOpen(val)) }\r\n//   }\r\n// }\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(NavbarMenu)\r\nexport default NavbarMenu"]},"metadata":{},"sourceType":"module"}