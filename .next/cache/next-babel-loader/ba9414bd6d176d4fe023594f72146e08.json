{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\components\\\\Buttons\\\\WithBox\\\\WithBox.js\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { StateContext } from '../../../utils/context/stateContext';\nimport Envelop from '../../Svgs/Logos/Logos';\nimport Link from 'next/link';\n\nfunction WithBox(props) {\n  const {\n    state,\n    setState\n  } = useContext(StateContext);\n  let svg = props.withSvg ? __jsx(Envelop, {\n    type: \"envelop\",\n    colors: props.colors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }) : null;\n  return __jsx(Link, {\n    href: props.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    onClick: () => {\n      setState({\n        exitMode: 'bottomExit',\n        isTransitioning: setTransitionState(state.isTransitioning)\n      });\n    },\n    className: `content-center ${props.btnType}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, svg, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, props.text))));\n}\n\nexport default WithBox;\n\nconst setTransitionState = state => {\n  if (state === 'initialOne') return 'initialTwo';\n  if (state === 'initialTwo') return 'initialOne';\n\n  if (state !== 'initialOne' || state !== 'initialTwo') {\n    return 'initialOne';\n  }\n};","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/components/Buttons/WithBox/WithBox.js"],"names":["React","useContext","StateContext","Envelop","Link","WithBox","props","state","setState","svg","withSvg","colors","link","exitMode","isTransitioning","setTransitionState","btnType","text"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,YAAR,QAA2B,qCAA3B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBP,UAAU,CAACC,YAAD,CAApC;AAEA,MAAIO,GAAG,GAAGH,KAAK,CAACI,OAAN,GACN,MAAC,OAAD;AAAS,IAAA,IAAI,EAAC,SAAd;AAAwB,IAAA,MAAM,EAAEJ,KAAK,CAACK,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAC+C,IADzD;AAGA,SACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEL,KAAK,CAACM,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE,MAAK;AACZJ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,QAAQ,EAAE,YADH;AAEPC,QAAAA,eAAe,EAAEC,kBAAkB,CAACR,KAAK,CAACO,eAAP;AAF5B,OAAD,CAAR;AAID,KANH;AAOE,IAAA,SAAS,EAAG,kBAAiBR,KAAK,CAACU,OAAQ,EAP7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOiDP,GAPjD,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,KAAK,CAACW,IAAb,CARF,CADF,CADF,CADF;AAgBD;;AAED,eAAeZ,OAAf;;AAGA,MAAMU,kBAAkB,GAAIR,KAAD,IAAW;AACpC,MAAIA,KAAK,KAAK,YAAd,EAA4B,OAAO,YAAP;AAC5B,MAAIA,KAAK,KAAK,YAAd,EAA4B,OAAO,YAAP;;AAC5B,MAAIA,KAAK,KAAK,YAAV,IAA0BA,KAAK,KAAK,YAAxC,EAAsD;AACpD,WAAO,YAAP;AACD;AACF,CAND","sourcesContent":["import React, {useContext} from 'react'\r\nimport {StateContext} from '../../../utils/context/stateContext'\r\nimport Envelop from '../../Svgs/Logos/Logos'\r\nimport Link from 'next/link'\r\n\r\nfunction WithBox(props) {\r\n  const {state, setState} = useContext(StateContext)\r\n\r\n  let svg = props.withSvg ? \r\n    ( <Envelop type='envelop' colors={props.colors} /> ) : null\r\n\r\n  return (\r\n    <Link href={props.link}>\r\n      <a>\r\n        <button \r\n          onClick={()=> {\r\n            setState({\r\n              exitMode: 'bottomExit',\r\n              isTransitioning: setTransitionState(state.isTransitioning),\r\n            })\r\n          }}\r\n          className={`content-center ${props.btnType}`}>{svg}\r\n          <span>{props.text}</span>\r\n        </button>\r\n      </a>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default WithBox;\r\n\r\n\r\nconst setTransitionState = (state) => {\r\n  if (state === 'initialOne') return 'initialTwo'\r\n  if (state === 'initialTwo') return 'initialOne'\r\n  if (state !== 'initialOne' || state !== 'initialTwo') {\r\n    return 'initialOne'\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}