{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\components\\\\SectionBlocks\\\\SectionBlocks.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Arrow from '../Buttons/Buttons';\nimport Link from 'next/link';\nimport { PageData } from '../../utils/context/pageContext'; // import './SectionBlocks.css'\n// import {imageUrl} from '../../utils/common/common'\n// import * as action from '../../store/actions/index'\n// import {pageTransition} from '../../utils/pageAnimation/pageTransitionAnim'\n// import {connect} from 'react-redux'\n\nclass SectionBlocks extends Component {\n  render() {\n    let data = findData(this.props.title, this.context);\n\n    let blocks = __jsx(\"div\", {\n      className: \"section-block-background\",\n      style: {\n        background: `url('${data.background}') repeat center top`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"section-block-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"left-align left-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, __jsx(\"h2\", {\n      className: \"head2\",\n      style: {\n        color: data.textcolor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      className: \"show-container show\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"reveal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, data.blockTitle)), __jsx(\"div\", {\n      className: \"runner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }\n    }))))), __jsx(\"div\", {\n      className: \"section-block-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"right-align right-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"show-container show\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, __jsx(\"p\", {\n      className: \"reveal desc\",\n      style: {\n        color: data.textcolor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }\n    }, data.blockDesc), data.withArrow ? __jsx(Link, {\n      href: \"/projects\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }\n    }, __jsx(\"span\", {\n      className: \"block-arrow\" // onClick={()=>{\n      //   pageTransition()\n      //   setTimeout(() => {\n      //     props.setRedirect(true, `/projects`)\n      //   }, 1000)\n      // }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, __jsx(Arrow, {\n      type: \"arrow\",\n      colors: data.textcolor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 27\n      }\n    })))) : null), __jsx(\"div\", {\n      className: \"runner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    })))));\n\n    return __jsx(\"section\", {\n      className: \"section-block-container\",\n      style: {\n        backgroundColor: data.backgroundColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, blocks);\n  }\n\n} // const mapDispatchToProps = (dispatch) => {\n//   return {\n//     // setMenu: (val) => { dispatch(action.menuIsOpen(val)) },\n//     // checkPage: () => {dispatch(action.checkPageLocation())},\n//     // setRedirect: (istrue, path) => { dispatch(action.setRedirect(istrue, path)) }\n//   }\n// }\n// export default connect(null, mapDispatchToProps)(SectionBlocks);\n\n\n_defineProperty(SectionBlocks, \"contextType\", PageData);\n\nexport default SectionBlocks;\n\nconst findData = (title, context) => {\n  if (title === 'project' || title === 'skills') return context.withBlocks;\n  if (title === 'view more') return context.projectBlocks;\n};","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/components/SectionBlocks/SectionBlocks.js"],"names":["React","Component","Arrow","Link","PageData","SectionBlocks","render","data","findData","props","title","context","blocks","background","color","textcolor","blockTitle","blockDesc","withArrow","backgroundColor","withBlocks","projectBlocks"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport Arrow from '../Buttons/Buttons'\r\nimport Link from 'next/link'\r\nimport {PageData} from '../../utils/context/pageContext'\r\n\r\n// import './SectionBlocks.css'\r\n// import {imageUrl} from '../../utils/common/common'\r\n// import * as action from '../../store/actions/index'\r\n// import {pageTransition} from '../../utils/pageAnimation/pageTransitionAnim'\r\n// import {connect} from 'react-redux'\r\n\r\nclass SectionBlocks extends Component {\r\n  static contextType = PageData\r\n  render(){\r\n\r\n    let data = findData(this.props.title, this.context)\r\n\r\n    let blocks = \r\n      <div className='section-block-background'\r\n          style={{background: `url('${data.background}') repeat center top`}}>\r\n            \r\n          <div className='section-block-left'>\r\n            <div className=\"left-align left-block\">\r\n              <h2 className='head2'\r\n                style={{color: data.textcolor}}>\r\n                <span className='show-container show'>\r\n                  <div className='reveal'>\r\n                    <span>{data.blockTitle}</span>\r\n                  </div>\r\n                  <div className='runner'></div>\r\n                </span>\r\n              </h2>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"section-block-right\">\r\n            <div className=\"right-align right-block\">\r\n              <div className='show-container show'>\r\n                <p className='reveal desc'\r\n                  style={{color: data.textcolor}}>\r\n                  <span className=''>{data.blockDesc}</span>\r\n                  {data.withArrow ? \r\n                    <Link href='/projects'>\r\n                      <a>\r\n                        <span className='block-arrow'\r\n                          // onClick={()=>{\r\n                            //   pageTransition()\r\n                            //   setTimeout(() => {\r\n                              //     props.setRedirect(true, `/projects`)\r\n                              //   }, 1000)\r\n                              // }}\r\n                              >\r\n                          <Arrow type='arrow' colors={data.textcolor}/>\r\n                        </span>\r\n                      </a> \r\n                    </Link> : null }\r\n                </p>\r\n                <div className=\"runner\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n    return (\r\n      <section className='section-block-container' \r\n        style={{backgroundColor: data.backgroundColor}}>\r\n        {blocks}  \r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     // setMenu: (val) => { dispatch(action.menuIsOpen(val)) },\r\n//     // checkPage: () => {dispatch(action.checkPageLocation())},\r\n//     // setRedirect: (istrue, path) => { dispatch(action.setRedirect(istrue, path)) }\r\n//   }\r\n// }\r\n// export default connect(null, mapDispatchToProps)(SectionBlocks);\r\nexport default SectionBlocks;\r\n\r\n\r\nconst findData = (title, context) => {\r\n  if(title === 'project'  || title === 'skills') return context.withBlocks \r\n  if(title === 'view more') return context.projectBlocks\r\n}"]},"metadata":{},"sourceType":"module"}