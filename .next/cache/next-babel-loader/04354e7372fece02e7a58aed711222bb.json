{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\components\\\\ShortProjectView\\\\projects\\\\Projects.js\";\nvar __jsx = React.createElement;\nimport React, { Fragment, useEffect } from 'react';\nimport * as action from '../../../store/actions/index';\nimport { connect } from 'react-redux';\nimport { imageUrl } from '../../../utils/common/common';\nimport { mouseEnter, mouseOut, resize } from '../../../utils/pageAnimation/projectsHoverAnimations';\n\nfunction Projects(props) {\n  useEffect(() => {\n    resize(); // window.addEventListener('resize', resizeEls)\n  });\n  let projects = props.projects.map((proj, i) => {\n    return __jsx(\"div\", {\n      className: \"short-project-wrapper\",\n      style: {\n        background: `url('${imageUrl(proj.theme, 'png')}') no-repeat center center`\n      },\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 8\n      }\n    }, __jsx(\"div\", {\n      className: \"projects-wrapper\",\n      onMouseLeave: e => mouseOut(e),\n      onMouseEnter: e => mouseEnter(e, proj.bkgColor),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"project-img-desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"sub-reveal-container project-image show\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"sub-reveal project-img\",\n      style: {\n        background: `url('${imageUrl(proj.photo.teaser, 'png')}') no-repeat center top`,\n        backgroundSize: 'cover'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, \" \")), __jsx(\"div\", {\n      className: \"img-backer\",\n      style: {\n        backgroundColor: proj.bkgColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      className: \"project-text-desc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"project-text-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"project-text-alignleft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, __jsx(\"h3\", {\n      className: \"p-wrapper head2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      className: \"show-container p-container show\",\n      style: {\n        color: proj.textColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      className: \"reveal p-reveal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, proj.title), __jsx(\"div\", {\n      className: \"runner p-runner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }))), __jsx(\"p\", {\n      className: \"sub-reveal-container p-desc desc show\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      className: \"sub-reveal p-desc-content\",\n      style: {\n        color: proj.textColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }\n    }, proj.shortDesc))), __jsx(\"div\", {\n      className: \"project-text-alignright\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      href: `${proj.projectlinks.internal}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, __jsx(\"button\", {\n      type: \"button\",\n      className: \"sub-reveal-container content-center button-wrapper show\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }, __jsx(\"span\", {\n      className: \"sub-reveal\",\n      style: {\n        color: proj.textColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \"View project\"))))))));\n  });\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, projects);\n} // const mapStateToProps = (state) => {\n//   return {\n//     // menus: state.state.menus,\n//     activeRoute: state.state.activeRoute,\n//     // isOpen: state.state.isOpen,\n//     // isAnimating: state.state.isAnimating,\n//     // isClicked: state.state.isClicked\n//   }\n// }\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // setMenu: (val) => { dispatch(action.menuIsOpen(val)) },\n    // checkPage: () => {dispatch(action.checkPageLocation())},\n    setRedirect: (istrue, path) => {\n      dispatch(action.setRedirect(istrue, path));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Projects);","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/components/ShortProjectView/projects/Projects.js"],"names":["React","Fragment","useEffect","action","connect","imageUrl","mouseEnter","mouseOut","resize","Projects","props","projects","map","proj","i","background","theme","e","bkgColor","photo","teaser","backgroundSize","backgroundColor","color","textColor","title","shortDesc","projectlinks","internal","mapDispatchToProps","dispatch","setRedirect","istrue","path"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect} from 'react'\r\nimport * as action from '../../../store/actions/index'\r\nimport {connect} from 'react-redux'\r\nimport {imageUrl} from '../../../utils/common/common'\r\nimport { mouseEnter, mouseOut, resize } from '../../../utils/pageAnimation/projectsHoverAnimations'\r\n\r\nfunction Projects(props) {\r\n  \r\n  useEffect(()=>{\r\n    resize()\r\n    // window.addEventListener('resize', resizeEls)\r\n  })\r\n  \r\n\r\n  let projects = props.projects.map((proj, i)=>{\r\n    return (\r\n       <div className=\"short-project-wrapper\"\r\n       style={{background: `url('${imageUrl(proj.theme, 'png')}') no-repeat center center`}} key={i} >\r\n        <div className=\"projects-wrapper\" \r\n          onMouseLeave={(e)=>mouseOut(e)}\r\n          onMouseEnter={(e)=>mouseEnter(e, proj.bkgColor)}\r\n          >\r\n\r\n          <div className=\"project-img-desc\">\r\n            <div className=\"sub-reveal-container project-image show\">\r\n              <div className='sub-reveal project-img' \r\n              style={{background: `url('${imageUrl(proj.photo.teaser, 'png')}') no-repeat center top`, backgroundSize: 'cover'}}> </div>\r\n            </div>\r\n            <div className=\"img-backer\"\r\n               style={{backgroundColor: proj.bkgColor}}></div>\r\n          </div>\r\n\r\n          <div className=\"project-text-desc\">\r\n            <div className=\"project-text-wrapper\">\r\n\r\n              <div className=\"project-text-alignleft\">\r\n                <h3 className=\"p-wrapper head2\">\r\n                  <span className=\"show-container p-container show\"\r\n                    style={{color: proj.textColor}}>\r\n                    <div className=\"reveal p-reveal\">{proj.title}</div>\r\n                    <div className=\"runner p-runner\"></div>\r\n                  </span>\r\n                </h3>\r\n                <p className=\"sub-reveal-container p-desc desc show\">\r\n                  <span className=\"sub-reveal p-desc-content\"\r\n                    style={{color: proj.textColor}}>{proj.shortDesc}</span>\r\n                </p>\r\n              </div>\r\n              <div className=\"project-text-alignright\">\r\n                <a href={`${proj.projectlinks.internal}`}>\r\n                  <button type='button' \r\n                    className='sub-reveal-container content-center button-wrapper show' >\r\n                    <span className='sub-reveal'\r\n                      style={{color: proj.textColor}}>View project</span>\r\n                  </button>\r\n                </a>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      {projects}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     // menus: state.state.menus,\r\n//     activeRoute: state.state.activeRoute,\r\n//     // isOpen: state.state.isOpen,\r\n//     // isAnimating: state.state.isAnimating,\r\n//     // isClicked: state.state.isClicked\r\n//   }\r\n// }\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // setMenu: (val) => { dispatch(action.menuIsOpen(val)) },\r\n    // checkPage: () => {dispatch(action.checkPageLocation())},\r\n    setRedirect: (istrue, path) => { dispatch(action.setRedirect(istrue, path))}\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Projects);"]},"metadata":{},"sourceType":"module"}