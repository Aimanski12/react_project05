{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { createContext } from 'react';\nimport { findData } from '../data/index'; // export PageData for contextapi access\n\nexport var PageData = createContext(); // the props is received and has a value that references\n// the page data sets and returns data for that page\n\nexport function PageDataContext(props) {\n  var data = sortProps(props);\n  return __jsx(PageData.Provider, {\n    value: data\n  }, props.children);\n} // this function will sort the data provided in the props\n// it will return a set of data from the data page\n\nfunction sortProps(props) {\n  if (props.pagesets) {\n    return findData(props.pagesets);\n  } else if (props.projectsets) {\n    var data = findData('projectlists').listofprojects.filter(function (proj) {\n      return proj.title === props.projectsets;\n    });\n    return _objectSpread({}, data[0]);\n  }\n}","map":null,"metadata":{},"sourceType":"module"}