{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\components\\\\TopLayover\\\\TopLayover.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useContext } from 'react';\nimport BrandLogo from '../Svgs/BrandLogo/BrandLogo';\nimport { introAnim } from '../../utils/pageanimations/toplayover/toplayover';\nimport { checkforsession } from '../../utils/sessiondata/sessionStorage';\n\nvar TopLayover = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref2 = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var props;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            props = _ref.props;\n            useEffect(function () {\n              var session = checkforsession();\n              console.log(session);\n\n              if (session) {\n                introAnim(true);\n              } else {\n                introAnim(false);\n              }\n            });\n            return _context.abrupt(\"return\", __jsx(\"div\", {\n              className: \"top-layover\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 5\n              }\n            }, __jsx(\"div\", {\n              className: \"top-layover-container content-center\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 7\n              }\n            }, __jsx(\"div\", {\n              className: \"top-layover-logo content-center\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 9\n              }\n            }, __jsx(BrandLogo, {\n              colorMode: '#E3E1C3',\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 11\n              }\n            }), props.hasSession ? null : __jsx(\"p\", {\n              className: \"top-loading\",\n              style: {\n                'color': '#F0EED2'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 11\n              }\n            }, \"We are loading . . .\"))), __jsx(\"div\", {\n              className: \"top-layover-runner\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 7\n              }\n            }, __jsx(\"span\", {\n              className: \"top-runner\",\n              style: {\n                'background': '#CCCAAE'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 9\n              }\n            }))));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }), \"OD7bBpZva5O2jO+Puf00hKivP7c=\"));\n\n  return function TopLayover(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\n_c = TopLayover;\nexport default TopLayover;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopLayover\");","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/components/TopLayover/TopLayover.js"],"names":["React","useEffect","useContext","BrandLogo","introAnim","checkforsession","TopLayover","props","session","console","log","hasSession"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,UAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAAQC,SAAR,QAAwB,kDAAxB;AACA,SAAQC,eAAR,QAA8B,wCAA9B;;AAEA,IAAMC,UAAU;AAAA;;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAQC,YAAAA,KAAR,QAAQA,KAAR;AAEjBN,YAAAA,SAAS,CAAC,YAAI;AACZ,kBAAIO,OAAO,GAAGH,eAAe,EAA7B;AACAI,cAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,kBAAGA,OAAH,EAAW;AACTJ,gBAAAA,SAAS,CAAC,IAAD,CAAT;AACD,eAFD,MAEO;AACLA,gBAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,aARQ,CAAT;AAFiB,6CAef;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE;AAAK,cAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE;AAAK,cAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,MAAC,SAAD;AACE,cAAA,SAAS,EAAE,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGGG,KAAK,CAACI,UAAN,GAAmB,IAAnB,GACD;AAAG,cAAA,SAAS,EAAC,aAAb;AACE,cAAA,KAAK,EAAE;AAAC,yBAAS;AAAV,eADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAJF,CADF,CADF,EAWE;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE;AAAM,cAAA,SAAS,EAAC,YAAhB;AACE,cAAA,KAAK,EAAE;AAAC,8BAAa;AAAd,eADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAXF,CAfe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVL,UAAU;AAAA;AAAA;AAAA,GAAhB;;KAAMA,U;AAmCN,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useContext} from 'react'\r\nimport BrandLogo from '../Svgs/BrandLogo/BrandLogo'\r\nimport {introAnim} from '../../utils/pageanimations/toplayover/toplayover'\r\nimport {checkforsession} from '../../utils/sessiondata/sessionStorage'\r\n\r\nconst TopLayover = async ({props}) =>{\r\n  \r\n  useEffect(()=>{\r\n    let session = checkforsession()\r\n    console.log(session)\r\n    if(session){\r\n      introAnim(true)\r\n    } else {\r\n      introAnim(false)\r\n    }\r\n  })\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"top-layover\">\r\n      <div className=\"top-layover-container content-center\">\r\n        <div className=\"top-layover-logo content-center\">\r\n          <BrandLogo \r\n            colorMode={'#E3E1C3'}/>\r\n          {props.hasSession ? null : \r\n          <p className='top-loading'\r\n            style={{'color': '#F0EED2'}}>\r\n              We are loading . . .</p> }\r\n        </div>\r\n      </div>\r\n      <div className=\"top-layover-runner\">\r\n        <span className='top-runner' \r\n          style={{'background':'#CCCAAE'}}></span>\r\n      </div>\r\n     \r\n    </div> \r\n  )\r\n}\r\n\r\nexport default TopLayover"]},"metadata":{},"sourceType":"module"}