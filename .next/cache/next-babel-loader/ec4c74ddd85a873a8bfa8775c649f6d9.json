{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\components\\\\TopLayover\\\\TopLayover.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport BrandLogo from '../Svgs/BrandLogo/BrandLogo'; // import {introAnim} from '../../utils/common/topLayerAnim'\n// import * as action from '../../store/actions/index'\n// import {connect} from 'react-redux'\n// import './TopLayover.css'\n\nfunction TopLayover(props) {\n  _s();\n\n  useEffect(function () {// introAnim(props.hasSession)\n    // if(!props.hasSession){\n    //   setTimeout(()=>{\n    //   props.setSession(true)\n    //   }, 9500)\n    // }\n  });\n  return __jsx(\"div\", {\n    className: \"top-layover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"top-layover-container content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"top-layover-logo content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(BrandLogo, {\n    colorMode: 'red',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    className: \"top-layover-runner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(\"span\", {\n    className: \"top-runner\",\n    style: {\n      'background': '#CCCAAE'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })));\n} // const mapStateToProps = (state) => {\n//   return {\n//     state: state.state,\n//     hasSession: state.state.hasSession,\n//     colorModes: state.state.colorModes,\n//     topOverLayIsRunning: state.state.topOverLayIsRunning\n//   }\n// }\n// const mapDispatchToProps = (dispatch, ownProps) => {\n//   return {\n//     setSession: (val) => { dispatch(action.checkBrowserSession(val)) }\n//   }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(TopLayover)\n\n\n_s(TopLayover, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = TopLayover;\nexport default TopLayover;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopLayover\");","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/components/TopLayover/TopLayover.js"],"names":["React","useEffect","BrandLogo","TopLayover","props"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,6BAAtB,C,CACA;AACA;AACA;AACA;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAEzBH,EAAAA,SAAS,CAAC,YAAI,CACZ;AACA;AACA;AACA;AACA;AACA;AACD,GAPQ,CAAT;AASA,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,SAAS,EAAE,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAWE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,YAAhB;AACE,IAAA,KAAK,EAAE;AAAC,oBAAa;AAAd,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CADF;AAmBD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;GA/CSE,U;;KAAAA,U;AAgDT,eAAeA,UAAf","sourcesContent":["import React, {useEffect} from 'react'\r\nimport BrandLogo from '../Svgs/BrandLogo/BrandLogo'\r\n// import {introAnim} from '../../utils/common/topLayerAnim'\r\n// import * as action from '../../store/actions/index'\r\n// import {connect} from 'react-redux'\r\n// import './TopLayover.css'\r\n\r\nfunction TopLayover(props) {\r\n\r\n  useEffect(()=>{\r\n    // introAnim(props.hasSession)\r\n    // if(!props.hasSession){\r\n    //   setTimeout(()=>{\r\n    //   props.setSession(true)\r\n    //   }, 9500)\r\n    // }\r\n  })\r\n  \r\n  return (\r\n    <div className=\"top-layover\">\r\n      <div className=\"top-layover-container content-center\">\r\n        <div className=\"top-layover-logo content-center\">\r\n          <BrandLogo \r\n            colorMode={'red'}/>\r\n          {/* {props.hasSession ? null : \r\n          <p className='top-loading'\r\n            style={{'color': '#F0EED2'}}>\r\n              We are loading . . .</p> } */}\r\n        </div>\r\n      </div>\r\n      <div className=\"top-layover-runner\">\r\n        <span className='top-runner' \r\n          style={{'background':'#CCCAAE'}}></span>\r\n      </div>\r\n     \r\n    </div> \r\n  )\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     state: state.state,\r\n//     hasSession: state.state.hasSession,\r\n//     colorModes: state.state.colorModes,\r\n//     topOverLayIsRunning: state.state.topOverLayIsRunning\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch, ownProps) => {\r\n//   return {\r\n//     setSession: (val) => { dispatch(action.checkBrowserSession(val)) }\r\n//   }\r\n// }\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(TopLayover)\r\nexport default TopLayover"]},"metadata":{},"sourceType":"module"}