{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\components\\\\Buttons\\\\WithBox\\\\WithBox.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Envelop from '../../Svgs/Logos/Logos';\nimport Link from 'next/link'; // import * as action from '../../../store/actions/index'\n// import {pageTransition} from '../../../utils/pageAnimation/pageTransitionAnim'\n// import {connect} from 'react-redux'\n// import './WithBox.css'\n\nfunction WithBox(props) {\n  console.log(props);\n  let svg = props.withSvg ? __jsx(Envelop, {\n    type: \"envelop\",\n    colors: props.colors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 31\n    }\n  }) : null; // const redirect = () => {\n  //   pageTransition()\n  //   setTimeout(() => {\n  //     props.setRedirect(true, `/${props.link}`)\n  //   }, 1000)\n  // }\n\n  return __jsx(Link, {\n    href: props.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    className: `content-center ${props.btnType}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, svg, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, props.text))));\n} // const mapDispatchToProps = (dispatch) => {\n//   return {\n//     // setMenu: (val) => { dispatch(action.menuIsOpen(val)) },\n//     // checkPage: () => {dispatch(action.checkPageLocation())},\n//     setRedirect: (istrue, path) => { dispatch(action.setRedirect(istrue, path)) }\n//   }\n// }\n// export default connect(null, mapDispatchToProps)(WithBox);\n\n\nexport default WithBox;","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/components/Buttons/WithBox/WithBox.js"],"names":["React","Envelop","Link","WithBox","props","console","log","svg","withSvg","colors","link","btnType","text"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;AACA;AACA;AACA;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,MAAIG,GAAG,GAAGH,KAAK,CAACI,OAAN,GAAkB,MAAC,OAAD;AAAS,IAAA,IAAI,EAAC,SAAd;AAAwB,IAAA,MAAM,EAAEJ,KAAK,CAACK,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,GAAuE,IAAjF,CAHsB,CAKtB;AACA;AAEA;AACA;AACA;AAEA;;AAGA,SACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEL,KAAK,CAACM,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAG,kBAAiBN,KAAK,CAACO,OAAQ,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,GADL,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACQ,IADT,CAFF,CADF,CADF,CADF;AAWD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,eAAeT,OAAf","sourcesContent":["import React from 'react'\r\nimport Envelop from '../../Svgs/Logos/Logos'\r\nimport Link from 'next/link'\r\n// import * as action from '../../../store/actions/index'\r\n// import {pageTransition} from '../../../utils/pageAnimation/pageTransitionAnim'\r\n// import {connect} from 'react-redux'\r\n// import './WithBox.css'\r\n\r\nfunction WithBox(props) {\r\n  console.log(props)\r\n  \r\n  let svg = props.withSvg ? ( <Envelop type='envelop' colors={props.colors} /> ) : null\r\n\r\n  // const redirect = () => {\r\n  //   pageTransition()\r\n\r\n  //   setTimeout(() => {\r\n  //     props.setRedirect(true, `/${props.link}`)\r\n  //   }, 1000)\r\n\r\n  // }\r\n\r\n\r\n  return (\r\n    <Link href={props.link}>\r\n      <a>\r\n        <button className={`content-center ${props.btnType}`}>\r\n            {svg}\r\n          <span>\r\n            {props.text}</span>\r\n        </button>\r\n      </a>\r\n    </Link>\r\n  )\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     // setMenu: (val) => { dispatch(action.menuIsOpen(val)) },\r\n//     // checkPage: () => {dispatch(action.checkPageLocation())},\r\n//     setRedirect: (istrue, path) => { dispatch(action.setRedirect(istrue, path)) }\r\n//   }\r\n// }\r\n\r\n// export default connect(null, mapDispatchToProps)(WithBox);\r\nexport default WithBox;"]},"metadata":{},"sourceType":"module"}