{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\utils\\\\context\\\\pageContext.js\";\nvar __jsx = React.createElement;\nimport React, { createContext } from 'react';\nimport { findData } from '../data/index'; // export PageData for contextapi access\n\nexport var PageData = createContext(); // the props is received and has a value that references\n// the page data sets and returns data for that page\n\nexport function PageDataContext(props) {\n  var data = sortProps(props);\n  console.log(data);\n  return __jsx(PageData.Provider, {\n    value: findData(props.pagesets),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, props.children);\n}\n_c = PageDataContext;\n\nfunction sortProps(props) {\n  if (props.pagesets) {\n    return findData(props.pagesets);\n  } else if (props.projectsets) {\n    return findData('projectlists').listofprojects.filter(function (proj) {\n      return proj.title === props.projectsets;\n    });\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PageDataContext\");","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/utils/context/pageContext.js"],"names":["React","createContext","findData","PageData","PageDataContext","props","data","sortProps","console","log","pagesets","children","projectsets","listofprojects","filter","proj","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAAQC,QAAR,QAAuB,eAAvB,C,CAEA;;AACA,OAAO,IAAMC,QAAQ,GAAGF,aAAa,EAA9B,C,CAEP;AACA;;AACA,OAAO,SAASG,eAAT,CAA0BC,KAA1B,EAAiC;AACtC,MAAIC,IAAI,GAAGC,SAAS,CAACF,KAAD,CAApB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SACE,MAAC,QAAD,CAAU,QAAV;AAAmB,IAAA,KAAK,EAAEJ,QAAQ,CAACG,KAAK,CAACK,QAAP,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACM,QADT,CADF;AAKD;KAReP,e;;AAWhB,SAASG,SAAT,CAAoBF,KAApB,EAA2B;AACzB,MAAGA,KAAK,CAACK,QAAT,EAAmB;AACjB,WAAOR,QAAQ,CAACG,KAAK,CAACK,QAAP,CAAf;AACD,GAFD,MAEO,IAAGL,KAAK,CAACO,WAAT,EAAqB;AAC1B,WAAOV,QAAQ,CAAC,cAAD,CAAR,CAAyBW,cAAzB,CAAwCC,MAAxC,CAA+C,UAAAC,IAAI,EAAI;AAC5D,aAAOA,IAAI,CAACC,KAAL,KAAeX,KAAK,CAACO,WAA5B;AACD,KAFM,CAAP;AAGD;AACF","sourcesContent":["import React, { createContext } from 'react'\r\nimport {findData} from '../data/index'\r\n\r\n// export PageData for contextapi access\r\nexport const PageData = createContext()\r\n\r\n// the props is received and has a value that references\r\n// the page data sets and returns data for that page\r\nexport function PageDataContext (props) {\r\n  let data = sortProps(props)\r\n  console.log(data)\r\n  return (\r\n    <PageData.Provider value={findData(props.pagesets)}>\r\n      {props.children}\r\n    </PageData.Provider>\r\n  )\r\n}\r\n\r\n\r\nfunction sortProps (props) {\r\n  if(props.pagesets) {\r\n    return findData(props.pagesets)\r\n  } else if(props.projectsets){\r\n    return findData('projectlists').listofprojects.filter(proj => {\r\n      return proj.title === props.projectsets\r\n    })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}