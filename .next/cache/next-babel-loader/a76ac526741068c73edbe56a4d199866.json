{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\components\\\\SubParagraphs\\\\Subparagraphs.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment, Component } from 'react'; // import * as action from '../../store/actions/index'\n// import {pageTransition} from '../../utils/pageAnimation/pageTransitionAnim'\n// import {connect} from 'react-redux'\n// import './Subparagraphs.css'\n\nimport { PageData } from '../../utils/context/pageContext';\n\nclass Subparagraphs extends Component {\n  render() {\n    let data = this.context;\n    let sections = data.subParagraph.content.map((text, i) => {\n      return __jsx(Fragment, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, __jsx(\"h3\", {\n        className: \"p-wrapper head3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, __jsx(\"span\", {\n        className: \"show-container p-container show\",\n        style: {\n          color: data.textColors.primary\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"reveal p-reveal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }\n      }, text.title), __jsx(\"div\", {\n        className: \"runner p-runner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }\n      }))), __jsx(\"p\", {\n        className: \"sub-reveal-container p-desc desc show\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, __jsx(\"span\", {\n        className: \"sub-reveal p-desc-content\",\n        style: {\n          color: data.textColors.secondary,\n          fontWeight: data.title[0] === 'About me.' ? 500 : 600\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, text.text)));\n    });\n    return __jsx(\"article\", {\n      className: \"paragraphs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, sections, data.subParagraph.specialLinks.isTrue ? __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      className: \"sub-reveal-container p-desc p-links desc show\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      className: \"sub-reveal p-desc-content\",\n      style: {\n        color: data.textColors.secondary,\n        fontWeight: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, \"I'm excited to\", __jsx(\"a\", {\n      href: \"https://www.linkedin.com/\",\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, __jsx(\"span\", {\n      className: \"links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }\n    }, \" connect\")), \" with you great people like you.\")), __jsx(\"p\", {\n      className: \"sub-reveal-container p-desc p-links desc show\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      className: \"sub-reveal p-desc-content\",\n      style: {\n        color: data.textColors.secondary,\n        fontWeight: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, \"Click\", __jsx(\"a\", {\n      href: \"/credentials\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      className: \"links\" // onClick={()=>{\n      //   pageTransition()\n      //   setTimeout(() => {\n      //     setRedirect(true, `/credentials`)\n      //   }, 1000)\n      // }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    }, \" here\")), \" to see some of my credentials.\"))) : null);\n  }\n\n} // const mapDispatchToProps = (dispatch) => {\n//   return {\n//     // setMenu: (val) => { dispatch(action.menuIsOpen(val)) },\n//     // checkPage: () => {dispatch(action.checkPageLocation())},\n//     setRedirect: (istrue, path) => { dispatch(action.setRedirect(istrue, path)) }\n//   }\n// }\n// export default connect(null, mapDispatchToProps)(Subparagraphs);\n\n\n_defineProperty(Subparagraphs, \"contextType\", PageData);\n\nexport default Subparagraphs;","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/components/SubParagraphs/Subparagraphs.js"],"names":["React","Fragment","Component","PageData","Subparagraphs","render","data","context","sections","subParagraph","content","map","text","i","color","textColors","primary","title","secondary","fontWeight","specialLinks","isTrue"],"mappings":"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","sourcesContent":["import React, {Fragment, Component} from 'react'\r\n// import * as action from '../../store/actions/index'\r\n// import {pageTransition} from '../../utils/pageAnimation/pageTransitionAnim'\r\n// import {connect} from 'react-redux'\r\n// import './Subparagraphs.css'\r\n\r\n\r\nimport {PageData} from '../../utils/context/pageContext'\r\nclass Subparagraphs extends Component {\r\n  static contextType = PageData\r\n\r\n  render(){\r\n    let data = this.context\r\n\r\n\r\n    let sections = data.subParagraph.content.map((text, i) => {\r\n      return (\r\n        <Fragment key={i}>\r\n        <h3 className=\"p-wrapper head3\">\r\n            <span className=\"show-container p-container show\"\r\n              style={{color: data.textColors.primary}}>\r\n              <div className=\"reveal p-reveal\">{text.title}</div>\r\n              <div className=\"runner p-runner\"></div>\r\n            </span>\r\n          </h3>\r\n          <p className=\"sub-reveal-container p-desc desc show\">\r\n            <span className=\"sub-reveal p-desc-content\"\r\n              style={{color: data.textColors.secondary, fontWeight: data.title[0] ===  'About me.' ? 500 : 600}}> \r\n              {text.text}</span>\r\n          </p>\r\n        </Fragment>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <article className='paragraphs'>\r\n        {sections}\r\n\r\n        {data.subParagraph.specialLinks.isTrue ?\r\n          <Fragment>\r\n\r\n            {/* aiman please put this \r\n            \r\n              block of element to a folder in credentials \r\n\r\n              called links or whatever to make this more readble\r\n            \r\n            */}\r\n            <p className=\"sub-reveal-container p-desc p-links desc show\">\r\n              <span className=\"sub-reveal p-desc-content\"\r\n                style={{color: data.textColors.secondary, fontWeight: 500}}> \r\n                I'm excited to \r\n                  <a href=\"https://www.linkedin.com/\" \r\n                    rel='noopener noreferrer'\r\n                    target='_blank'>\r\n                      <span className='links'> connect</span></a> with you great people like you.</span>\r\n            </p>\r\n\r\n            <p className=\"sub-reveal-container p-desc p-links desc show\">\r\n              <span className=\"sub-reveal p-desc-content\"\r\n                style={{color: data.textColors.secondary, fontWeight: 500}}> \r\n                Click \r\n                <a href=\"/credentials\">\r\n                  <span className='links'\r\n                    // onClick={()=>{\r\n                    //   pageTransition()\r\n                    //   setTimeout(() => {\r\n                    //     setRedirect(true, `/credentials`)\r\n                    //   }, 1000)\r\n                    // }}\r\n                  > here</span></a> to see some of my credentials.\r\n                </span>\r\n              </p> \r\n            </Fragment> : null }\r\n      </article>\r\n    )\r\n  }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     // setMenu: (val) => { dispatch(action.menuIsOpen(val)) },\r\n//     // checkPage: () => {dispatch(action.checkPageLocation())},\r\n//     setRedirect: (istrue, path) => { dispatch(action.setRedirect(istrue, path)) }\r\n//   }\r\n// }\r\n\r\n// export default connect(null, mapDispatchToProps)(Subparagraphs);\r\nexport default Subparagraphs;\r\n"]},"metadata":{},"sourceType":"module"}