{"ast":null,"code":"import { resizeElements } from './elementSorter'; // function to run for resizing or when page loads\n\nexport function resize() {\n  resizeEl();\n  window.addEventListener('resize', resizeEl);\n  return () => {\n    window.removeEventListener('resize', resizeEl);\n  };\n} // function that will resize elements\n\nfunction resizeEl() {\n  const el = resizeElements();\n  let w = window.innerWidth;\n\n  if (w - 20 <= 1600) {\n    el.main_container.style.width = '100%';\n    el.navbar_container.style.width = '100%';\n    el.menu_container.style.width = '100%';\n    el.menu_wrapper.style.width = '100%';\n    el.menu_runner.style.width = '100%';\n    el.top_container.style.width = '100%';\n  } else {\n    el.main_container.style.width = `1600px`;\n    el.navbar_container.style.width = `1600px`;\n    el.menu_container.style.width = '1600px';\n    el.menu_wrapper.style.width = '1600px';\n    el.menu_runner.style.width = '1600px';\n    el.top_container.style.width = '1600px';\n  }\n}\n\nlet routes = ['home', 'about', 'projects', 'contacts', 'privacy', 'credentials', 'projects/projects/music-app', 'projects/reservation-app', 'projects/electric-bill', 'projects/music-player3', 'projects/music-player4', 'projects/music-player5']; // this function will generate a return the current route\n// for the state\n\nexport const checkRoute = route => {\n  let r = route.slice(1, 50);\n  let url = r === '' ? 'home' : r;\n  let b;\n  let a = routes.filter(route => {\n    return route === url;\n  });\n\n  if (a[0] === undefined) {\n    b = 'notFound';\n  } else {\n    b = a[0];\n  }\n\n  return b;\n};","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/utils/common/common.js"],"names":["resizeElements","resize","resizeEl","window","addEventListener","removeEventListener","el","w","innerWidth","main_container","style","width","navbar_container","menu_container","menu_wrapper","menu_runner","top_container","routes","checkRoute","route","r","slice","url","b","a","filter","undefined"],"mappings":"AAAA,SAAQA,cAAR,QAA8B,iBAA9B,C,CAEA;;AACA,OAAO,SAASC,MAAT,GAAiB;AACtBC,EAAAA,QAAQ;AACRC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCF,QAAlC;AACA,SAAO,MAAK;AACVC,IAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCH,QAArC;AACD,GAFD;AAGD,C,CAED;;AACA,SAASA,QAAT,GAAqB;AACnB,QAAMI,EAAE,GAAGN,cAAc,EAAzB;AACA,MAAIO,CAAC,GAAGJ,MAAM,CAACK,UAAf;;AACA,MAAGD,CAAC,GAAC,EAAF,IAAQ,IAAX,EAAgB;AACdD,IAAAA,EAAE,CAACG,cAAH,CAAkBC,KAAlB,CAAwBC,KAAxB,GAAgC,MAAhC;AACAL,IAAAA,EAAE,CAACM,gBAAH,CAAoBF,KAApB,CAA0BC,KAA1B,GAAkC,MAAlC;AACAL,IAAAA,EAAE,CAACO,cAAH,CAAkBH,KAAlB,CAAwBC,KAAxB,GAAgC,MAAhC;AACAL,IAAAA,EAAE,CAACQ,YAAH,CAAgBJ,KAAhB,CAAsBC,KAAtB,GAA8B,MAA9B;AACAL,IAAAA,EAAE,CAACS,WAAH,CAAeL,KAAf,CAAqBC,KAArB,GAA6B,MAA7B;AACAL,IAAAA,EAAE,CAACU,aAAH,CAAiBN,KAAjB,CAAuBC,KAAvB,GAA+B,MAA/B;AACD,GAPD,MAOO;AACLL,IAAAA,EAAE,CAACG,cAAH,CAAkBC,KAAlB,CAAwBC,KAAxB,GAAiC,QAAjC;AACAL,IAAAA,EAAE,CAACM,gBAAH,CAAoBF,KAApB,CAA0BC,KAA1B,GAAmC,QAAnC;AACAL,IAAAA,EAAE,CAACO,cAAH,CAAkBH,KAAlB,CAAwBC,KAAxB,GAAgC,QAAhC;AACAL,IAAAA,EAAE,CAACQ,YAAH,CAAgBJ,KAAhB,CAAsBC,KAAtB,GAA8B,QAA9B;AACAL,IAAAA,EAAE,CAACS,WAAH,CAAeL,KAAf,CAAqBC,KAArB,GAA6B,QAA7B;AACAL,IAAAA,EAAE,CAACU,aAAH,CAAiBN,KAAjB,CAAuBC,KAAvB,GAA+B,QAA/B;AACD;AACF;;AAGD,IAAIM,MAAM,GAAG,CACX,MADW,EACH,OADG,EACM,UADN,EACkB,UADlB,EAC8B,SAD9B,EACyC,aADzC,EACwD,6BADxD,EACuF,0BADvF,EACmH,wBADnH,EAC6I,wBAD7I,EACuK,wBADvK,EACiM,wBADjM,CAAb,C,CAIA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AACnC,MAAIC,CAAC,GAAGD,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAe,EAAf,CAAR;AACA,MAAIC,GAAG,GAAGF,CAAC,KAAK,EAAN,GAAW,MAAX,GAAoBA,CAA9B;AACA,MAAIG,CAAJ;AACA,MAAIC,CAAC,GAAGP,MAAM,CAACQ,MAAP,CAAcN,KAAK,IAAI;AAC7B,WAAOA,KAAK,KAAKG,GAAjB;AACD,GAFO,CAAR;;AAIA,MAAIE,CAAC,CAAC,CAAD,CAAD,KAASE,SAAb,EAAwB;AACtBH,IAAAA,CAAC,GAAG,UAAJ;AACD,GAFD,MAEO;AACLA,IAAAA,CAAC,GAAGC,CAAC,CAAC,CAAD,CAAL;AACD;;AAED,SAAOD,CAAP;AACD,CAfM","sourcesContent":["import {resizeElements } from './elementSorter'\r\n\r\n// function to run for resizing or when page loads\r\nexport function resize(){\r\n  resizeEl()\r\n  window.addEventListener('resize', resizeEl)\r\n  return ()=> { \r\n    window.removeEventListener('resize', resizeEl)\r\n  }\r\n}\r\n\r\n// function that will resize elements\r\nfunction resizeEl () {\r\n  const el = resizeElements()\r\n  let w = window.innerWidth\r\n  if(w-20 <= 1600){\r\n    el.main_container.style.width = '100%'\r\n    el.navbar_container.style.width = '100%'\r\n    el.menu_container.style.width = '100%'\r\n    el.menu_wrapper.style.width = '100%'\r\n    el.menu_runner.style.width = '100%'\r\n    el.top_container.style.width = '100%'\r\n  } else {\r\n    el.main_container.style.width = `1600px`\r\n    el.navbar_container.style.width = `1600px`\r\n    el.menu_container.style.width = '1600px'\r\n    el.menu_wrapper.style.width = '1600px'\r\n    el.menu_runner.style.width = '1600px'\r\n    el.top_container.style.width = '1600px'\r\n  }\r\n}\r\n\r\n\r\nlet routes = [\r\n  'home', 'about', 'projects', 'contacts', 'privacy', 'credentials', 'projects/projects/music-app', 'projects/reservation-app', 'projects/electric-bill', 'projects/music-player3', 'projects/music-player4', 'projects/music-player5'\r\n]\r\n\r\n// this function will generate a return the current route\r\n// for the state\r\nexport const checkRoute = (route) => {\r\n  let r = route.slice(1, 50)\r\n  let url = r === '' ? 'home' : r\r\n  let b;\r\n  let a = routes.filter(route => {\r\n    return route === url\r\n  })\r\n\r\n  if (a[0] === undefined) {\r\n    b = 'notFound'\r\n  } else {\r\n    b = a[0]\r\n  }\r\n\r\n  return b\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}