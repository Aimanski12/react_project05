{"ast":null,"code":"import { topLayoverElements } from '../../common/elementSorter';\nimport anime from 'animejs'; // function for intro animation\n\nexport function introAnim(hasSession) {\n  var el = topLayoverElements(); // if it has a session no animation to run\n\n  if (hasSession === true) {\n    el.top.style.display = 'none';\n  } // if it has no session then we will run the animation\n\n\n  if (hasSession === false) {\n    el.top.style.display = 'block';\n    el.container.style.overflow = 'hidden';\n    el.svg.style.opacity = 0;\n    el.text.style.opacity = 0;\n    el.top.style.display = 'block';\n    el.runner.style.height = '100vh';\n    el.runner.style.width = '100%';\n    runTopAnimation(el);\n  }\n} // function to run if the browser has no sessions\n\nfunction runTopAnimation(el) {\n  var tl = anime.timeline({\n    easing: 'easeInSine'\n  });\n  tl.add({\n    targets: [el.svg, el.text],\n    opacity: 1,\n    duration: 1000\n  }).add({\n    duration: 500\n  }).add({\n    targets: [el.text],\n    opacity: 0,\n    duration: 400\n  }).add({\n    targets: [el.text],\n    opacity: 1,\n    duration: 400\n  }).add({\n    duration: 700\n  }).add({\n    targets: [el.text],\n    opacity: 0,\n    duration: 400\n  }).add({\n    targets: [el.text],\n    opacity: 1,\n    duration: 400\n  }).add({\n    duration: 700\n  }).add({\n    targets: [el.text],\n    opacity: 0,\n    duration: 400\n  }).add({\n    targets: [el.text],\n    opacity: 1,\n    duration: 400\n  }).add({\n    duration: 700\n  }).add({\n    targets: [el.text, el.svg],\n    opacity: 0,\n    duration: 800\n  }).add({\n    duration: 700\n  }).add({\n    targets: [el.runner],\n    height: 0,\n    easing: 'easeInSine',\n    duration: 500\n  }).add({\n    duration: 100,\n    complete: function complete(anim) {\n      el.top.style.display = 'none';\n      el.runner.style.height = '100vh';\n      el.runner.style.width = '0';\n      el.container.style.overflow = 'visible';\n    }\n  });\n} // function to open and run the top layer animation\n\n\nexport function openTopLayer() {\n  var el = topLayoverElements();\n  el.top.style.display = 'block';\n  el.container.style.overflow = 'hidden';\n  el.runner.style.height = '100vh';\n  el.runner.style.width = '0';\n  el.svg.style.width = '70%';\n  var tl = anime.timeline({\n    easing: 'easeInSine'\n  });\n  tl.add({\n    targets: el.runner,\n    duration: 500,\n    width: '100%',\n    complete: function complete(anim) {// anime({\n      //   targets: el.svg,\n      //   opacity: 1,\n      //   duration: 500,\n      // })\n    }\n  }); // .add({\n  //   duration: 500,\n  //   begin: function (anim) {\n  //     el.runner.style.right = 0\n  //     el.runner.style.float = 'right'\n  //   }\n  // })\n} // function for closing the top layer\n\nexport function closeTopLayer() {\n  var el = topLayoverElements();\n  el.top.style.display = 'block';\n  el.container.style.overflow = 'hidden';\n  el.runner.style.height = '100vh';\n  el.runner.style.width = '100%';\n  el.runner.style.right = 0;\n  el.runner.style[\"float\"] = 'right';\n  el.svg.style.width = '70%';\n  var nav = document.querySelector('.navbar-container');\n  var tl = anime.timeline({\n    easing: 'easeInSine'\n  });\n  tl.add({\n    duration: 400\n  }).add({\n    targets: el.runner,\n    duration: 400,\n    width: '0%',\n    begin: function begin(anim) {\n      el.svg.style.opacity = 0;\n    }\n  }).add({\n    duration: 40,\n    complete: function complete(anim) {\n      el.top.style.display = 'none';\n      el.container.style.overflow = 'visible';\n      el.runner.style.height = '100vh';\n      el.runner.style.width = '100%';\n      el.runner.style.left = 0;\n      el.runner.style[\"float\"] = 'left';\n      nav.style.opacity = 1;\n    }\n  });\n}","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/utils/pageanimations/toplayover/toplayover.js"],"names":["topLayoverElements","anime","introAnim","hasSession","el","top","style","display","container","overflow","svg","opacity","text","runner","height","width","runTopAnimation","tl","timeline","easing","add","targets","duration","complete","anim","openTopLayer","closeTopLayer","right","nav","document","querySelector","begin","left"],"mappings":"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","sourcesContent":["import {topLayoverElements} from '../../common/elementSorter'\r\nimport anime from 'animejs'\r\n\r\n// function for intro animation\r\nexport function introAnim (hasSession) {\r\n  const el = topLayoverElements()\r\n\r\n  // if it has a session no animation to run\r\n  if(hasSession === true){\r\n    el.top.style.display = 'none'\r\n  } \r\n\r\n  // if it has no session then we will run the animation\r\n  if(hasSession === false) {\r\n    el.top.style.display = 'block'\r\n    el.container.style.overflow = 'hidden'\r\n    el.svg.style.opacity = 0\r\n    el.text.style.opacity = 0\r\n    el.top.style.display = 'block'\r\n    el.runner.style.height = '100vh'\r\n    el.runner.style.width = '100%'\r\n    runTopAnimation(el)\r\n  }\r\n}\r\n\r\n// function to run if the browser has no sessions\r\nfunction runTopAnimation (el) {\r\n  let tl = anime.timeline({easing: 'easeInSine'})\r\n  \r\n  tl.add({\r\n    targets: [el.svg, el.text],\r\n    opacity: 1,\r\n    duration: 1000,\r\n  })\r\n  .add({\r\n    duration: 500,\r\n  })\r\n  .add({\r\n    targets: [el.text],\r\n    opacity: 0,\r\n    duration: 400,\r\n  })\r\n  .add({\r\n    targets: [el.text],\r\n    opacity: 1,\r\n    duration: 400,\r\n  })\r\n  .add({\r\n    duration: 700,\r\n  })\r\n  .add({\r\n    targets: [el.text],\r\n    opacity: 0,\r\n    duration: 400,\r\n  })\r\n  .add({\r\n    targets: [el.text],\r\n    opacity: 1,\r\n    duration: 400,\r\n  })\r\n  .add({\r\n    duration: 700,\r\n  })\r\n  .add({\r\n    targets: [el.text],\r\n    opacity: 0,\r\n    duration: 400,\r\n  })\r\n  .add({\r\n    targets: [el.text],\r\n    opacity: 1,\r\n    duration: 400,\r\n  })\r\n  .add({\r\n    duration: 700,\r\n  })\r\n  .add({\r\n    targets: [el.text, el.svg],\r\n    opacity: 0,\r\n    duration: 800,\r\n  })\r\n  .add({\r\n    duration: 700,\r\n  })\r\n  .add({\r\n    targets: [el.runner],\r\n    height: 0,\r\n    easing: 'easeInSine',\r\n    duration: 500,\r\n  })\r\n  .add({\r\n    duration: 100,\r\n    complete: function (anim) {\r\n      el.top.style.display = 'none'\r\n      el.runner.style.height = '100vh'\r\n      el.runner.style.width = '0'\r\n      el.container.style.overflow = 'visible'\r\n    }\r\n  })\r\n\r\n}\r\n\r\n\r\n// function to open and run the top layer animation\r\nexport function openTopLayer () {\r\n  const el = topLayoverElements()\r\n  el.top.style.display = 'block'\r\n  el.container.style.overflow = 'hidden'\r\n  el.runner.style.height = '100vh'\r\n  el.runner.style.width = '0'\r\n  el.svg.style.width = '70%'\r\n\r\n  let tl = anime.timeline({easing: 'easeInSine'})\r\n  tl\r\n  .add({\r\n    targets: el.runner,\r\n    duration: 500,\r\n    width: '100%',\r\n    complete: function (anim) {\r\n      // anime({\r\n      //   targets: el.svg,\r\n      //   opacity: 1,\r\n      //   duration: 500,\r\n      // })\r\n    } \r\n  })\r\n  // .add({\r\n  //   duration: 500,\r\n  //   begin: function (anim) {\r\n  //     el.runner.style.right = 0\r\n  //     el.runner.style.float = 'right'\r\n  //   }\r\n  // })\r\n}\r\n\r\n\r\n// function for closing the top layer\r\nexport function closeTopLayer () {\r\n  const el = topLayoverElements()\r\n  el.top.style.display = 'block'\r\n  el.container.style.overflow = 'hidden'\r\n  el.runner.style.height = '100vh'\r\n  el.runner.style.width = '100%'\r\n  el.runner.style.right = 0\r\n  el.runner.style.float = 'right'\r\n  el.svg.style.width = '70%'\r\n  const nav = document.querySelector('.navbar-container')\r\n\r\nlet tl = anime.timeline({easing: 'easeInSine'})\r\n  tl\r\n  .add({\r\n    duration: 400,\r\n  })\r\n  .add({\r\n    targets: el.runner,\r\n    duration: 400,\r\n    width: '0%',\r\n    begin: function (anim) {\r\n      el.svg.style.opacity = 0\r\n    } \r\n  })\r\n  .add({\r\n    duration: 40,\r\n    complete: function (anim) {\r\n      el.top.style.display = 'none'\r\n      el.container.style.overflow = 'visible'\r\n      el.runner.style.height = '100vh'\r\n      el.runner.style.width = '100%'\r\n      el.runner.style.left = 0\r\n      el.runner.style.float = 'left'\r\n      nav.style.opacity = 1\r\n    }\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}