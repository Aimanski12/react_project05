{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\components\\\\Buttons\\\\Buttons.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Button from '../Svgs/Logos/Logos';\nimport WithBox from './WithBox/WithBox'; // function Buttons(props) {\n\nvar Buttons = /*#__PURE__*/function (_Component) {\n  _inherits(Buttons, _Component);\n\n  var _super = _createSuper(Buttons);\n\n  function Buttons() {\n    _classCallCheck(this, Buttons);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Buttons, [{\n    key: \"render\",\n    value: function (_render) {\n      function render() {\n        return _render.apply(this, arguments);\n      }\n\n      render.toString = function () {\n        return _render.toString();\n      };\n\n      return render;\n    }(function () {\n      var button;\n\n      if (props.type === 'withText') {\n        button = __jsx(Button, {\n          type: props.type,\n          colors: props.colors,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 16\n          }\n        });\n      }\n\n      if (props.type === 'withBox') {\n        button = __jsx(WithBox, {\n          btnType: props.btnType,\n          link: props.link,\n          text: props.text,\n          withSvg: props.withSvg,\n          colors: props.colors,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 16\n          }\n        });\n      }\n\n      if (props.type === 'arrow') {\n        button = __jsx(Button, {\n          colors: props.colors,\n          type: props.type,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 16\n          }\n        });\n      }\n\n      render(button);\n    })\n  }]);\n\n  return Buttons;\n}(Component); // let contextType = PageData\n// console.log(props)\n//   return (\n//   )\n// }\n\n\nexport default Buttons;","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/components/Buttons/Buttons.js"],"names":["React","Component","Button","WithBox","Buttons","button","props","type","colors","btnType","link","text","withSvg","render"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CAEA;;IACMC,O;;;;;;;;;;;;;;;;;;;;;;;kBAGI;AACN,UAAIC,MAAJ;;AACA,UAAGC,KAAK,CAACC,IAAN,KAAe,UAAlB,EAA8B;AAC5BF,QAAAA,MAAM,GAAG,MAAC,MAAD;AAAQ,UAAA,IAAI,EAAEC,KAAK,CAACC,IAApB;AAA0B,UAAA,MAAM,EAAED,KAAK,CAACE,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AACD;;AAED,UAAGF,KAAK,CAACC,IAAN,KAAe,SAAlB,EAA6B;AAC3BF,QAAAA,MAAM,GAAG,MAAC,OAAD;AACC,UAAA,OAAO,EAAEC,KAAK,CAACG,OADhB;AAEC,UAAA,IAAI,EAAEH,KAAK,CAACI,IAFb;AAGC,UAAA,IAAI,EAAEJ,KAAK,CAACK,IAHb;AAIC,UAAA,OAAO,EAAEL,KAAK,CAACM,OAJhB;AAKC,UAAA,MAAM,EAAEN,KAAK,CAACE,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAMD;;AAED,UAAGF,KAAK,CAACC,IAAN,KAAe,OAAlB,EAA2B;AACzBF,QAAAA,MAAM,GAAG,MAAC,MAAD;AAAQ,UAAA,MAAM,EAAEC,KAAK,CAACE,MAAtB;AAA8B,UAAA,IAAI,EAAEF,KAAK,CAACC,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AACD;;AAEDM,MAAAA,MAAM,CACHR,MADG,CAAN;AAGD,K;;;;EAzBmBJ,S,GA6BpB;AAEA;AAEF;AACA;AACA;;;AAEA,eAAeG,OAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport Button from '../Svgs/Logos/Logos'\r\nimport WithBox from './WithBox/WithBox'\r\n\r\n// function Buttons(props) {\r\nclass Buttons extends Component {\r\n\r\n\r\n  render(){\r\n    let button;\r\n    if(props.type === 'withText') {\r\n      button = <Button type={props.type} colors={props.colors}/> \r\n    }\r\n    \r\n    if(props.type === 'withBox') {\r\n      button = <WithBox \r\n                btnType={props.btnType}\r\n                link={props.link}\r\n                text={props.text} \r\n                withSvg={props.withSvg} \r\n                colors={props.colors}/> \r\n    }\r\n    \r\n    if(props.type === 'arrow') {\r\n      button = <Button colors={props.colors} type={props.type}/> \r\n    }\r\n\r\n    render(\r\n      (button)\r\n    )\r\n  }\r\n}\r\n\r\n\r\n  // let contextType = PageData\r\n\r\n  // console.log(props)\r\n\r\n//   return (\r\n//   )\r\n// }\r\n\r\nexport default Buttons;\r\n"]},"metadata":{},"sourceType":"module"}