{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { UAParser } from 'ua-parser-js';\nimport axios from 'axios'; // get sessionStorage\n// export const sessionStore = JSON.parse(sessionStore.getItem('websession'))\n\nexport function sessionStore() {\n  var session = window.sessionStorage.websession;\n\n  if (session === undefined) {\n    return false;\n  } else {\n    return JSON.parse(session);\n  }\n} // firebase url\n\nvar firebaseUrl = 'https://aimanadlawansite.firebaseio.com'; // function to generate firebase url\n\nexport function generateUrl(urlDirection) {\n  var d = getTime('url');\n  var url = \"\".concat(firebaseUrl, \"/\").concat(urlDirection, \"/\").concat(d.y, \"/\").concat(d.m, \"/\").concat(d.dy, \"_\").concat(d.de);\n  return url;\n} // function to get user data\n\nexport var getUserData = function getUserData() {\n  var parser = new UAParser();\n  return parser.getResult();\n}; // get user device data\n\nexport var getIP = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var userIp;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get('https://ipapi.co/json/').then(function (res) {\n              if (res.status === 200) {\n                if (res.data) {\n                  var data = res.data;\n                  userIp = {\n                    cap: data.country_capital,\n                    city: data.city,\n                    country: data.country_name,\n                    ip: data.ip,\n                    lat: data.latitude,\n                    \"long\": data.longitude,\n                    timeZ: data.timezone,\n                    region: data.region,\n                    postC: data.postal,\n                    internet: data.org\n                  };\n                }\n              }\n            })[\"catch\"](function (err) {\n              if (err) {\n                userIp = {\n                  blocked: 'User blocked this data.'\n                };\n              }\n            });\n\n          case 2:\n            _context.next = 4;\n            return userIp;\n\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getIP() {\n    return _ref.apply(this, arguments);\n  };\n}(); // check if the session has expired\n\nexport function checkIfExp(time) {\n  var now = getTime('now');\n  var runTime = Math.floor((now - time) / 1000 / 60);\n\n  if (runTime >= 60) {\n    return true;\n  } else {\n    return false;\n  }\n} // function to get time\n\nexport var getTime = function getTime(url) {\n  var date = new Date();\n  var d = date.getDate();\n  var month = date.getMonth(); // get time for url structure query\n\n  if (url === 'url') {\n    return {\n      y: date.getFullYear(),\n      m: \"\".concat(n(month + 1), \"_\").concat(mn[date.getMonth()]),\n      dy: n(d),\n      de: dt[date.getDay()]\n    };\n  } else if (url === 'timeOfVisit') {\n    // get time for the time of visit\n    return {\n      time: \"\".concat(date.getHours(), \": \").concat(date.getMinutes(), \": \").concat(date.getSeconds())\n    };\n  } else if (url === 'now') {\n    // get time for the time of visit\n    return date.getTime();\n  }\n}; // filter number if data is single digit\n\nvar n = function n(d) {\n  return d < 10 ? \"0\".concat(d) : d;\n}; // set the month to the exact number index of the array\n\n\nvar mn = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // set the day to the exact number index of the array\n\nvar dt = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nvar routes = ['home', 'about', 'projects', 'contacts', 'privacy', 'credentials', 'projects/projects/music-app', 'projects/reservation-app', 'projects/electric-bill', 'projects/music-player3', 'projects/music-player4', 'projects/music-player5']; // this function will generate a return the current route\n// for the state\n\nexport var checkRoute = function checkRoute(route) {\n  var r = route.slice(1, 50);\n  var url = r === '' ? 'home' : r;\n  var b;\n  var a = routes.filter(function (route) {\n    return route === url;\n  });\n\n  if (a[0] === undefined) {\n    b = 'notFound';\n  } else {\n    b = a[0];\n  }\n\n  return b;\n};","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/utils/sessiondata/commonfunctions.js"],"names":["UAParser","axios","sessionStore","session","window","sessionStorage","websession","undefined","JSON","parse","firebaseUrl","generateUrl","urlDirection","d","getTime","url","y","m","dy","de","getUserData","parser","getResult","getIP","get","then","res","status","data","userIp","cap","country_capital","city","country","country_name","ip","lat","latitude","longitude","timeZ","timezone","region","postC","postal","internet","org","err","blocked","checkIfExp","time","now","runTime","Math","floor","date","Date","getDate","month","getMonth","getFullYear","n","mn","dt","getDay","getHours","getMinutes","getSeconds","routes","checkRoute","route","r","slice","b","a","filter"],"mappings":"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","sourcesContent":["import {UAParser} from 'ua-parser-js'\r\nimport axios from 'axios'\r\n\r\n// get sessionStorage\r\n// export const sessionStore = JSON.parse(sessionStore.getItem('websession'))\r\nexport function sessionStore () {\r\n  let session = window.sessionStorage.websession\r\n  if(session === undefined){\r\n    return false\r\n  } else {\r\n    return JSON.parse(session)\r\n  }\r\n}\r\n\r\n// firebase url\r\nconst firebaseUrl = 'https://aimanadlawansite.firebaseio.com'\r\n\r\n\r\n\r\n// function to generate firebase url\r\nexport function generateUrl(urlDirection) {\r\n  const d = getTime('url')\r\n  let url = `${firebaseUrl}/${urlDirection}/${d.y}/${d.m}/${d.dy}_${d.de}`\r\n  return url\r\n}\r\n\r\n\r\n\r\n// function to get user data\r\nexport const getUserData = () => {\r\n  let parser = new UAParser()\r\n  return parser.getResult()\r\n}\r\n\r\n\r\n\r\n// get user device data\r\nexport const getIP = async () => {\r\n  let userIp\r\n\r\n  await axios.get('https://ipapi.co/json/')\r\n    .then(res => {\r\n      if (res.status === 200) {\r\n        if (res.data) {\r\n          let data = res.data\r\n          userIp = {\r\n            cap: data.country_capital,\r\n            city: data.city,\r\n            country: data.country_name,\r\n            ip: data.ip,\r\n            lat: data.latitude,\r\n            long: data.longitude,\r\n            timeZ: data.timezone,\r\n            region: data.region,\r\n            postC: data.postal,\r\n            internet: data.org,\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(err => {\r\n      if (err) {\r\n        userIp = {\r\n          blocked: 'User blocked this data.'\r\n        }\r\n      }\r\n    })\r\n  return await userIp\r\n}\r\n\r\n\r\n\r\n// check if the session has expired\r\nexport function checkIfExp(time) {\r\n  let now = getTime('now')\r\n  let runTime = Math.floor(((now - time) / 1000) / 60)\r\n  if (runTime >= 60) {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\n\r\n\r\n// function to get time\r\nexport const getTime = (url) => {\r\n  const date = new Date()\r\n  let d = date.getDate()\r\n  let month = date.getMonth()\r\n\r\n  // get time for url structure query\r\n  if (url === 'url') {\r\n    return {\r\n      y: date.getFullYear(),\r\n      m: `${n(month+1)}_${mn[date.getMonth()]}`,\r\n      dy: n(d),\r\n      de: dt[date.getDay()],\r\n    }\r\n  } else if (url === 'timeOfVisit') {\r\n    // get time for the time of visit\r\n    return {\r\n      time: `${date.getHours()}: ${date.getMinutes()}: ${date.getSeconds()}`\r\n    }\r\n  } else if (url === 'now') {\r\n    // get time for the time of visit\r\n    return date.getTime()\r\n  }\r\n}\r\n\r\n\r\n\r\n// filter number if data is single digit\r\nconst n = (d) => {\r\n  return d < 10 ? `0${d}` : d\r\n}\r\n\r\n\r\n\r\n// set the month to the exact number index of the array\r\nconst mn = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n\r\n// set the day to the exact number index of the array\r\nconst dt = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\n\r\n\r\n\r\nlet routes = [\r\n   'home', 'about', 'projects', 'contacts', 'privacy', 'credentials', 'projects/projects/music-app', 'projects/reservation-app', 'projects/electric-bill', 'projects/music-player3', 'projects/music-player4', 'projects/music-player5']\r\n\r\n// this function will generate a return the current route\r\n// for the state\r\nexport const checkRoute = (route) => {\r\n   let r = route.slice(1, 50)\r\n   let url = r === '' ? 'home' : r\r\n   let b;\r\n   let a = routes.filter(route => {\r\n           return route === url\r\n         })\r\n   \r\n   if(a[0] === undefined) {\r\n      b = 'notFound'\r\n   } else {\r\n      b = a[0]\r\n   }\r\n   \r\n   return b\r\n}\r\n"]},"metadata":{},"sourceType":"module"}