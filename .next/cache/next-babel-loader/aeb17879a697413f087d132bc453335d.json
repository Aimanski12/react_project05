{"ast":null,"code":"import anime from 'animejs';\nexport function scrollAnimation(page) {\n  // console.log(page)\n  if (window.innerWidth > 768) {\n    slideInElementsOnScroll();\n  }\n} // function that will debounce the scroll event to every\n// 70ms so to avoid performance issue\n\nfunction debounce(func, wait = 100, immediate = true) {\n  console.log(func());\n  let timeout;\n  return function () {\n    let context = this,\n        args = arguments;\n\n    let later = function () {\n      timeout = null;\n\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n\n    let callNow = immediate && timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n} // function for slide animation\n\n\nfunction slideInAnimation() {\n  console.log('asdfasdf'); // let els = document.querySelectorAll('.show')\n  // els.forEach(el => {\n  //   // const slideInAt = (window.scrollY + window.innerHeight) - (el.clientHeight/2)\n  //   const slideInAt = (window.scrollY + window.innerHeight) - (60)\n  //   const clientHeight = el.getBoundingClientRect().top + window.scrollY\n  //   const isPassed = slideInAt > clientHeight\n  //   const elIsNotDone = !el.classList.contains('done')\n  //   const elChildren = el.children\n  //   const isProjectImage = el.classList.contains('project-image')\n  //   const isMessageCont = el.classList.contains('message-container')\n  //     if(isPassed && elIsNotDone) {\n  //       removeOverlay(el)\n  //       if(elChildren.length === 2){\n  //         showSlider(elChildren)\n  //       } else if (elChildren.length === 1) {\n  //         // check if this element has a class of project-image\n  //         if(isProjectImage) setTimer(showOpacity, elChildren[0], el)\n  //         // check if this class has a message-container\n  //         if(isMessageCont) {\n  //           el.classList.add('done')\n  //           showOpacity(elChildren[0])\n  //         }\n  //         // check if the element does not contain both the class names\n  //         if(!isProjectImage && !isMessageCont) {\n  //           setTimer(slideUp, elChildren[0], el)\n  //         }\n  //       }\n  //     }\n  // })  \n}\n\nfunction setTimer(func, child, el) {\n  setTimeout(() => {\n    func(child);\n    el.classList.add('done');\n  }, 600);\n}\n\nfunction removeOverlay(el) {\n  const hasHeaderClass = el.classList.contains('header-social-container');\n  const hasScrollClass = el.classList.contains('scroll-cover');\n\n  if (hasHeaderClass || hasScrollClass) {\n    setTimeout(() => {\n      el.style.overflow = 'visible';\n    }, 1200);\n  }\n} // animation that will run the slider and we are using the \n// timeline animation make a smooth effect\n\n\nfunction showSlider(el) {\n  let tl = anime.timeline({});\n  const parent = el[1].closest('.show');\n  parent.classList.add('done');\n  tl.add({\n    targets: el[1],\n    width: '100%',\n    easing: 'easeInSine',\n    duration: 300\n  }).add({\n    targets: el[1],\n    duration: 400,\n    complete: function (anim) {\n      el[1].style.right = 0;\n    }\n  }).add({\n    targets: el[1],\n    width: '0%',\n    easing: 'easeInSine',\n    duration: 300,\n    begin: function (anim) {\n      slideUp(el[0]);\n    }\n  });\n} // function that will make the image opacity from \n// 0 to 1 to make the image visible\n\n\nfunction showOpacity(el) {\n  // el.style.opacity = 0\n  anime({\n    targets: el,\n    opacity: {\n      duration: 500,\n      value: 1,\n      delay: 200,\n      easing: 'easeInSine'\n    }\n  });\n} // this will make the text or paragraphs visible\n// this slide up the text\n\n\nfunction slideUp(el) {\n  let tl = anime.timeline({});\n  el.style.transform = 'translateY(60px)';\n  tl.add({\n    targets: el,\n    opacity: {\n      duration: 550,\n      value: 1,\n      delay: 200,\n      easing: 'linear'\n    },\n    translateY: {\n      value: 0,\n      easing: 'easeOutElastic(10, 2)',\n      duration: 700\n    }\n  });\n} // call the animation function when we are scrolling the page\n\n\nexport function slideInElementsOnScroll() {\n  debounce(slideInAnimation);\n}","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/utils/pageanimations/scrollanimation/scrollanimation.js"],"names":["anime","scrollAnimation","page","window","innerWidth","slideInElementsOnScroll","debounce","func","wait","immediate","console","log","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","slideInAnimation","setTimer","child","el","classList","add","removeOverlay","hasHeaderClass","contains","hasScrollClass","style","overflow","showSlider","tl","timeline","parent","closest","targets","width","easing","duration","complete","anim","right","begin","slideUp","showOpacity","opacity","value","delay","transform","translateY"],"mappings":"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","sourcesContent":["import anime from 'animejs'\r\n\r\nexport function scrollAnimation(page) {\r\n  // console.log(page)\r\n  if(window.innerWidth > 768) {\r\n    slideInElementsOnScroll()\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// function that will debounce the scroll event to every\r\n// 70ms so to avoid performance issue\r\nfunction debounce (func, wait = 100, immediate = true){\r\n  console.log(func())\r\n  let timeout;\r\n  return function() {\r\n    let context = this, args = arguments;\r\n    let later = function () {\r\n      timeout = null;\r\n      if(!immediate) {\r\n        func.apply(context, args)\r\n      }\r\n    }\r\n    let callNow = immediate && timeout\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait)\r\n    if(callNow) {\r\n      func.apply(context, args)\r\n    }\r\n  }\r\n}\r\n\r\n// function for slide animation\r\nfunction slideInAnimation(){\r\n  console.log('asdfasdf')\r\n  // let els = document.querySelectorAll('.show')\r\n\r\n  // els.forEach(el => {\r\n  //   // const slideInAt = (window.scrollY + window.innerHeight) - (el.clientHeight/2)\r\n  //   const slideInAt = (window.scrollY + window.innerHeight) - (60)\r\n  //   const clientHeight = el.getBoundingClientRect().top + window.scrollY\r\n\r\n  //   const isPassed = slideInAt > clientHeight\r\n  //   const elIsNotDone = !el.classList.contains('done')\r\n  //   const elChildren = el.children\r\n  //   const isProjectImage = el.classList.contains('project-image')\r\n  //   const isMessageCont = el.classList.contains('message-container')\r\n    \r\n  //     if(isPassed && elIsNotDone) {\r\n  //       removeOverlay(el)\r\n  //       if(elChildren.length === 2){\r\n  //         showSlider(elChildren)\r\n\r\n  //       } else if (elChildren.length === 1) {\r\n\r\n  //         // check if this element has a class of project-image\r\n  //         if(isProjectImage) setTimer(showOpacity, elChildren[0], el)\r\n\r\n  //         // check if this class has a message-container\r\n  //         if(isMessageCont) {\r\n  //           el.classList.add('done')\r\n  //           showOpacity(elChildren[0])\r\n  //         }\r\n\r\n  //         // check if the element does not contain both the class names\r\n  //         if(!isProjectImage && !isMessageCont) {\r\n  //           setTimer(slideUp, elChildren[0], el)\r\n  //         }\r\n          \r\n  //       }\r\n  //     }\r\n\r\n  // })  \r\n}  \r\n\r\nfunction setTimer(func, child, el) {\r\n  setTimeout(()=>{\r\n    func(child)\r\n    el.classList.add('done')\r\n  }, 600)\r\n}\r\n\r\n\r\n\r\nfunction removeOverlay (el){\r\n  const hasHeaderClass = el.classList.contains('header-social-container')\r\n  const hasScrollClass = el.classList.contains('scroll-cover')\r\n  if(hasHeaderClass || hasScrollClass){\r\n    setTimeout(()=>{\r\n      el.style.overflow = 'visible'\r\n    }, 1200)\r\n  }\r\n  \r\n}\r\n\r\n// animation that will run the slider and we are using the \r\n// timeline animation make a smooth effect\r\nfunction showSlider (el) {\r\n  let tl = anime.timeline({})\r\n  const parent = el[1].closest('.show')\r\n  parent.classList.add('done')\r\n  \r\n  tl.add({\r\n    targets: el[1],\r\n    width: '100%',\r\n    easing:  'easeInSine',\r\n    duration: 300,\r\n  })\r\n  .add({\r\n    targets: el[1],\r\n    duration: 400,\r\n    complete: function (anim) {\r\n      el[1].style.right = 0\r\n    }\r\n  })\r\n  .add({\r\n    targets: el[1],\r\n    width: '0%',\r\n    easing:  'easeInSine',\r\n    duration: 300,\r\n    begin: function (anim) {\r\n      slideUp(el[0])\r\n    }\r\n  })\r\n\r\n}\r\n\r\n// function that will make the image opacity from \r\n// 0 to 1 to make the image visible\r\nfunction showOpacity(el) {\r\n  // el.style.opacity = 0\r\n\r\n  anime({\r\n    targets: el,\r\n    opacity: {\r\n      duration: 500,\r\n      value: 1,\r\n      delay: 200,\r\n      easing: 'easeInSine'\r\n    }\r\n    \r\n  })\r\n}\r\n\r\n// this will make the text or paragraphs visible\r\n// this slide up the text\r\nfunction slideUp (el) {\r\n  let tl = anime.timeline({})\r\n  el.style.transform = 'translateY(60px)'\r\n\r\n  tl.add({\r\n    targets: el,\r\n    opacity: {\r\n      duration: 550,\r\n      value: 1,\r\n      delay: 200,\r\n      easing: 'linear'\r\n    },\r\n    translateY: {\r\n      value: 0,\r\n      easing: 'easeOutElastic(10, 2)',\r\n      duration: 700\r\n    },\r\n  })\r\n}\r\n\r\n\r\n// call the animation function when we are scrolling the page\r\nexport function slideInElementsOnScroll() {\r\n  debounce(slideInAnimation)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}