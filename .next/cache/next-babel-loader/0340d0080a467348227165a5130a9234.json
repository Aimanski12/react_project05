{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\components\\\\SubParagraphs\\\\Subparagraphs.js\";\nvar __jsx = React.createElement;\nimport React, { Fragment } from 'react'; // import * as action from '../../store/actions/index'\n// import {pageTransition} from '../../utils/pageAnimation/pageTransitionAnim'\n// import {connect} from 'react-redux'\n// import './Subparagraphs.css'\n\nfunction Subparagraphs(props) {\n  let sections = props.data.subParagraph.content.map((text, i) => {\n    return __jsx(Fragment, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, __jsx(\"h3\", {\n      className: \"p-wrapper head3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, __jsx(\"span\", {\n      className: \"show-container p-container show\",\n      style: {\n        color: props.data.textColors.primary\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"reveal p-reveal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, text.title), __jsx(\"div\", {\n      className: \"runner p-runner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }))), __jsx(\"p\", {\n      className: \"sub-reveal-container p-desc desc show\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, __jsx(\"span\", {\n      className: \"sub-reveal p-desc-content\",\n      style: {\n        color: props.data.textColors.secondary,\n        fontWeight: props.data.title[0] === 'About me.' ? 500 : 600\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, text.text)));\n  });\n  return __jsx(\"article\", {\n    className: \"paragraphs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, sections, props.data.subParagraph.specialLinks.isTrue ? __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: \"sub-reveal-container p-desc p-links desc show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"sub-reveal p-desc-content\",\n    style: {\n      color: props.data.textColors.secondary,\n      fontWeight: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"I'm excited to\", __jsx(\"a\", {\n    href: \"https://www.linkedin.com/\",\n    rel: \"noopener noreferrer\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    className: \"links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \" connect\")), \" with you great people like you.\")), __jsx(\"p\", {\n    className: \"sub-reveal-container p-desc p-links desc show\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"sub-reveal p-desc-content\",\n    style: {\n      color: props.data.textColors.secondary,\n      fontWeight: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Click\", __jsx(\"a\", {\n    href: \"/credentials\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    className: \"links\" // onClick={()=>{\n    //   pageTransition()\n    //   setTimeout(() => {\n    //     props.setRedirect(true, `/credentials`)\n    //   }, 1000)\n    // }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \" here\")), \" to see some of my credentials.\"))) : null);\n} // const mapDispatchToProps = (dispatch) => {\n//   return {\n//     // setMenu: (val) => { dispatch(action.menuIsOpen(val)) },\n//     // checkPage: () => {dispatch(action.checkPageLocation())},\n//     setRedirect: (istrue, path) => { dispatch(action.setRedirect(istrue, path)) }\n//   }\n// }\n// export default connect(null, mapDispatchToProps)(Subparagraphs);\n\n\nexport default Subparagraphs;","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/components/SubParagraphs/Subparagraphs.js"],"names":["React","Fragment","Subparagraphs","props","sections","data","subParagraph","content","map","text","i","color","textColors","primary","title","secondary","fontWeight","specialLinks","isTrue"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react'\r\n// import * as action from '../../store/actions/index'\r\n// import {pageTransition} from '../../utils/pageAnimation/pageTransitionAnim'\r\n// import {connect} from 'react-redux'\r\n// import './Subparagraphs.css'\r\n\r\nfunction Subparagraphs(props) {\r\n\r\n  let sections = props.data.subParagraph.content.map((text, i) => {\r\n    return (\r\n      <Fragment key={i}>\r\n      <h3 className=\"p-wrapper head3\">\r\n          <span className=\"show-container p-container show\"\r\n            style={{color: props.data.textColors.primary}}>\r\n            <div className=\"reveal p-reveal\">{text.title}</div>\r\n            <div className=\"runner p-runner\"></div>\r\n          </span>\r\n        </h3>\r\n        <p className=\"sub-reveal-container p-desc desc show\">\r\n          <span className=\"sub-reveal p-desc-content\"\r\n            style={{color: props.data.textColors.secondary, fontWeight: props.data.title[0] ===  'About me.' ? 500 : 600}}> \r\n            {text.text}</span>\r\n        </p>\r\n      </Fragment>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <article className='paragraphs'>\r\n      {sections}\r\n\r\n      {props.data.subParagraph.specialLinks.isTrue ?\r\n        <Fragment>\r\n\r\n          {/* aiman please put this \r\n          \r\n            block of element to a folder in credentials \r\n\r\n            called links or whatever to make this more readble\r\n          \r\n          */}\r\n          <p className=\"sub-reveal-container p-desc p-links desc show\">\r\n            <span className=\"sub-reveal p-desc-content\"\r\n              style={{color: props.data.textColors.secondary, fontWeight: 500}}> \r\n              I'm excited to \r\n                <a href=\"https://www.linkedin.com/\" \r\n                  rel='noopener noreferrer'\r\n                  target='_blank'>\r\n                    <span className='links'> connect</span></a> with you great people like you.</span>\r\n          </p>\r\n\r\n          <p className=\"sub-reveal-container p-desc p-links desc show\">\r\n            <span className=\"sub-reveal p-desc-content\"\r\n              style={{color: props.data.textColors.secondary, fontWeight: 500}}> \r\n              Click \r\n              <a href=\"/credentials\">\r\n                <span className='links'\r\n                  // onClick={()=>{\r\n                  //   pageTransition()\r\n                  //   setTimeout(() => {\r\n                  //     props.setRedirect(true, `/credentials`)\r\n                  //   }, 1000)\r\n                  // }}\r\n                > here</span></a> to see some of my credentials.\r\n              </span>\r\n            </p> \r\n          </Fragment> : null }\r\n    </article>\r\n  )\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     // setMenu: (val) => { dispatch(action.menuIsOpen(val)) },\r\n//     // checkPage: () => {dispatch(action.checkPageLocation())},\r\n//     setRedirect: (istrue, path) => { dispatch(action.setRedirect(istrue, path)) }\r\n//   }\r\n// }\r\n\r\n// export default connect(null, mapDispatchToProps)(Subparagraphs);\r\nexport default Subparagraphs;\r\n"]},"metadata":{},"sourceType":"module"}