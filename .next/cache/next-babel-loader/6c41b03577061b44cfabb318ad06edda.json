{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\components\\\\TopLayover\\\\TopLayover.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useContext } from 'react';\nimport { StateContext } from '../../utils/context/stateContext';\nimport BrandLogo from '../Svgs/BrandLogo/BrandLogo';\nimport { introAnim, openTopLayer, closeTopLayer } from '../../utils/pageanimations/toplayover/toplayover';\nimport { checkforsession } from '../../utils/sessiondata/sessionStorage';\nimport { motion } from 'framer-motion';\n\nconst TopLayover = props => {\n  const {\n    state,\n    setState\n  } = useContext(StateContext);\n\n  if (state.isTransitioning === true) {// setTimeout(()=>{\n    //   openTopLayer()\n    // }, 1100)\n    // setTimeout(() => {\n    //   setState({ isTransitioning: false})\n    // }, 1700)\n  } // if(state.isTransitioning ===  false) {\n  //   closeTopLayer\n  //   setState({ isTransitioning: 'initial'})\n  // }\n\n\n  useEffect(() => {\n    (async () => {\n      const session = await checkforsession(); // session ? introAnim(true) : introAnim(false)\n\n      session ? setState({\n        isTransitioning: 'ready'\n      }) : null;\n    })();\n  }, []);\n  return __jsx(motion.div, {\n    variants: topAnim,\n    initial: state.isTransitioning,\n    animate: state.isTransitioning === 'initial' ? 'initAnimate' : 'animate',\n    exit: state.exitMode ? 'topExit' : 'bottomExit',\n    className: \"top-layover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"top-layover-container content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"top-layover-logo content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(BrandLogo, {\n    colorMode: '#E3E1C3',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), __jsx(\"p\", {\n    className: \"top-loading\",\n    style: {\n      'color': '#F0EED2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"We are loading . . .\"))), __jsx(\"div\", {\n    className: \"top-layover-runner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(motion.span, {\n    // variants={topAnim}\n    // initial={state.isTransitioning ? 'initialOne' : 'initialTwo'}\n    // animate='animate'\n    // exit='exit'\n    className: \"top-runner\" // style={{'background':'#CCCAAE'}}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default TopLayover;\nlet easing = [0.6, 0.05, 0.01, 0.99];\nconst topAnim = {\n  initial: {\n    width: '100%',\n    height: '100vh'\n  },\n  initAnimate: {\n    height: 0,\n    transition: {\n      delay: 4,\n      duration: .3,\n      ease: easing\n    }\n  },\n  initialOne: {\n    width: '100%',\n    left: 0\n  },\n  initialTwo: {\n    width: '100%',\n    right: 0\n  },\n  animate: {\n    width: '0%',\n    float: 'right',\n    right: 0,\n    transition: {\n      // delay: 1.5,\n      duration: .3,\n      ease: easing\n    }\n  },\n  topExit: {\n    width: '100%',\n    left: 0,\n    transition: {\n      delay: 0.8,\n      duration: .3,\n      ease: easing\n    }\n  },\n  bottomExit: {\n    width: '100%',\n    left: 0,\n    transition: {\n      delay: .5,\n      duration: .3,\n      ease: easing\n    }\n  }\n};","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/components/TopLayover/TopLayover.js"],"names":["React","useEffect","useContext","StateContext","BrandLogo","introAnim","openTopLayer","closeTopLayer","checkforsession","motion","TopLayover","props","state","setState","isTransitioning","session","topAnim","exitMode","easing","initial","width","height","initAnimate","transition","delay","duration","ease","initialOne","left","initialTwo","right","animate","float","topExit","bottomExit"],"mappings":"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","sourcesContent":["import React, {useEffect, useContext} from 'react'\r\nimport {StateContext} from '../../utils/context/stateContext'\r\nimport BrandLogo from '../Svgs/BrandLogo/BrandLogo'\r\nimport {introAnim, openTopLayer, closeTopLayer} from '../../utils/pageanimations/toplayover/toplayover'\r\nimport {checkforsession} from '../../utils/sessiondata/sessionStorage'\r\nimport {motion} from 'framer-motion'\r\n\r\n\r\nconst TopLayover = (props) =>{\r\n  const {state, setState} = useContext(StateContext)\r\n\r\n  if(state.isTransitioning ===  true) {\r\n    // setTimeout(()=>{\r\n    //   openTopLayer()\r\n    // }, 1100)\r\n    // setTimeout(() => {\r\n    //   setState({ isTransitioning: false})\r\n    // }, 1700)\r\n  }\r\n  // if(state.isTransitioning ===  false) {\r\n  //   closeTopLayer\r\n  //   setState({ isTransitioning: 'initial'})\r\n  // }\r\n  \r\n  useEffect(()=>{\r\n    (async () => {\r\n      const session = await checkforsession()\r\n      // session ? introAnim(true) : introAnim(false)\r\n      session ? setState({isTransitioning : 'ready'}) : null\r\n    })()\r\n  }, [])\r\n\r\n  return (\r\n    <motion.div \r\n      variants={topAnim}\r\n      initial={state.isTransitioning}\r\n      animate={state.isTransitioning === 'initial' ? 'initAnimate' : 'animate'}\r\n      exit={state.exitMode ? 'topExit' : 'bottomExit'}\r\n      className=\"top-layover\">\r\n      <div className=\"top-layover-container content-center\">\r\n        <div className=\"top-layover-logo content-center\">\r\n          <BrandLogo \r\n            colorMode={'#E3E1C3'}/>\r\n          {/* {props.hasSession ? null : \r\n          <p className='top-loading'\r\n            style={{'color': '#F0EED2'}}>\r\n              We are loading . . .</p> } */}\r\n          <p className='top-loading'\r\n            style={{'color': '#F0EED2'}}>\r\n              We are loading . . .</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"top-layover-runner\">\r\n        <motion.span \r\n          // variants={topAnim}\r\n          // initial={state.isTransitioning ? 'initialOne' : 'initialTwo'}\r\n          // animate='animate'\r\n          // exit='exit'\r\n          className='top-runner' \r\n          // style={{'background':'#CCCAAE'}}\r\n          ></motion.span>\r\n      </div>\r\n    </motion.div> \r\n  )\r\n}\r\n\r\nexport default TopLayover\r\n\r\nlet easing = [0.6, 0.05, 0.01, 0.99];\r\n\r\nconst topAnim = {\r\n  initial: {\r\n    width: '100%',\r\n    height: '100vh',\r\n  },\r\n  initAnimate: {\r\n    height: 0,\r\n    transition: {\r\n      delay: 4,\r\n      duration: .3,\r\n      ease: easing\r\n    }\r\n  },\r\n\r\n  initialOne: {\r\n    width: '100%',\r\n    left: 0\r\n  },\r\n  initialTwo: {\r\n    width: '100%',\r\n    right: 0\r\n  },\r\n\r\n\r\n  animate: {\r\n    width: '0%',\r\n    float: 'right',\r\n    right: 0,\r\n    transition: {\r\n      // delay: 1.5,\r\n      duration: .3,\r\n      ease: easing\r\n    }\r\n  },\r\n  \r\n  topExit: {\r\n    width: '100%',\r\n    left: 0,\r\n    transition: {\r\n      delay: 0.8,\r\n      duration: .3,\r\n      ease: easing\r\n    }\r\n  },\r\n  bottomExit: {\r\n    width: '100%',\r\n    left: 0,\r\n    transition: {\r\n      delay: .5,\r\n      duration: .3,\r\n      ease: easing\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}