{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { getIP, getUserData, generateUrl, getTime } from './commonfunctions';\nexport function saveMessageToFirebase(_x) {\n  return _saveMessageToFirebase.apply(this, arguments);\n}\n\nfunction _saveMessageToFirebase() {\n  _saveMessageToFirebase = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n    var message, data, url;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            message = {\n              title: values[2] === '' ? \"Just sayin' hi!\" : values[2],\n              name: values[0],\n              email: values[1],\n              message: values[3],\n              time: getTime('timeOfVisit')\n            };\n            _context.t0 = message;\n            _context.next = 4;\n            return getIP();\n\n          case 4:\n            _context.t1 = _context.sent;\n            _context.next = 7;\n            return getUserData();\n\n          case 7:\n            _context.t2 = _context.sent;\n            data = {\n              message: _context.t0,\n              userIP: _context.t1,\n              userData: _context.t2\n            };\n            url = generateUrl('messages');\n            _context.next = 12;\n            return axios.post(\"\".concat(url, \".json\"), data).then(function (res) {\n              if (res) {\n                if (res.status === 200) {\n                  console.log(res);\n                }\n              }\n            })[\"catch\"](function (err) {\n              if (err) console.log(err);\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _saveMessageToFirebase.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/utils/sessiondata/saveMessage.js"],"names":["axios","getIP","getUserData","generateUrl","getTime","saveMessageToFirebase","values","message","title","name","email","time","data","userIP","userData","url","post","then","res","status","console","log","err"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,WAAf,EAA4BC,WAA5B,EAAyCC,OAAzC,QAAuD,mBAAvD;AAEA,gBAAsBC,qBAAtB;AAAA;AAAA;;;oFAAO,iBAAsCC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEDC,YAAAA,OAFC,GAES;AACZC,cAAAA,KAAK,EAAEF,MAAM,CAAC,CAAD,CAAN,KAAc,EAAd,uBAAuCA,MAAM,CAAC,CAAD,CADxC;AAEZG,cAAAA,IAAI,EAAEH,MAAM,CAAC,CAAD,CAFA;AAGZI,cAAAA,KAAK,EAAEJ,MAAM,CAAC,CAAD,CAHD;AAIZC,cAAAA,OAAO,EAAED,MAAM,CAAC,CAAD,CAJH;AAKZK,cAAAA,IAAI,EAAEP,OAAO,CAAC,aAAD;AALD,aAFT;AAAA,0BAWMG,OAXN;AAAA;AAAA,mBAYWN,KAAK,EAZhB;;AAAA;AAAA;AAAA;AAAA,mBAaaC,WAAW,EAbxB;;AAAA;AAAA;AAUDU,YAAAA,IAVC;AAWHL,cAAAA,OAXG;AAYHM,cAAAA,MAZG;AAaHC,cAAAA,QAbG;AAAA;AAgBDC,YAAAA,GAhBC,GAgBKZ,WAAW,CAAC,UAAD,CAhBhB;AAAA;AAAA,mBAoBCH,KAAK,CAACgB,IAAN,WAAcD,GAAd,YAA0BH,IAA1B,EACHK,IADG,CACE,UAAAC,GAAG,EAAG;AACV,kBAAGA,GAAH,EAAQ;AACN,oBAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAuB;AACrBC,kBAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD;AACF;AACF,aAPG,WAQG,UAAAI,GAAG,EAAI;AACZ,kBAAIA,GAAJ,EAASF,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACV,aAVG,CApBD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from 'axios'\r\nimport {getIP, getUserData, generateUrl, getTime} from './commonfunctions'\r\n\r\nexport async function saveMessageToFirebase (values) {\r\n\r\n  let message = {\r\n    title: values[2] === '' ? `Just sayin' hi!` : values[2],\r\n    name: values[0],\r\n    email: values[1],\r\n    message: values[3],\r\n    time: getTime('timeOfVisit')\r\n  }\r\n  \r\n  let data = {\r\n    message: message,\r\n    userIP: await getIP(),\r\n    userData: await getUserData()\r\n  }\r\n  \r\n  let url = generateUrl('messages')\r\n\r\n\r\n\r\n  await axios.post(`${url}.json`, data)\r\n    .then(res =>{\r\n      if(res) {\r\n        if(res.status === 200) {\r\n          console.log(res)\r\n        }\r\n      }\r\n    })\r\n    .catch(err => {\r\n      if (err) console.log(err)\r\n    })\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}