{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\utils\\\\context\\\\inputContext.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, createContext } from 'react'; // export InputContext \n\nexport const InputData = createContext(); // the props is received and has a value that references\n// the input data sets and returns data for the message form\n\nexport function InputDataContext(props) {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    inputValue: ['', '', '', ''],\n    alert: {\n      message: '* required',\n      color: 'go'\n    }\n  });\n\n  function setvalues(val, i) {\n    let values = state.inputValue;\n    values[i] = val;\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      inputValue: values\n    }));\n  }\n\n  return __jsx(InputData.Provider, {\n    value: {\n      alert: state.alert,\n      inputValue: state.inputValue,\n      setValues: setvalues\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, props.children);\n}","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/utils/context/inputContext.js"],"names":["React","useState","createContext","InputData","InputDataContext","props","state","setState","inputValue","alert","message","color","setvalues","val","i","values","setValues","children"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C,C,CAKA;;AACA,OAAO,MAAMC,SAAS,GAAGD,aAAa,EAA/B,C,CAEP;AACA;;AACA,OAAO,SAASE,gBAAT,CAA2BC,KAA3B,EAAkC;AAEvC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC;AACjCO,IAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CADqB;AAEjCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,YADJ;AAELC,MAAAA,KAAK,EAAE;AAFF;AAF0B,GAAD,CAAlC;;AAQA,WAASC,SAAT,CAAmBC,GAAnB,EAAwBC,CAAxB,EAA0B;AACxB,QAAIC,MAAM,GAAGT,KAAK,CAACE,UAAnB;AACAO,IAAAA,MAAM,CAACD,CAAD,CAAN,GAAYD,GAAZ;AACAN,IAAAA,QAAQ,iCACHD,KADG;AAENE,MAAAA,UAAU,EAAEO;AAFN,OAAR;AAID;;AAED,SACE,MAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAE;AACvBN,MAAAA,KAAK,EAAEH,KAAK,CAACG,KADU;AAEvBD,MAAAA,UAAU,EAAEF,KAAK,CAACE,UAFK;AAGvBQ,MAAAA,SAAS,EAAEJ;AAHY,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGP,KAAK,CAACY,QAJT,CADF;AAQD","sourcesContent":["import React, { useState, createContext } from 'react'\r\n\r\n\r\n\r\n\r\n// export InputContext \r\nexport const InputData = createContext()\r\n\r\n// the props is received and has a value that references\r\n// the input data sets and returns data for the message form\r\nexport function InputDataContext (props) {\r\n\r\n  const [state, setState] = useState({\r\n    inputValue: ['', '', '', ''],\r\n    alert: {\r\n      message: '* required',\r\n      color: 'go'\r\n    }\r\n  })\r\n  \r\n  function setvalues(val, i){\r\n    let values = state.inputValue\r\n    values[i] = val\r\n    setState({\r\n      ...state,\r\n      inputValue: values\r\n    })\r\n  }\r\n\r\n  return (\r\n    <InputData.Provider value={{\r\n        alert: state.alert, \r\n        inputValue: state.inputValue,\r\n        setValues: setvalues }}>\r\n      {props.children}\r\n    </InputData.Provider>\r\n  )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}