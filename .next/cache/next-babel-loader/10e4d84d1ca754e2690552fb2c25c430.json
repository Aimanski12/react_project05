{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\utils\\\\context\\\\stateContext.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, createContext } from 'react';\nimport { setTransitionState } from '../pageanimations/motion/common'; // global state context route\n\nexport var StateContext = createContext(); // state provder\n\nexport var StateProvider = /*#__PURE__*/function (_Component) {\n  _inherits(StateProvider, _Component);\n\n  var _super = _createSuper(StateProvider);\n\n  function StateProvider() {\n    var _this;\n\n    _classCallCheck(this, StateProvider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      activeRoute: 'home',\n      menuIsOpen: false,\n      menuIsAnimating: false,\n      isTransitioning: 'initial',\n      exitMode: false,\n      animation: 'initial'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setApplicationState\", function (newState) {\n      _this.setState(_objectSpread(_objectSpread({}, _this.state), newState));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setTransitionState\", function (from) {\n      console.log(from);\n\n      if (from === 'top') {\n        _this.setState({\n          menuIsOpen: !_this.state.menuIsOpen,\n          exitMode: mode(from),\n          isTransitioning: setTransitionState(_this.state.isTransitioning),\n          animation: animmode(from)\n        });\n      }\n\n      if (from === 'bottom') {\n        setState({\n          exitMode: mode(from),\n          isTransitioning: setTransitionState(_this.state.isTransitioning),\n          animation: animmode(from)\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setActiveRoute\", function (route) {\n      // if the current route does not match to the old route\n      // then update the active route state\n      if (route != _this.state.activeRoute) {\n        _this.setApplicationState({\n          activeRoute: route\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(StateProvider, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(StateContext.Provider, {\n        value: {\n          state: this.state,\n          setState: this.setApplicationState,\n          setActiveRoute: this.setActiveRoute,\n          setTransitionState: setTransitionState\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, this.props.children);\n    }\n  }]);\n\n  return StateProvider;\n}(Component);\n\nvar mode = function mode(from) {\n  return from === 'top' ? 'topExit' : 'bottomExit';\n};\n\nvar animmode = function animmode(from) {\n  return from === 'bottom' ? 'topAnimation' : 'bottomAnimation';\n};","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/utils/context/stateContext.js"],"names":["React","Component","createContext","setTransitionState","StateContext","StateProvider","activeRoute","menuIsOpen","menuIsAnimating","isTransitioning","exitMode","animation","newState","setState","state","from","console","log","mode","animmode","route","setApplicationState","setActiveRoute","props","children"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,aAA1B,QAA8C,OAA9C;AACA,SAAQC,kBAAR,QAAiC,iCAAjC,C,CAEA;;AACA,OAAO,IAAMC,YAAY,GAAGF,aAAa,EAAlC,C,CAEP;;AACA,WAAaG,aAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,4DAGS;AACLC,MAAAA,WAAW,EAAE,MADR;AAELC,MAAAA,UAAU,EAAE,KAFP;AAGLC,MAAAA,eAAe,EAAE,KAHZ;AAILC,MAAAA,eAAe,EAAE,SAJZ;AAKLC,MAAAA,QAAQ,EAAE,KALL;AAMLC,MAAAA,SAAS,EAAE;AANN,KAHT;;AAAA,0EAawB,UAACC,QAAD,EAAc;AAClC,YAAKC,QAAL,iCACK,MAAKC,KADV,GAEKF,QAFL;AAID,KAlBH;;AAAA,yEAoBuB,UAACG,IAAD,EAAU;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAGA,IAAI,KAAK,KAAZ,EAAkB;AAChB,cAAKF,QAAL,CAAc;AACZN,UAAAA,UAAU,EAAE,CAAC,MAAKO,KAAL,CAAWP,UADZ;AAEZG,UAAAA,QAAQ,EAAEQ,IAAI,CAACH,IAAD,CAFF;AAGZN,UAAAA,eAAe,EAAEN,kBAAkB,CAAC,MAAKW,KAAL,CAAWL,eAAZ,CAHvB;AAIZE,UAAAA,SAAS,EAAEQ,QAAQ,CAACJ,IAAD;AAJP,SAAd;AAMD;;AACD,UAAGA,IAAI,KAAK,QAAZ,EAAsB;AACpBF,QAAAA,QAAQ,CAAC;AACPH,UAAAA,QAAQ,EAAEQ,IAAI,CAACH,IAAD,CADP;AAEPN,UAAAA,eAAe,EAAEN,kBAAkB,CAAC,MAAKW,KAAL,CAAWL,eAAZ,CAF5B;AAGPE,UAAAA,SAAS,EAAEQ,QAAQ,CAACJ,IAAD;AAHZ,SAAD,CAAR;AAKD;AACF,KArCH;;AAAA,qEAwCmB,UAACK,KAAD,EAAW;AAC1B;AACA;AACA,UAAGA,KAAK,IAAI,MAAKN,KAAL,CAAWR,WAAvB,EAAmC;AACjC,cAAKe,mBAAL,CAAyB;AAAEf,UAAAA,WAAW,EAAEc;AAAf,SAAzB;AACD;AACF,KA9CH;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAgDU;AAEN,aACE,MAAC,YAAD,CAAc,QAAd;AAAuB,QAAA,KAAK,EAAE;AAC5BN,UAAAA,KAAK,EAAE,KAAKA,KADgB;AAE5BD,UAAAA,QAAQ,EAAE,KAAKQ,mBAFa;AAG5BC,UAAAA,cAAc,EAAE,KAAKA,cAHO;AAI5BnB,UAAAA,kBAAkB,EAAlBA;AAJ4B,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMG,KAAKoB,KAAL,CAAWC,QANd,CADF;AAUD;AA5DH;;AAAA;AAAA,EAAmCvB,SAAnC;;AA+DA,IAAMiB,IAAI,GAAG,SAAPA,IAAO,CAACH,IAAD,EAAU;AACrB,SAAOA,IAAI,KAAK,KAAT,GAAiB,SAAjB,GAA6B,YAApC;AACD,CAFD;;AAIA,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACJ,IAAD,EAAU;AACzB,SAAOA,IAAI,KAAK,QAAT,GAAoB,cAApB,GAAqC,iBAA5C;AACD,CAFD","sourcesContent":["import React, {Component, createContext} from 'react'\r\nimport {setTransitionState} from '../pageanimations/motion/common'\r\n\r\n// global state context route\r\nexport const StateContext = createContext()\r\n\r\n// state provder\r\nexport class StateProvider extends Component {\r\n  \r\n  // initial\r\n  state= {\r\n    activeRoute: 'home',\r\n    menuIsOpen: false,\r\n    menuIsAnimating: false,\r\n    isTransitioning: 'initial',\r\n    exitMode: false,\r\n    animation: 'initial'\r\n  }\r\n\r\n  // function that will set update the state\r\n  setApplicationState = (newState) => {\r\n    this.setState({\r\n      ...this.state,\r\n      ...newState\r\n    })\r\n  }\r\n\r\n  setTransitionState = (from) => {\r\n    console.log(from)\r\n    if(from === 'top'){\r\n      this.setState({\r\n        menuIsOpen: !this.state.menuIsOpen,\r\n        exitMode: mode(from),\r\n        isTransitioning: setTransitionState(this.state.isTransitioning),\r\n        animation: animmode(from)\r\n      })\r\n    }\r\n    if(from === 'bottom') {\r\n      setState({\r\n        exitMode: mode(from),\r\n        isTransitioning: setTransitionState(this.state.isTransitioning),\r\n        animation: animmode(from)\r\n      })\r\n    }\r\n  }\r\n\r\n  // function to get the current route\r\n  setActiveRoute = (route) => {\r\n    // if the current route does not match to the old route\r\n    // then update the active route state\r\n    if(route != this.state.activeRoute){\r\n      this.setApplicationState({ activeRoute: route })\r\n    }\r\n  }\r\n\r\n  render(){\r\n\r\n    return(\r\n      <StateContext.Provider value={{\r\n        state: this.state,\r\n        setState: this.setApplicationState,\r\n        setActiveRoute: this.setActiveRoute,\r\n        setTransitionState\r\n      }}>\r\n        {this.props.children}\r\n      </StateContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nconst mode = (from) => {\r\n  return from === 'top' ? 'topExit' : 'bottomExit'\r\n}\r\n\r\nconst animmode = (from) => {\r\n  return from === 'bottom' ? 'topAnimation' : 'bottomAnimation'\r\n}"]},"metadata":{},"sourceType":"module"}