{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\components\\\\Navbar\\\\NavbarMenu\\\\NavbarMenu.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react'; // import {connect} from 'react-redux'\n// import * as action from '../../../store/actions/index'\n// import {mouseOut, mouseEnter} from '../../../utils/common/menuHoverEvents'\n// import {openMenu, closeMenu} from '../../../utils/common/menuClickEvents'\n// import {navHoverElements} from '../../../utils/common/elementSorter'\n// import anime from 'animejs'\n\nimport Close from '../../../components/Svgs/Close/Close'; // import './NavbarMenu.css'\n\nimport { PageData } from '../../../utils/context/pageContext';\n\nvar NavbarMenu = /*#__PURE__*/function (_Component) {\n  _inherits(NavbarMenu, _Component);\n\n  var _super = _createSuper(NavbarMenu);\n\n  function NavbarMenu() {\n    _classCallCheck(this, NavbarMenu);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NavbarMenu, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var data = this.context;\n      console.log(data); // click event \n\n      var clicked = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!_this.props.isAnimating) {\n                    setAnimate(true);\n\n                    if (!_this.props.isOpen) {\n                      openMenuBtn();\n                    } else {\n                      closeMenuBtn();\n                    }\n                  }\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function clicked() {\n          return _ref.apply(this, arguments);\n        };\n      }(); // close menu function\n\n\n      var closeMenuBtn = function closeMenuBtn() {\n        var el = navHoverElements(); // call function to close animation\n\n        closeMenu(true); // set is animating after 1700 milsec to block multiple click events\n\n        setAnimate(false);\n        var n = document.querySelector('.navbar-container');\n        var tl = anime.timeline({\n          easing: 'easeInQuad',\n          duration: 200\n        });\n        tl.add({\n          targets: n,\n          opacity: 0\n        }).add({\n          duration: 10,\n          complete: function complete(anim) {\n            this.props.setMenu(!this.props.isOpen);\n          }\n        }).add({\n          targets: n,\n          opacity: 1,\n          complete: function complete(anim) {\n            el.middle.style.color = this.props.colorModes.close.main;\n          }\n        });\n      }; // open menu function\n\n\n      var openMenuBtn = function openMenuBtn() {\n        // call function to open menu animtion\n        openMenu(); // set is animating after 1700 milsec to block multiple click events\n\n        setAnimate(false);\n        var n = document.querySelector('.navbar-container');\n        var tl = anime.timeline({\n          easing: 'easeInQuad',\n          duration: 200\n        });\n        tl.add({\n          targets: n,\n          opacity: 0\n        }).add({\n          duration: 10,\n          complete: function complete(anim) {\n            this.props.setMenu(!this.props.isOpen);\n          }\n        }).add({\n          targets: n,\n          opacity: 1\n        });\n      }; // function to set isanimating state\n\n\n      var setAnimate = function setAnimate(isAnim) {\n        isAnim ? _this.props.setAnimating(isAnim) : setTimeout(function () {\n          _this.props.setAnimating(false);\n        }, 1700);\n      }; // hover in functions and to set specific assigned colors\n\n\n      var hoverIn = function hoverIn() {\n        _this.props.isOpen ? mouseEnter(_this.props.colorModes.open, 'open') : mouseEnter(_this.props.colorModes.close, 'close');\n      }; // hover out functions and to set specific assigned colors\n\n\n      var hoverOut = function hoverOut() {\n        _this.props.isOpen ? mouseOut(_this.props.colorModes.open, 'open') : mouseOut(_this.props.colorModes.close, 'close');\n      }; // console.log(this.props.isAnimating)\n\n\n      return __jsx(\"div\", {\n        className: \"navbar-menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"front content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }, __jsx(\"span\", {\n        className: \"content-center front-text\",\n        style: {\n          'color': 'red'\n        },\n        onMouseOver: hoverIn,\n        onMouseLeave: hoverOut,\n        onClick: clicked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }, this.props.isOpen ? __jsx(Close, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 36\n        }\n      }) : 'Menu')), __jsx(\"div\", {\n        className: \"middle content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }, __jsx(\"span\", {\n        className: \"middle-span\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      })), __jsx(\"div\", {\n        className: \"back content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }\n      }, __jsx(\"span\", {\n        className: \"back-span\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return NavbarMenu;\n}(Component); // const mapStateToProps = (state) => {\n//   return {\n//     colorModes: state.state.colorModes,\n//     isOpen: state.state.isOpen,\n//     isAnimating: state.state.isAnimating,\n//     activeRoute: state.state.activeRoute\n//   }\n// }\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     setAnimating: (val) => { dispatch(action.setAnimating(val)) },\n//     setMenu: (val) => { dispatch(action.menuIsOpen(val)) }\n//   }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(NavbarMenu)\n\n\n_defineProperty(NavbarMenu, \"contextType\", PageData);\n\nexport default NavbarMenu;","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/components/Navbar/NavbarMenu/NavbarMenu.js"],"names":["React","Component","Close","PageData","NavbarMenu","data","context","console","log","clicked","props","isAnimating","setAnimate","isOpen","openMenuBtn","closeMenuBtn","el","navHoverElements","closeMenu","n","document","querySelector","tl","anime","timeline","easing","duration","add","targets","opacity","complete","anim","setMenu","middle","style","color","colorModes","close","main","openMenu","isAnim","setAnimating","setTimeout","hoverIn","mouseEnter","open","hoverOut","mouseOut"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\n// import {connect} from 'react-redux'\r\n// import * as action from '../../../store/actions/index'\r\n// import {mouseOut, mouseEnter} from '../../../utils/common/menuHoverEvents'\r\n// import {openMenu, closeMenu} from '../../../utils/common/menuClickEvents'\r\n// import {navHoverElements} from '../../../utils/common/elementSorter'\r\n// import anime from 'animejs'\r\nimport Close from '../../../components/Svgs/Close/Close'\r\n// import './NavbarMenu.css'\r\n\r\n\r\nimport {PageData} from '../../../utils/context/pageContext'\r\n\r\nclass NavbarMenu extends Component {\r\n\r\n  static contextType = PageData\r\n  \r\n  render () {\r\n    let data = this.context\r\n    console.log(data)\r\n\r\n\r\n    // click event \r\n    const clicked = async () => {\r\n      if(!this.props.isAnimating) {\r\n        setAnimate(true)\r\n        if(!this.props.isOpen) {\r\n          openMenuBtn()\r\n        } else {\r\n          closeMenuBtn()\r\n        }\r\n      }\r\n    }\r\n\r\n    // close menu function\r\n    const closeMenuBtn = () => {\r\n      const el = navHoverElements()\r\n      // call function to close animation\r\n      closeMenu(true)\r\n\r\n      // set is animating after 1700 milsec to block multiple click events\r\n      setAnimate(false)\r\n\r\n      const n = document.querySelector('.navbar-container')\r\n      \r\n      let tl = anime.timeline({\r\n        easing: 'easeInQuad',\r\n        duration: 200,\r\n      })\r\n      tl.add({\r\n          targets: n,\r\n          opacity: 0,\r\n        })\r\n        .add({\r\n          duration: 10,\r\n          complete: function (anim) {\r\n            this.props.setMenu(!this.props.isOpen)\r\n          }\r\n        })\r\n        .add({\r\n          targets: n,\r\n          opacity: 1,\r\n          complete: function (anim) {\r\n            el.middle.style.color = this.props.colorModes.close.main          \r\n          }\r\n        })\r\n      }\r\n\r\n    // open menu function\r\n    const openMenuBtn = () => {\r\n      // call function to open menu animtion\r\n      openMenu()\r\n\r\n      // set is animating after 1700 milsec to block multiple click events\r\n      setAnimate(false)\r\n      const n = document.querySelector('.navbar-container')\r\n      \r\n      let tl = anime.timeline({\r\n        easing: 'easeInQuad',\r\n        duration: 200,\r\n      })\r\n      tl.add({\r\n        targets: n,\r\n        opacity: 0,\r\n      })\r\n      .add ({\r\n        duration: 10,\r\n        complete: function (anim) {\r\n          this.props.setMenu(!this.props.isOpen)\r\n        }\r\n      })\r\n      .add({\r\n        targets: n,\r\n        opacity: 1,\r\n      })\r\n    }\r\n\r\n    // function to set isanimating state\r\n    const setAnimate = (isAnim) => {\r\n      isAnim ? this.props.setAnimating(isAnim) : \r\n      setTimeout(()=>{\r\n        this.props.setAnimating(false)\r\n      }, 1700)\r\n    }\r\n\r\n    // hover in functions and to set specific assigned colors\r\n    const hoverIn = () => {\r\n      this.props.isOpen ? mouseEnter(this.props.colorModes.open, 'open') :\r\n      mouseEnter(this.props.colorModes.close, 'close')\r\n    }\r\n\r\n    // hover out functions and to set specific assigned colors\r\n    const hoverOut = () => {\r\n      this.props.isOpen ? mouseOut(this.props.colorModes.open, 'open') :\r\n        mouseOut(this.props.colorModes.close, 'close')\r\n    }\r\n\r\n    // console.log(this.props.isAnimating)\r\n\r\n    return (\r\n      <div className=\"navbar-menu\">\r\n        <div className=\"front content-center\">\r\n          <span className=\"content-center front-text\"\r\n            style={{'color': 'red'}}\r\n            onMouseOver={hoverIn}\r\n            onMouseLeave={hoverOut}\r\n            onClick={clicked} >\r\n              {this.props.isOpen ? <Close /> : 'Menu'}</span>  \r\n        </div>\r\n        <div className=\"middle content-center\">\r\n          <span className=\"middle-span\"></span>\r\n        </div>\r\n        <div className=\"back content-center\">\r\n          <span className=\"back-span\"></span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     colorModes: state.state.colorModes,\r\n//     isOpen: state.state.isOpen,\r\n//     isAnimating: state.state.isAnimating,\r\n//     activeRoute: state.state.activeRoute\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     setAnimating: (val) => { dispatch(action.setAnimating(val)) },\r\n//     setMenu: (val) => { dispatch(action.menuIsOpen(val)) }\r\n//   }\r\n// }\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(NavbarMenu)\r\nexport default NavbarMenu"]},"metadata":{},"sourceType":"module"}