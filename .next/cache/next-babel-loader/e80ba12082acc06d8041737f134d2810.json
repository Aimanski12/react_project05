{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\components\\\\TopLayover\\\\TopLayover.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useContext } from 'react';\nimport { StateContext } from '../../utils/context/stateContext';\nimport BrandLogo from '../Svgs/BrandLogo/BrandLogo';\nimport { introAnim, openTopLayer, closeTopLayer } from '../../utils/pageanimations/toplayover/toplayover';\nimport { checkforsession } from '../../utils/sessiondata/sessionStorage';\nimport { motion } from 'framer-motion';\nimport anime from 'animejs';\n\nconst TopLayover = () => {\n  const {\n    state,\n    setState\n  } = useContext(StateContext);\n\n  if (state.isTransitioning === true) {// setTimeout(()=>{\n    //   openTopLayer()\n    // }, 1100)\n    // setTimeout(() => {\n    //   setState({ isTransitioning: false})\n    // }, 1700)\n  } // if(state.isTransitioning ===  false) {\n  //   closeTopLayer\n  //   setState({ isTransitioning: 'initial'})\n  // }\n  // useEffect(()=>{\n  //   (async () => {\n  //     const session = await checkforsession()\n  //     session === 'initial' ? introAnim(false) : null\n  //     session ? setState({isTransitioning : 'ready'}) : null\n  //   })()\n  // }, [])\n\n\n  useEffect(() => {\n    const el = document.querySelector('.top-layover-logo');\n    console.log(el);\n\n    if (state.exitMode === 'topExit') {\n      const tl = anime.timeline({});\n      tl.add({\n        duration: 100,\n        targets: el,\n        opacity: 1,\n        easing: 'linear'\n      }).add({\n        duration: 200\n      }).add({\n        opacity: 0,\n        duration: 50,\n        targets: el,\n        easing: 'linear'\n      });\n    }\n  });\n  return __jsx(motion.div, {\n    variants: topAnim,\n    initial: state.isTransitioning,\n    animate: state.isTransitioning === 'initial' ? 'initAnimate' : 'animate',\n    exit: state.exitMode ? 'bottomExit' : 'topExit',\n    className: \"content-center top-layover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(motion.div, {\n    variants: logoAnim,\n    initial: state.isTransitioning,\n    animate: state.isTransitioning === 'initial' ? 'initAnimate' : 'animate',\n    exit: state.exitMode ? 'bottomExit' : 'topExit',\n    className: \"top-layover-logo content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(BrandLogo, {\n    colorMode: '#E3E1C3',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default TopLayover;\nlet easing = [0.6, 0.05, 0.01, 0.99];\nconst logoAnim = {\n  initial: {\n    opacity: 0\n  },\n  initAnimate: {\n    opacity: 0\n  },\n  initialOne: {\n    opacity: 0\n  },\n  initialTwo: {\n    opacity: 0\n  },\n  animate: {\n    opacity: 0\n  },\n  topExit: {\n    opacity: 1,\n    transition: {\n      delay: .2\n    }\n  }\n};\nconst topAnim = {\n  initial: {\n    width: '0%',\n    right: 0\n  },\n  initAnimate: {\n    width: '0%'\n  },\n  initialOne: {\n    width: '100%',\n    left: 0\n  },\n  initialTwo: {\n    width: '100%',\n    right: 0\n  },\n  animate: {\n    width: '0%',\n    float: 'right',\n    right: 0,\n    transition: {\n      // delay: 1.5,\n      duration: .3,\n      ease: easing\n    }\n  },\n  topExit: {\n    width: '100%',\n    left: 0,\n    transition: {\n      delay: 0.8,\n      duration: .3,\n      ease: easing\n    }\n  },\n  bottomExit: {\n    width: '100%',\n    left: 0,\n    transition: {\n      delay: .5,\n      duration: .3,\n      ease: easing\n    }\n  }\n};","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/components/TopLayover/TopLayover.js"],"names":["React","useEffect","useContext","StateContext","BrandLogo","introAnim","openTopLayer","closeTopLayer","checkforsession","motion","anime","TopLayover","state","setState","isTransitioning","el","document","querySelector","console","log","exitMode","tl","timeline","add","duration","targets","opacity","easing","topAnim","logoAnim","initial","initAnimate","initialOne","initialTwo","animate","topExit","transition","delay","width","right","left","float","ease","bottomExit"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,UAA1B,QAA2C,OAA3C;AACA,SAAQC,YAAR,QAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAAQC,SAAR,EAAmBC,YAAnB,EAAiCC,aAAjC,QAAqD,kDAArD;AACA,SAAQC,eAAR,QAA8B,wCAA9B;AACA,SAAQC,MAAR,QAAqB,eAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAGA,MAAMC,UAAU,GAAG,MAAK;AACtB,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBX,UAAU,CAACC,YAAD,CAApC;;AAEA,MAAGS,KAAK,CAACE,eAAN,KAA2B,IAA9B,EAAoC,CAClC;AACA;AACA;AACA;AACA;AACA;AACD,GAVqB,CAWtB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAb,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMc,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;;AACA,QAAGH,KAAK,CAACQ,QAAN,KAAmB,SAAtB,EAAiC;AAE/B,YAAMC,EAAE,GAAGX,KAAK,CAACY,QAAN,CAAe,EAAf,CAAX;AACAD,MAAAA,EAAE,CACFE,GADA,CACI;AACFC,QAAAA,QAAQ,EAAE,GADR;AAEFC,QAAAA,OAAO,EAAEV,EAFP;AAGFW,QAAAA,OAAO,EAAE,CAHP;AAIFC,QAAAA,MAAM,EAAE;AAJN,OADJ,EAOCJ,GAPD,CAOK;AACHC,QAAAA,QAAQ,EAAE;AADP,OAPL,EAUCD,GAVD,CAUK;AACHG,QAAAA,OAAO,EAAE,CADN;AAEHF,QAAAA,QAAQ,EAAE,EAFP;AAGHC,QAAAA,OAAO,EAAEV,EAHN;AAIHY,QAAAA,MAAM,EAAE;AAJL,OAVL;AAgBD;AACF,GAvBQ,CAAT;AAyBA,SACE,MAAC,MAAD,CAAQ,GAAR;AACE,IAAA,QAAQ,EAAEC,OADZ;AAEE,IAAA,OAAO,EAAEhB,KAAK,CAACE,eAFjB;AAGE,IAAA,OAAO,EAAEF,KAAK,CAACE,eAAN,KAA0B,SAA1B,GAAsC,aAAtC,GAAsD,SAHjE;AAIE,IAAA,IAAI,EAAEF,KAAK,CAACQ,QAAN,GAAiB,YAAjB,GAAgC,SAJxC;AAKE,IAAA,SAAS,EAAC,4BALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,MAAC,MAAD,CAAQ,GAAR;AACE,IAAA,QAAQ,EAAES,QADZ;AAEE,IAAA,OAAO,EAAEjB,KAAK,CAACE,eAFjB;AAGE,IAAA,OAAO,EAAEF,KAAK,CAACE,eAAN,KAA0B,SAA1B,GAAsC,aAAtC,GAAsD,SAHjE;AAIE,IAAA,IAAI,EAAEF,KAAK,CAACQ,QAAN,GAAiB,YAAjB,GAAgC,SAJxC;AAKE,IAAA,SAAS,EAAC,iCALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,SAAD;AAAW,IAAA,SAAS,EAAE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CANJ,CADF;AA0CD,CA1FD;;AA4FA,eAAeT,UAAf;AAEA,IAAIgB,MAAM,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,CAAb;AAEA,MAAME,QAAQ,GAAG;AACfC,EAAAA,OAAO,EAAE;AACPJ,IAAAA,OAAO,EAAE;AADF,GADM;AAIfK,EAAAA,WAAW,EAAE;AACXL,IAAAA,OAAO,EAAE;AADE,GAJE;AAOfM,EAAAA,UAAU,EAAC;AACTN,IAAAA,OAAO,EAAE;AADA,GAPI;AAUfO,EAAAA,UAAU,EAAE;AACVP,IAAAA,OAAO,EAAE;AADC,GAVG;AAafQ,EAAAA,OAAO,EAAE;AACPR,IAAAA,OAAO,EAAE;AADF,GAbM;AAgBfS,EAAAA,OAAO,EAAE;AACPT,IAAAA,OAAO,EAAE,CADF;AAEPU,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE;AADG;AAFL;AAhBM,CAAjB;AAyBA,MAAMT,OAAO,GAAG;AACdE,EAAAA,OAAO,EAAE;AACPQ,IAAAA,KAAK,EAAE,IADA;AAEPC,IAAAA,KAAK,EAAE;AAFA,GADK;AAKdR,EAAAA,WAAW,EAAE;AACXO,IAAAA,KAAK,EAAE;AADI,GALC;AAQdN,EAAAA,UAAU,EAAE;AACVM,IAAAA,KAAK,EAAE,MADG;AAEVE,IAAAA,IAAI,EAAE;AAFI,GARE;AAYdP,EAAAA,UAAU,EAAE;AACVK,IAAAA,KAAK,EAAE,MADG;AAEVC,IAAAA,KAAK,EAAE;AAFG,GAZE;AAgBdL,EAAAA,OAAO,EAAE;AACPI,IAAAA,KAAK,EAAE,IADA;AAEPG,IAAAA,KAAK,EAAE,OAFA;AAGPF,IAAAA,KAAK,EAAE,CAHA;AAIPH,IAAAA,UAAU,EAAE;AACV;AACAZ,MAAAA,QAAQ,EAAE,EAFA;AAGVkB,MAAAA,IAAI,EAAEf;AAHI;AAJL,GAhBK;AA0BdQ,EAAAA,OAAO,EAAE;AACPG,IAAAA,KAAK,EAAE,MADA;AAEPE,IAAAA,IAAI,EAAE,CAFC;AAGPJ,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE,GADG;AAEVb,MAAAA,QAAQ,EAAE,EAFA;AAGVkB,MAAAA,IAAI,EAAEf;AAHI;AAHL,GA1BK;AAmCdgB,EAAAA,UAAU,EAAE;AACVL,IAAAA,KAAK,EAAE,MADG;AAEVE,IAAAA,IAAI,EAAE,CAFI;AAGVJ,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE,EADG;AAEVb,MAAAA,QAAQ,EAAE,EAFA;AAGVkB,MAAAA,IAAI,EAAEf;AAHI;AAHF;AAnCE,CAAhB","sourcesContent":["import React, {useEffect, useContext} from 'react'\r\nimport {StateContext} from '../../utils/context/stateContext'\r\nimport BrandLogo from '../Svgs/BrandLogo/BrandLogo'\r\nimport {introAnim, openTopLayer, closeTopLayer} from '../../utils/pageanimations/toplayover/toplayover'\r\nimport {checkforsession} from '../../utils/sessiondata/sessionStorage'\r\nimport {motion} from 'framer-motion'\r\nimport anime from 'animejs'\r\n\r\n\r\nconst TopLayover = () =>{\r\n  const {state, setState} = useContext(StateContext)\r\n\r\n  if(state.isTransitioning ===  true) {\r\n    // setTimeout(()=>{\r\n    //   openTopLayer()\r\n    // }, 1100)\r\n    // setTimeout(() => {\r\n    //   setState({ isTransitioning: false})\r\n    // }, 1700)\r\n  }\r\n  // if(state.isTransitioning ===  false) {\r\n  //   closeTopLayer\r\n  //   setState({ isTransitioning: 'initial'})\r\n  // }\r\n  \r\n  // useEffect(()=>{\r\n  //   (async () => {\r\n  //     const session = await checkforsession()\r\n  //     session === 'initial' ? introAnim(false) : null\r\n  //     session ? setState({isTransitioning : 'ready'}) : null\r\n  //   })()\r\n  // }, [])\r\n  useEffect(()=>{\r\n    const el = document.querySelector('.top-layover-logo')\r\n    console.log(el)\r\n    if(state.exitMode === 'topExit') {\r\n      \r\n      const tl = anime.timeline({})\r\n      tl.\r\n      add({\r\n        duration: 100,\r\n        targets: el,\r\n        opacity: 1,\r\n        easing: 'linear'\r\n      })\r\n      .add({\r\n        duration: 200,\r\n      })\r\n      .add({\r\n        opacity: 0,\r\n        duration: 50,\r\n        targets: el,\r\n        easing: 'linear'\r\n      })\r\n    }\r\n  })\r\n\r\n  return (\r\n    <motion.div \r\n      variants={topAnim}\r\n      initial={state.isTransitioning}\r\n      animate={state.isTransitioning === 'initial' ? 'initAnimate' : 'animate'}\r\n      exit={state.exitMode ? 'bottomExit' : 'topExit'}\r\n      className=\"content-center top-layover\">\r\n        <motion.div \r\n          variants={logoAnim}\r\n          initial={state.isTransitioning}\r\n          animate={state.isTransitioning === 'initial' ? 'initAnimate' : 'animate'}\r\n          exit={state.exitMode ? 'bottomExit' : 'topExit'}\r\n          className=\"top-layover-logo content-center\">\r\n          <BrandLogo colorMode={'#E3E1C3'}/>\r\n        </motion.div>\r\n\r\n\r\n      {/* <div className=\"top-layover-container content-center\">\r\n        <div className=\"top-layover-logo content-center\"> */}\r\n        {/* <BrandLogo \r\n          colorMode={'#E3E1C3'}/> */}\r\n          {/* {props.hasSession ? null : \r\n          <p className='top-loading'\r\n            style={{'color': '#F0EED2'}}>\r\n              We are loading . . .</p> } */}\r\n          {/* <p className='top-loading'\r\n            style={{'color': '#F0EED2'}}>\r\n              We are loading . . .</p> */}\r\n        {/* </div>\r\n      </div> */}\r\n      {/* <div className=\"top-layover-runner\">\r\n        <motion.span \r\n          // variants={topAnim}\r\n          // initial={state.isTransitioning ? 'initialOne' : 'initialTwo'}\r\n          // animate='animate'\r\n          // exit='exit'\r\n          className='top-runner' \r\n          // style={{'background':'#CCCAAE'}}\r\n          ></motion.span>\r\n      </div> */}\r\n    </motion.div> \r\n  )\r\n}\r\n\r\nexport default TopLayover\r\n\r\nlet easing = [0.6, 0.05, 0.01, 0.99];\r\n\r\nconst logoAnim = {\r\n  initial: {\r\n    opacity: 0\r\n  },\r\n  initAnimate: {\r\n    opacity: 0\r\n  },\r\n  initialOne:{\r\n    opacity: 0 \r\n  },\r\n  initialTwo: {\r\n    opacity: 0\r\n  },\r\n  animate: {\r\n    opacity: 0\r\n  },\r\n  topExit: {\r\n    opacity: 1, \r\n    transition: {\r\n      delay: .2\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst topAnim = {\r\n  initial: {\r\n    width: '0%',\r\n    right: 0\r\n  },\r\n  initAnimate: {\r\n    width: '0%',\r\n  },\r\n  initialOne: {\r\n    width: '100%',\r\n    left: 0\r\n  },\r\n  initialTwo: {\r\n    width: '100%',\r\n    right: 0\r\n  },\r\n  animate: {\r\n    width: '0%',\r\n    float: 'right',\r\n    right: 0,\r\n    transition: {\r\n      // delay: 1.5,\r\n      duration: .3,\r\n      ease: easing\r\n    }\r\n  },\r\n  topExit: {\r\n    width: '100%',\r\n    left: 0,\r\n    transition: {\r\n      delay: 0.8,\r\n      duration: .3,\r\n      ease: easing\r\n    }\r\n  },\r\n  bottomExit: {\r\n    width: '100%',\r\n    left: 0,\r\n    transition: {\r\n      delay: .5,\r\n      duration: .3,\r\n      ease: easing\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}