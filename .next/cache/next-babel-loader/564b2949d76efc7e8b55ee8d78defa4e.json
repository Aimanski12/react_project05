{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\components\\\\TopLayover\\\\TopLayover.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useContext } from 'react';\nimport BrandLogo from '../Svgs/BrandLogo/BrandLogo';\nimport { introAnim } from '../../utils/pageanimations/toplayover/toplayover';\nimport { checkforsession } from '../../utils/sessiondata/sessionStorage';\nimport { StateContext } from '../../utils/context/stateContext';\n\nfunction TopLayover(_x) {\n  return _TopLayover.apply(this, arguments);\n}\n\n_c2 = TopLayover;\n\nfunction _TopLayover() {\n  var _s = $RefreshSig$();\n\n  _TopLayover = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n    var _useContext, hasSession;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            _useContext = useContext(StateContext), hasSession = _useContext.hasSession;\n            useEffect(function () {\n              var session = checkforsession();\n              console.log(session);\n              introAnim(false);\n            }); // console.log(session)\n            // if(!session){\n            //   hasSession(true)\n            // }\n\n            return _context.abrupt(\"return\", __jsx(\"div\", {\n              className: \"top-layover\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 5\n              }\n            }, __jsx(\"div\", {\n              className: \"top-layover-container content-center\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 7\n              }\n            }, __jsx(\"div\", {\n              className: \"top-layover-logo content-center\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 9\n              }\n            }, __jsx(BrandLogo, {\n              colorMode: '#E3E1C3',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 11\n              }\n            }), props.hasSession ? null : __jsx(\"p\", {\n              className: \"top-loading\",\n              style: {\n                'color': '#F0EED2'\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 11\n              }\n            }, \"We are loading . . .\"))), __jsx(\"div\", {\n              className: \"top-layover-runner\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 7\n              }\n            }, __jsx(\"span\", {\n              className: \"top-runner\",\n              style: {\n                'background': '#CCCAAE'\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 9\n              }\n            }))));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }), \"jkaLg947Mb9kmEFGPzRbUEfR43c=\"));\n  return _TopLayover.apply(this, arguments);\n}\n\n_c = TopLayover;\nexport default TopLayover;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TopLayover\");\n$RefreshReg$(_c2, \"TopLayover\");","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/components/TopLayover/TopLayover.js"],"names":["React","useEffect","useContext","BrandLogo","introAnim","checkforsession","StateContext","TopLayover","props","hasSession","session","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,UAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAAQC,SAAR,QAAwB,kDAAxB;AACA,SAAQC,eAAR,QAA8B,wCAA9B;AACA,SAAQC,YAAR,QAA2B,kCAA3B;;SAEeC,U;;;;MAAAA,U;;;;;4EAAf,iBAA0BC,KAA1B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,0BACuBN,UAAU,CAACI,YAAD,CADjC,EACSG,UADT,eACSA,UADT;AAGER,YAAAA,SAAS,CAAC,YAAI;AACZ,kBAAMS,OAAO,GAAGL,eAAe,EAA/B;AACAM,cAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAEAN,cAAAA,SAAS,CAAC,KAAD,CAAT;AACD,aALQ,CAAT,CAHF,CAUE;AAEA;AACA;AACA;;AAdF,6CAiBI;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE;AAAK,cAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE;AAAK,cAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE,MAAC,SAAD;AACE,cAAA,SAAS,EAAE,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGGI,KAAK,CAACC,UAAN,GAAmB,IAAnB,GACD;AAAG,cAAA,SAAS,EAAC,aAAb;AACE,cAAA,KAAK,EAAE;AAAC,yBAAS;AAAV,eADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAJF,CADF,CADF,EAWE;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE;AAAM,cAAA,SAAS,EAAC,YAAhB;AACE,cAAA,KAAK,EAAE;AAAC,8BAAa;AAAd,eADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAXF,CAjBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;KAAeF,U;AAqCf,eAAeA,UAAf","sourcesContent":["import React, {useEffect, useContext} from 'react'\r\nimport BrandLogo from '../Svgs/BrandLogo/BrandLogo'\r\nimport {introAnim} from '../../utils/pageanimations/toplayover/toplayover'\r\nimport {checkforsession} from '../../utils/sessiondata/sessionStorage'\r\nimport {StateContext} from '../../utils/context/stateContext'\r\n\r\nasync function TopLayover(props) {\r\n  const {hasSession} = useContext(StateContext)\r\n  \r\n  useEffect(()=>{\r\n    const session = checkforsession()\r\n    console.log(session)\r\n\r\n    introAnim(false)\r\n  })\r\n\r\n  // console.log(session)\r\n\r\n  // if(!session){\r\n  //   hasSession(true)\r\n  // }\r\n\r\n  return (\r\n    <div className=\"top-layover\">\r\n      <div className=\"top-layover-container content-center\">\r\n        <div className=\"top-layover-logo content-center\">\r\n          <BrandLogo \r\n            colorMode={'#E3E1C3'}/>\r\n          {props.hasSession ? null : \r\n          <p className='top-loading'\r\n            style={{'color': '#F0EED2'}}>\r\n              We are loading . . .</p> }\r\n        </div>\r\n      </div>\r\n      <div className=\"top-layover-runner\">\r\n        <span className='top-runner' \r\n          style={{'background':'#CCCAAE'}}></span>\r\n      </div>\r\n     \r\n    </div> \r\n  )\r\n}\r\n\r\nexport default TopLayover"]},"metadata":{},"sourceType":"module"}