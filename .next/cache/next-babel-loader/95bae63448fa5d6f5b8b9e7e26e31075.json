{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\containers\\\\Contacts\\\\Inputs.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect, useContext } from 'react';\nimport { InputData } from '../../utils/context/inputContext';\nimport { inputvalues } from '../../utils/data/inputdata';\n\nfunction Inputs() {\n  _s();\n\n  var _this = this;\n\n  var _useContext = useContext(InputData),\n      inputValue = _useContext.inputValue,\n      activeInput = _useContext.activeInput,\n      setValues = _useContext.setValues;\n\n  var name = useRef(null);\n  var email = useRef(null);\n  var title = useRef(null);\n  var message = useRef(null);\n\n  function selectRef(n) {\n    if (n === 'name') return name;\n    if (n === 'email') return email;\n    if (n === 'title') return title;\n    if (n === 'message') return message;\n  }\n\n  useEffect(function () {\n    if (activeInput === 'message') activateInput(message);\n  });\n\n  function activateInput(input) {\n    input.current.focus();\n  }\n\n  var inputs = inputvalues.map(function (input, i) {\n    return input.el === 'input' ? __jsx(\"div\", {\n      className: \"input-container\",\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, __jsx(\"i\", {\n      className: \"icon\",\n      style: {\n        background: \"url('/images/\".concat(input.background, \"') no-repeat center center\")\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), __jsx(\"input\", {\n      className: \"input-field\",\n      type: input.type,\n      placeholder: input.placeholder,\n      name: input.name,\n      value: inputValue[i],\n      ref: selectRef(input.name),\n      onChange: function onChange(e) {\n        return setValues(e.target.value, i);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    })) : __jsx(\"div\", {\n      className: \"input-container\",\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, __jsx(\"textarea\", {\n      className: \"input-field message-area focus\",\n      spellCheck: false,\n      placeholder: input.placeholder,\n      name: input.name,\n      ref: selectRef(input.name),\n      value: inputValue[i],\n      onChange: function onChange(e) {\n        return setValues(e.target.value, i);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }));\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, inputs);\n}\n\n_s(Inputs, \"Sj7qu9UBcj76g/y1sUJ92kDJE/U=\");\n\n_c = Inputs;\nexport default Inputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inputs\");","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/containers/Contacts/Inputs.js"],"names":["React","useRef","useEffect","useContext","InputData","inputvalues","Inputs","inputValue","activeInput","setValues","name","email","title","message","selectRef","n","activateInput","input","current","focus","inputs","map","i","el","background","type","placeholder","e","target","value"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect, useContext} from 'react'\r\nimport {InputData} from '../../utils/context/inputContext'\r\nimport {inputvalues} from '../../utils/data/inputdata'\r\n\r\nfunction Inputs() {\r\n  const {inputValue, activeInput, setValues} = useContext(InputData)\r\n  const name = useRef(null)\r\n  const email = useRef(null)\r\n  const title = useRef(null)\r\n  const message = useRef(null)\r\n\r\n  function selectRef(n){\r\n    if(n === 'name') return name\r\n    if(n === 'email') return email\r\n    if(n === 'title') return title\r\n    if(n === 'message') return message\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(activeInput === 'message') activateInput(message)\r\n  })\r\n\r\n  function activateInput (input) {\r\n    input.current.focus()\r\n  }\r\n  \r\n  let inputs = inputvalues.map((input, i) => {\r\n    return input.el === 'input' ? (\r\n      <div className=\"input-container\" key={i}>\r\n        <i className=\"icon\"\r\n        style={{background: \r\n          `url('/images/${input.background}') no-repeat center center`}}></i>\r\n        <input \r\n          className=\"input-field\" \r\n          type={input.type} \r\n          placeholder={input.placeholder}\r\n          name={input.name}\r\n          value={inputValue[i]}\r\n          ref={selectRef(input.name)}\r\n          onChange={(e)=>setValues(e.target.value, i)}/>\r\n      </div>\r\n    ) : (\r\n      <div className=\"input-container\" key={i}>\r\n        <textarea \r\n          className=\"input-field message-area focus\" \r\n          spellCheck={false}\r\n          placeholder={input.placeholder} \r\n          name={input.name}\r\n          ref={selectRef(input.name)}\r\n          value={inputValue[i]}\r\n          onChange={(e)=>setValues(e.target.value, i)}>\r\n        </textarea>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      {inputs}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Inputs"]},"metadata":{},"sourceType":"module"}