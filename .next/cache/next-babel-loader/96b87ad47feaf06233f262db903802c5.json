{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\components\\\\ShortProjectView\\\\projects\\\\Projects.js\";\nvar __jsx = React.createElement;\nimport React, { Fragment } from 'react';\n\nfunction Projects(props) {\n  var _this = this;\n\n  var projects = props.projects.map(function (proj, i) {\n    return __jsx(\"div\", {\n      className: \"short-project-wrapper\",\n      style: {\n        background: \"url('\".concat(proj.theme, \"') no-repeat center center\")\n      },\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 8\n      }\n    }, __jsx(\"div\", {\n      className: \"projects-wrapper\",\n      onMouseLeave: function onMouseLeave(e) {\n        return mouseOut(e);\n      },\n      onMouseEnter: function onMouseEnter(e) {\n        return mouseEnter(e, proj.bkgColor);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"project-img-desc\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"sub-reveal-container project-image show\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"sub-reveal project-img\",\n      style: {\n        background: \"url('\".concat(proj.photo.teaser, \"') no-repeat center top\"),\n        backgroundSize: 'cover'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }\n    }, \" \")), __jsx(\"div\", {\n      className: \"img-backer\",\n      style: {\n        backgroundColor: proj.bkgColor\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      className: \"project-text-desc\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"project-text-wrapper\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"project-text-alignleft\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, __jsx(\"h3\", {\n      className: \"p-wrapper head2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      className: \"show-container p-container show\",\n      style: {\n        color: proj.textColors.primary\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      className: \"reveal p-reveal\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, proj.title), __jsx(\"div\", {\n      className: \"runner p-runner\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }))), __jsx(\"p\", {\n      className: \"sub-reveal-container p-desc desc show\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      className: \"sub-reveal p-desc-content\",\n      style: {\n        color: proj.textColors.secondary\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    }, proj.shortDesc))), __jsx(\"div\", {\n      className: \"project-text-alignright\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      href: \"\".concat(proj.projectlinks.internal),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, __jsx(\"button\", {\n      type: \"button\",\n      className: \"sub-reveal-container content-center button-wrapper show\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }\n    }, __jsx(\"span\", {\n      className: \"sub-reveal\",\n      style: {\n        color: proj.textColor\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, \"View project\"))))))));\n  });\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, projects);\n} // const mapStateToProps = (state) => {\n//   return {\n//     // menus: state.state.menus,\n//     activeRoute: state.state.activeRoute,\n//     // isOpen: state.state.isOpen,\n//     // isAnimating: state.state.isAnimating,\n//     // isClicked: state.state.isClicked\n//   }\n// }\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     // setMenu: (val) => { dispatch(action.menuIsOpen(val)) },\n//     // checkPage: () => {dispatch(action.checkPageLocation())},\n//     setRedirect: (istrue, path) => { dispatch(action.setRedirect(istrue, path))}\n//   }\n// }\n// export default connect(null, mapDispatchToProps)(Projects);\n\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/components/ShortProjectView/projects/Projects.js"],"names":["React","Fragment","Projects","props","projects","map","proj","i","background","theme","e","mouseOut","mouseEnter","bkgColor","photo","teaser","backgroundSize","backgroundColor","color","textColors","primary","title","secondary","shortDesc","projectlinks","internal","textColor"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react'\r\n\r\nfunction Projects(props) {\r\n  \r\n  let projects = props.projects.map((proj, i)=>{\r\n    return (\r\n       <div className=\"short-project-wrapper\"\r\n       style={{background: `url('${proj.theme}') no-repeat center center`}} key={i} >\r\n        <div className=\"projects-wrapper\" \r\n          onMouseLeave={(e)=>mouseOut(e)}\r\n          onMouseEnter={(e)=>mouseEnter(e, proj.bkgColor)}\r\n          >\r\n\r\n          <div className=\"project-img-desc\">\r\n            <div className=\"sub-reveal-container project-image show\">\r\n              <div className='sub-reveal project-img' \r\n              style={{background: `url('${proj.photo.teaser}') no-repeat center top`, backgroundSize: 'cover'}}> </div>\r\n            </div>\r\n            <div className=\"img-backer\"\r\n               style={{backgroundColor: proj.bkgColor}}></div>\r\n          </div>\r\n\r\n          <div className=\"project-text-desc\">\r\n            <div className=\"project-text-wrapper\">\r\n\r\n              <div className=\"project-text-alignleft\">\r\n                <h3 className=\"p-wrapper head2\">\r\n                  <span className=\"show-container p-container show\"\r\n                    style={{color: proj.textColors.primary}}>\r\n                    <div className=\"reveal p-reveal\">{proj.title}</div>\r\n                    <div className=\"runner p-runner\"></div>\r\n                  </span>\r\n                </h3>\r\n                <p className=\"sub-reveal-container p-desc desc show\">\r\n                  <span className=\"sub-reveal p-desc-content\"\r\n                    style={{color: proj.textColors.secondary}}>{proj.shortDesc}</span>\r\n                </p>\r\n              </div>\r\n              <div className=\"project-text-alignright\">\r\n                <a href={`${proj.projectlinks.internal}`}>\r\n                  <button type='button' \r\n                    className='sub-reveal-container content-center button-wrapper show' >\r\n                    <span className='sub-reveal'\r\n                      style={{color: proj.textColor}}>View project</span>\r\n                  </button>\r\n                </a>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      {projects}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     // menus: state.state.menus,\r\n//     activeRoute: state.state.activeRoute,\r\n//     // isOpen: state.state.isOpen,\r\n//     // isAnimating: state.state.isAnimating,\r\n//     // isClicked: state.state.isClicked\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     // setMenu: (val) => { dispatch(action.menuIsOpen(val)) },\r\n//     // checkPage: () => {dispatch(action.checkPageLocation())},\r\n//     setRedirect: (istrue, path) => { dispatch(action.setRedirect(istrue, path))}\r\n//   }\r\n// }\r\n\r\n// export default connect(null, mapDispatchToProps)(Projects);\r\nexport default Projects;"]},"metadata":{},"sourceType":"module"}