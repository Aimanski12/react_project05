{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\utils\\\\context\\\\inputContext.js\";\nvar __jsx = React.createElement;\nimport React, { useState, createContext } from 'react'; // export InputContext \n\nexport const InputData = createContext(); // the props is received and has a value that references\n// the input data sets and returns data for the message form\n\nexport function InputDataContext() {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    inputValue: ['', '', '', ''],\n    alert: {\n      message: '* required',\n      color: 'alert'\n    }\n  }); // function that will set update the state\n  // setApplicationState = (newState) => {\n  // this.setState({\n  //   ...this.state,\n  //   ...newState\n  // })\n  // }\n\n  function setvalues(val, i) {} // setValues (val, i) {\n  //   let stat = this.state\n  //   console.log(val, i, stat)\n  //   // let inputs = this.state.inputValue\n  //   // inputs[i] = val\n  //   // this.setApplicationState({\n  //   //   inputValue: inputs\n  //   // })\n  // }\n\n\n  return __jsx(InputData.Provider, {\n    value: {\n      alert: state.alert,\n      inputValue: state.inputValue,\n      setValues: setvalues\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, this.props.children);\n}","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/utils/context/inputContext.js"],"names":["React","useState","createContext","InputData","InputDataContext","state","setState","inputValue","alert","message","color","setvalues","val","i","setValues","props","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C,C,CAKA;;AACA,OAAO,MAAMC,SAAS,GAAGD,aAAa,EAA/B,C,CAEP;AACA;;AACA,OAAO,SAASE,gBAAT,GAA6B;AAElC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC;AACjCM,IAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CADqB;AAEjCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,YADJ;AAELC,MAAAA,KAAK,EAAE;AAFF;AAF0B,GAAD,CAAlC,CAFkC,CAUlC;AACA;AACE;AACA;AACA;AACA;AACF;;AAEA,WAASC,SAAT,CAAmBC,GAAnB,EAAwBC,CAAxB,EAA0B,CAEzB,CApBiC,CAsBlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SACE,MAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAE;AACvBL,MAAAA,KAAK,EAAEH,KAAK,CAACG,KADU;AAEvBD,MAAAA,UAAU,EAAEF,KAAK,CAACE,UAFK;AAGvBO,MAAAA,SAAS,EAAEH;AAHY,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG,KAAKI,KAAL,CAAWC,QAJd,CADF;AAQD","sourcesContent":["import React, { useState, createContext } from 'react'\r\n\r\n\r\n\r\n\r\n// export InputContext \r\nexport const InputData = createContext()\r\n\r\n// the props is received and has a value that references\r\n// the input data sets and returns data for the message form\r\nexport function InputDataContext () {\r\n\r\n  const [state, setState] = useState({\r\n    inputValue: ['', '', '', ''],\r\n    alert: {\r\n      message: '* required',\r\n      color: 'alert'\r\n    }\r\n  })\r\n  \r\n  // function that will set update the state\r\n  // setApplicationState = (newState) => {\r\n    // this.setState({\r\n    //   ...this.state,\r\n    //   ...newState\r\n    // })\r\n  // }\r\n  \r\n  function setvalues(val, i){\r\n\r\n  }\r\n\r\n  // setValues (val, i) {\r\n  //   let stat = this.state\r\n  //   console.log(val, i, stat)\r\n  //   // let inputs = this.state.inputValue\r\n  //   // inputs[i] = val\r\n  //   // this.setApplicationState({\r\n  //   //   inputValue: inputs\r\n  //   // })\r\n  // }\r\n\r\n\r\n  return (\r\n    <InputData.Provider value={{\r\n        alert: state.alert, \r\n        inputValue: state.inputValue,\r\n        setValues: setvalues }}>\r\n      {this.props.children}\r\n    </InputData.Provider>\r\n  )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}