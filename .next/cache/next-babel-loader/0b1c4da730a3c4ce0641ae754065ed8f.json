{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\components\\\\Buttons\\\\Buttons.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Button from '../Svgs/Logos/Logos';\nimport WithBox from './WithBox/WithBox'; // function Buttons(props) {\n\nvar Buttons = /*#__PURE__*/function (_Component) {\n  _inherits(Buttons, _Component);\n\n  var _super = _createSuper(Buttons);\n\n  function Buttons() {\n    _classCallCheck(this, Buttons);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Buttons, [{\n    key: \"render\",\n    value: function render() {\n      var button;\n\n      if (this.props.type === 'withText') {\n        button = __jsx(Button, {\n          type: this.props.type,\n          colors: this.props.colors,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 16\n          }\n        });\n      }\n\n      if (this.props.type === 'withBox') {\n        button = __jsx(WithBox, {\n          btnType: this.props.btnType,\n          link: this.props.link,\n          text: this.props.text,\n          withSvg: this.props.withSvg,\n          colors: this.props.colors,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 16\n          }\n        });\n      }\n\n      if (this.props.type === 'arrow') {\n        button = __jsx(Button, {\n          colors: this.props.colors,\n          type: this.props.type,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 16\n          }\n        });\n      }\n\n      __jsx(Button, {\n        type: \"withBox\",\n        btnType: \"box-button\",\n        link: \"/contacts\",\n        text: \"message me\",\n        withSvg: \"true\",\n        colors: \"#347A78\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 6\n        }\n      });\n\n      return button;\n    }\n  }]);\n\n  return Buttons;\n}(Component); // let contextType = PageData\n// console.log(props)\n//   return (\n//   )\n// }\n\n\nexport default Buttons;","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/components/Buttons/Buttons.js"],"names":["React","Component","Button","WithBox","Buttons","button","props","type","colors","btnType","link","text","withSvg"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CAEA;;IACMC,O;;;;;;;;;;;;;6BAKI;AAGN,UAAIC,MAAJ;;AACA,UAAG,KAAKC,KAAL,CAAWC,IAAX,KAAoB,UAAvB,EAAmC;AACjCF,QAAAA,MAAM,GAAG,MAAC,MAAD;AAAQ,UAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,IAAzB;AAA+B,UAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AACD;;AAED,UAAG,KAAKF,KAAL,CAAWC,IAAX,KAAoB,SAAvB,EAAkC;AAChCF,QAAAA,MAAM,GAAG,MAAC,OAAD;AACC,UAAA,OAAO,EAAE,KAAKC,KAAL,CAAWG,OADrB;AAEC,UAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,IAFlB;AAGC,UAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWK,IAHlB;AAIC,UAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,OAJrB;AAKC,UAAA,MAAM,EAAE,KAAKN,KAAL,CAAWE,MALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAMD;;AAED,UAAG,KAAKF,KAAL,CAAWC,IAAX,KAAoB,OAAvB,EAAgC;AAC9BF,QAAAA,MAAM,GAAG,MAAC,MAAD;AAAQ,UAAA,MAAM,EAAE,KAAKC,KAAL,CAAWE,MAA3B;AAAmC,UAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AACD;;AAEA,YAAC,MAAD;AACG,QAAA,IAAI,EAAC,SADR;AAGG,QAAA,OAAO,EAAC,YAHX;AAIG,QAAA,IAAI,EAAC,WAJR;AAKG,QAAA,IAAI,EAAC,YALR;AAMG,QAAA,OAAO,EAAC,MANX;AAOG,QAAA,MAAM,EAAC,SAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaD,aACGF,MADH;AAGD;;;;EA1CmBJ,S,GA8CpB;AAEA;AAEF;AACA;AACA;;;AAEA,eAAeG,OAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport Button from '../Svgs/Logos/Logos'\r\nimport WithBox from './WithBox/WithBox'\r\n\r\n// function Buttons(props) {\r\nclass Buttons extends Component {\r\n  \r\n\r\n\r\n\r\n  render(){\r\n    \r\n\r\n    let button;\r\n    if(this.props.type === 'withText') {\r\n      button = <Button type={this.props.type} colors={this.props.colors}/> \r\n    }\r\n    \r\n    if(this.props.type === 'withBox') {\r\n      button = <WithBox \r\n                btnType={this.props.btnType}\r\n                link={this.props.link}\r\n                text={this.props.text} \r\n                withSvg={this.props.withSvg} \r\n                colors={this.props.colors}/> \r\n    }\r\n    \r\n    if(this.props.type === 'arrow') {\r\n      button = <Button colors={this.props.colors} type={this.props.type}/> \r\n    }\r\n\r\n     <Button \r\n        type='withBox'\r\n        \r\n        btnType='box-button'\r\n        link='/contacts'\r\n        text='message me' \r\n        withSvg='true'\r\n        colors='#347A78'\r\n        \r\n        />\r\n\r\n\r\n\r\n    return(\r\n      (button)\r\n    )\r\n  }\r\n}\r\n\r\n\r\n  // let contextType = PageData\r\n\r\n  // console.log(props)\r\n\r\n//   return (\r\n//   )\r\n// }\r\n\r\nexport default Buttons;\r\n"]},"metadata":{},"sourceType":"module"}