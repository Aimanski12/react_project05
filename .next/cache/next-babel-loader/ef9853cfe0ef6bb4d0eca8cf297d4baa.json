{"ast":null,"code":"// check if a string is empty\nvar ifEmptyString = /^\\s*\\S+.*/; // check if a string contains a number\n\nvar stringContainsNumber = /\\d/; // check if email is valid\n\nvar isEmailValid = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/; // function to check if the name input is invalid\n\nexport function checkValue(input, value) {\n  var valueIsNotEmpty = ifEmptyString.test(value);\n  var valueHasNumber = stringContainsNumber.test(value);\n  var emailIsValid = isEmailValid.test(value);\n\n  if (input === 'name') {\n    if (!valueIsNotEmpty) return 'nameIsEmpty';\n    if (valueHasNumber) return 'hasNumber';\n  } else if (input === 'email') {\n    if (!valueIsNotEmpty) return 'emailIsEmpty';\n    if (!emailIsValid) return 'emailIsInvalid';\n  } else if (input === 'message') {\n    if (!valueIsNotEmpty) return 'messageIsEmpty';\n  }\n} // function that will check for the value returned from \n// the validation and then return an object for the state\n\nexport function stateUpdateValue(val) {\n  if (val === 'nameIsEmpty') {\n    return state('Please enter your full name.', 'alert', 'name');\n  } else if (val === 'hasNumber') {\n    return state('Please enter a valid name', 'alert', 'name');\n  } else if (val === 'emailIsEmpty') {\n    return state('Please enter your email.', 'alert', 'email');\n  } else if (val === 'emailIsInvalid') {\n    return state('Please provide a valid email.', 'alert', 'email');\n  } else if (val === 'messageIsEmpty') {\n    return state('Please enter your message.', 'alert', 'message');\n  } else if (val === 'process') {\n    return state('Processing . . .', 'warning', null);\n  } else if (val === 'failed') {\n    return state('Aww... It looks like there is a problem with your connection.', 'warning', null);\n  }\n} // this function is a sette. it will return an object\n// that will be used to update the state. \n\nfunction state(text, alert, input) {\n  return {\n    alert: {\n      message: text,\n      color: alert\n    },\n    activeInput: input\n  };\n}","map":null,"metadata":{},"sourceType":"module"}