{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\components\\\\ShortProjectView\\\\projects\\\\Projects.js\";\nvar __jsx = React.createElement;\nimport React, { Fragment, useEffect } from 'react'; // import { mouseEnter, mouseOut, resize } from '../../../utils/pageAnimation/projectsHoverAnimations'\n// import {imageUrl} from '../../../utils/common/common'\n// import * as action from '../../../store/actions/index'\n// import {connect} from 'react-redux'\n\nfunction Projects(props) {\n  useEffect(() => {// resize()\n    // window.addEventListener('resize', resizeEls)\n  });\n  let projects = props.projects.map((proj, i) => {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, \"asdf\") //  <div className=\"short-project-wrapper\"\n    //  style={{background: `url('${imageUrl(proj.theme, 'png')}') no-repeat center center`}} key={i} >\n    //   <div className=\"projects-wrapper\" \n    //     onMouseLeave={(e)=>mouseOut(e)}\n    //     onMouseEnter={(e)=>mouseEnter(e, proj.bkgColor)}\n    //     >\n    //     <div className=\"project-img-desc\">\n    //       <div className=\"sub-reveal-container project-image show\">\n    //         <div className='sub-reveal project-img' \n    //         style={{background: `url('${imageUrl(proj.photo.teaser, 'png')}') no-repeat center top`, backgroundSize: 'cover'}}> </div>\n    //       </div>\n    //       <div className=\"img-backer\"\n    //          style={{backgroundColor: proj.bkgColor}}></div>\n    //     </div>\n    //     <div className=\"project-text-desc\">\n    //       <div className=\"project-text-wrapper\">\n    //         <div className=\"project-text-alignleft\">\n    //           <h3 className=\"p-wrapper head2\">\n    //             <span className=\"show-container p-container show\"\n    //               style={{color: proj.textColor}}>\n    //               <div className=\"reveal p-reveal\">{proj.title}</div>\n    //               <div className=\"runner p-runner\"></div>\n    //             </span>\n    //           </h3>\n    //           <p className=\"sub-reveal-container p-desc desc show\">\n    //             <span className=\"sub-reveal p-desc-content\"\n    //               style={{color: proj.textColor}}>{proj.shortDesc}</span>\n    //           </p>\n    //         </div>\n    //         <div className=\"project-text-alignright\">\n    //           <a href={`${proj.projectlinks.internal}`}>\n    //             <button type='button' \n    //               className='sub-reveal-container content-center button-wrapper show' >\n    //               <span className='sub-reveal'\n    //                 style={{color: proj.textColor}}>View project</span>\n    //             </button>\n    //           </a>\n    //         </div>\n    //       </div>\n    //     </div>\n    //   </div>\n    // </div>\n    ;\n  });\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, projects);\n} // const mapStateToProps = (state) => {\n//   return {\n//     // menus: state.state.menus,\n//     activeRoute: state.state.activeRoute,\n//     // isOpen: state.state.isOpen,\n//     // isAnimating: state.state.isAnimating,\n//     // isClicked: state.state.isClicked\n//   }\n// }\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     // setMenu: (val) => { dispatch(action.menuIsOpen(val)) },\n//     // checkPage: () => {dispatch(action.checkPageLocation())},\n//     setRedirect: (istrue, path) => { dispatch(action.setRedirect(istrue, path))}\n//   }\n// }\n// export default connect(null, mapDispatchToProps)(Projects);\n\n\nexport default Projects;","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/components/ShortProjectView/projects/Projects.js"],"names":["React","Fragment","useEffect","Projects","props","projects","map","proj","i"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC,C,CACA;AACA;AACA;AACA;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAEvBF,EAAAA,SAAS,CAAC,MAAI,CACZ;AACA;AACD,GAHQ,CAAT;AAMA,MAAIG,QAAQ,GAAGD,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAmB,CAACC,IAAD,EAAOC,CAAP,KAAW;AAC3C,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR,CACE;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AA/CF;AAiDD,GAlDc,CAAf;AAqDA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QADH,CADF;AAKD,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,eAAeF,QAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react'\r\n// import { mouseEnter, mouseOut, resize } from '../../../utils/pageAnimation/projectsHoverAnimations'\r\n// import {imageUrl} from '../../../utils/common/common'\r\n// import * as action from '../../../store/actions/index'\r\n// import {connect} from 'react-redux'\r\n\r\nfunction Projects(props) {\r\n  \r\n  useEffect(()=>{\r\n    // resize()\r\n    // window.addEventListener('resize', resizeEls)\r\n  })\r\n  \r\n\r\n  let projects = props.projects.map((proj, i)=>{\r\n    return (<h1>asdf</h1>\r\n      //  <div className=\"short-project-wrapper\"\r\n      //  style={{background: `url('${imageUrl(proj.theme, 'png')}') no-repeat center center`}} key={i} >\r\n      //   <div className=\"projects-wrapper\" \r\n      //     onMouseLeave={(e)=>mouseOut(e)}\r\n      //     onMouseEnter={(e)=>mouseEnter(e, proj.bkgColor)}\r\n      //     >\r\n\r\n      //     <div className=\"project-img-desc\">\r\n      //       <div className=\"sub-reveal-container project-image show\">\r\n      //         <div className='sub-reveal project-img' \r\n      //         style={{background: `url('${imageUrl(proj.photo.teaser, 'png')}') no-repeat center top`, backgroundSize: 'cover'}}> </div>\r\n      //       </div>\r\n      //       <div className=\"img-backer\"\r\n      //          style={{backgroundColor: proj.bkgColor}}></div>\r\n      //     </div>\r\n\r\n      //     <div className=\"project-text-desc\">\r\n      //       <div className=\"project-text-wrapper\">\r\n\r\n      //         <div className=\"project-text-alignleft\">\r\n      //           <h3 className=\"p-wrapper head2\">\r\n      //             <span className=\"show-container p-container show\"\r\n      //               style={{color: proj.textColor}}>\r\n      //               <div className=\"reveal p-reveal\">{proj.title}</div>\r\n      //               <div className=\"runner p-runner\"></div>\r\n      //             </span>\r\n      //           </h3>\r\n      //           <p className=\"sub-reveal-container p-desc desc show\">\r\n      //             <span className=\"sub-reveal p-desc-content\"\r\n      //               style={{color: proj.textColor}}>{proj.shortDesc}</span>\r\n      //           </p>\r\n      //         </div>\r\n      //         <div className=\"project-text-alignright\">\r\n      //           <a href={`${proj.projectlinks.internal}`}>\r\n      //             <button type='button' \r\n      //               className='sub-reveal-container content-center button-wrapper show' >\r\n      //               <span className='sub-reveal'\r\n      //                 style={{color: proj.textColor}}>View project</span>\r\n      //             </button>\r\n      //           </a>\r\n      //         </div>\r\n      //       </div>\r\n\r\n      //     </div>\r\n\r\n      //   </div>\r\n      // </div>\r\n    )\r\n  })\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      {projects}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     // menus: state.state.menus,\r\n//     activeRoute: state.state.activeRoute,\r\n//     // isOpen: state.state.isOpen,\r\n//     // isAnimating: state.state.isAnimating,\r\n//     // isClicked: state.state.isClicked\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     // setMenu: (val) => { dispatch(action.menuIsOpen(val)) },\r\n//     // checkPage: () => {dispatch(action.checkPageLocation())},\r\n//     setRedirect: (istrue, path) => { dispatch(action.setRedirect(istrue, path))}\r\n//   }\r\n// }\r\n\r\n// export default connect(null, mapDispatchToProps)(Projects);\r\nexport default Projects;"]},"metadata":{},"sourceType":"module"}