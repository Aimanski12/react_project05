{"ast":null,"code":"import anime from 'animejs';\nexport function scrollAnimation(page) {\n  console.log(page);\n\n  if (window.innerWidth > 768) {\n    slideInElementsOnScroll();\n  }\n} // function that will debounce the scroll event to every\n// 70ms so to avoid performance issue\n\nfunction debounce(func) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 180;\n  var immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var timeout;\n  return function () {\n    var context = this,\n        args = arguments;\n\n    var later = function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n\n    var callNow = immediate && timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n} // function for slide animation\n\n\nfunction slideInAnimation() {\n  var els = document.querySelectorAll('.show');\n  els.forEach(function (el) {\n    var slideInAt = window.scrollY + window.innerHeight - el.clientHeight / 2;\n    var clientHeight = el.getBoundingClientRect().top + window.scrollY;\n    var isPassed = slideInAt > clientHeight;\n    var elIsNotDone = !el.classList.contains('done');\n    var elChildren = el.children;\n    var isProjectImage = el.classList.contains('project-image');\n    var isMessageCont = el.classList.contains('message-container');\n\n    if (isPassed && elIsNotDone) {\n      removeOverlay(el);\n\n      if (elChildren.length === 2) {\n        showSlider(elChildren);\n      } else if (elChildren.length === 1) {\n        // check if this element has a class of project-image\n        if (isProjectImage) setTimer(showOpacity, elChildren[0], el); // check if this class has a message-container\n\n        if (isMessageCont) {\n          el.classList.add('done');\n          showOpacity(elChildren[0]);\n        } // check if the element does not contain both the class names\n\n\n        if (!isProjectImage && !isMessageCont) {\n          setTimer(slideUp, elChildren[0], el);\n        }\n      }\n    }\n  });\n}\n\nfunction setTimer(func, child, el) {\n  setTimeout(function () {\n    func(child);\n    el.classList.add('done');\n  }, 700);\n}\n\nfunction removeOverlay(el) {\n  var hasHeaderClass = el.classList.contains('header-social-container');\n  var hasScrollClass = el.classList.contains('scroll-cover');\n\n  if (hasHeaderClass || hasScrollClass) {\n    setTimeout(function () {\n      el.style.overflow = 'visible';\n    }, 1200);\n  }\n} // animation that will run the slider and we are using the \n// timeline animation make a smooth effect\n\n\nfunction showSlider(el) {\n  var tl = anime.timeline({});\n  var parent = el[1].closest('.show');\n  parent.classList.add('done');\n  tl.add({\n    targets: el[1],\n    width: '100%',\n    easing: 'easeInSine',\n    duration: 300\n  }).add({\n    targets: el[1],\n    duration: 400,\n    complete: function complete(anim) {\n      el[1].style.right = 0;\n    }\n  }).add({\n    targets: el[1],\n    width: '0%',\n    easing: 'easeInSine',\n    duration: 300,\n    begin: function begin(anim) {\n      slideUp(el[0]);\n    }\n  });\n} // function that will make the image opacity from \n// 0 to 1 to make the image visible\n\n\nfunction showOpacity(el) {\n  el.style.opacity = 0;\n  anime({\n    targets: el,\n    opacity: 1,\n    easing: 'easeInSine',\n    duration: 500\n  });\n} // this will make the text or paragraphs visible\n// this slide up the text\n\n\nfunction slideUp(el) {\n  var tl = anime.timeline({});\n  el.style.transform = 'translateY(60px)';\n  tl.add({\n    targets: el,\n    opacity: {\n      duration: 550,\n      value: 1,\n      delay: 200,\n      easing: 'linear'\n    },\n    translateY: {\n      value: 0,\n      easing: 'easeOutElastic(10, 2)',\n      duration: 700\n    }\n  });\n}\n\nexport function loadSlideElements() {\n  console.log('asdf'); // we are setting a 200 ms interval to load all \n  // the elements before we are getting all the data\n\n  setTimeout(function () {\n    slideInAnimation();\n  }, 200);\n} // call the animation function when we are scrolling the page\n\nexport function slideInElementsOnScroll() {\n  debounce(slideInAnimation());\n}","map":null,"metadata":{},"sourceType":"module"}