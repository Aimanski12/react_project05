{"ast":null,"code":"import anime from 'animejs';\nexport function scrollAnimation(page) {\n  // console.log(page)\n  if (window.innerWidth > 768) {\n    slideInElementsOnScroll();\n  }\n} // function that will debounce the scroll event to every\n// 70ms so to avoid performance issue\n\nfunction debounce(func, wait = 180, immediate = true) {\n  let timeout;\n  return function () {\n    let context = this,\n        args = arguments;\n\n    let later = function () {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n\n    let callNow = immediate && timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n} // function for slide animation\n\n\nfunction slideInAnimation() {\n  let els = document.querySelectorAll('.show');\n  els.forEach(el => {\n    // const slideInAt = (window.scrollY + window.innerHeight) - (el.clientHeight/2)\n    const slideInAt = window.scrollY + window.innerHeight - 60;\n    const clientHeight = el.getBoundingClientRect().top + window.scrollY;\n    const isPassed = slideInAt > clientHeight;\n    const elIsNotDone = !el.classList.contains('done');\n    const elChildren = el.children;\n    const isProjectImage = el.classList.contains('project-image');\n    const isMessageCont = el.classList.contains('message-container');\n\n    if (isPassed && elIsNotDone) {\n      removeOverlay(el);\n\n      if (elChildren.length === 2) {\n        showSlider(elChildren);\n      } else if (elChildren.length === 1) {\n        // check if this element has a class of project-image\n        if (isProjectImage) setTimer(showOpacity, elChildren[0], el); // check if this class has a message-container\n\n        if (isMessageCont) {\n          el.classList.add('done');\n          showOpacity(elChildren[0]);\n        } // check if the element does not contain both the class names\n\n\n        if (!isProjectImage && !isMessageCont) {\n          setTimer(slideUp, elChildren[0], el);\n        }\n      }\n    }\n  });\n}\n\nfunction setTimer(func, child, el) {\n  setTimeout(() => {\n    func(child);\n    el.classList.add('done');\n  }, 600);\n}\n\nfunction removeOverlay(el) {\n  const hasHeaderClass = el.classList.contains('header-social-container');\n  const hasScrollClass = el.classList.contains('scroll-cover');\n\n  if (hasHeaderClass || hasScrollClass) {\n    setTimeout(() => {\n      el.style.overflow = 'visible';\n    }, 1200);\n  }\n} // animation that will run the slider and we are using the \n// timeline animation make a smooth effect\n\n\nfunction showSlider(el) {\n  let tl = anime.timeline({});\n  const parent = el[1].closest('.show');\n  parent.classList.add('done');\n  tl.add({\n    targets: el[1],\n    width: '100%',\n    easing: 'easeInSine',\n    duration: 300\n  }).add({\n    targets: el[1],\n    duration: 400,\n    complete: function (anim) {\n      el[1].style.right = 0;\n    }\n  }).add({\n    targets: el[1],\n    width: '0%',\n    easing: 'easeInSine',\n    duration: 300,\n    begin: function (anim) {\n      slideUp(el[0]);\n    }\n  });\n} // function that will make the image opacity from \n// 0 to 1 to make the image visible\n\n\nfunction showOpacity(el) {\n  // el.style.opacity = 0\n  anime({\n    targets: el,\n    opacity: {\n      duration: 500,\n      value: 1,\n      delay: 200,\n      easing: 'easeInSine'\n    }\n  });\n} // this will make the text or paragraphs visible\n// this slide up the text\n\n\nfunction slideUp(el) {\n  let tl = anime.timeline({});\n  el.style.transform = 'translateY(60px)';\n  tl.add({\n    targets: el,\n    opacity: {\n      duration: 550,\n      value: 1,\n      delay: 200,\n      easing: 'linear'\n    },\n    translateY: {\n      value: 0,\n      easing: 'easeOutElastic(10, 2)',\n      duration: 700\n    }\n  });\n} // call the animation function when we are scrolling the page\n\n\nexport function slideInElementsOnScroll() {\n  debounce(slideInAnimation());\n}","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/utils/pageanimations/scrollanimation/scrollanimation.js"],"names":["anime","scrollAnimation","page","window","innerWidth","slideInElementsOnScroll","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","slideInAnimation","els","document","querySelectorAll","forEach","el","slideInAt","scrollY","innerHeight","clientHeight","getBoundingClientRect","top","isPassed","elIsNotDone","classList","contains","elChildren","children","isProjectImage","isMessageCont","removeOverlay","length","showSlider","setTimer","showOpacity","add","slideUp","child","hasHeaderClass","hasScrollClass","style","overflow","tl","timeline","parent","closest","targets","width","easing","duration","complete","anim","right","begin","opacity","value","delay","transform","translateY"],"mappings":"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","sourcesContent":["import anime from 'animejs'\r\n\r\nexport function scrollAnimation(page) {\r\n  // console.log(page)\r\n  if(window.innerWidth > 768) {\r\n    slideInElementsOnScroll()\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// function that will debounce the scroll event to every\r\n// 70ms so to avoid performance issue\r\nfunction debounce (func, wait = 180, immediate = true){\r\n  let timeout;\r\n  return function() {\r\n    let context = this, args = arguments;\r\n    let later = function () {\r\n      timeout = null;\r\n      if(!immediate) func.apply(context, args)\r\n    }\r\n    let callNow = immediate && timeout\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait)\r\n    if(callNow) func.apply(context, args)\r\n  }\r\n}\r\n\r\n// function for slide animation\r\nfunction slideInAnimation(){\r\n  let els = document.querySelectorAll('.show')\r\n\r\n  els.forEach(el => {\r\n    // const slideInAt = (window.scrollY + window.innerHeight) - (el.clientHeight/2)\r\n    const slideInAt = (window.scrollY + window.innerHeight) - (60)\r\n    const clientHeight = el.getBoundingClientRect().top + window.scrollY\r\n\r\n    const isPassed = slideInAt > clientHeight\r\n    const elIsNotDone = !el.classList.contains('done')\r\n    const elChildren = el.children\r\n    const isProjectImage = el.classList.contains('project-image')\r\n    const isMessageCont = el.classList.contains('message-container')\r\n    \r\n      if(isPassed && elIsNotDone) {\r\n        removeOverlay(el)\r\n        if(elChildren.length === 2){\r\n          showSlider(elChildren)\r\n\r\n        } else if (elChildren.length === 1) {\r\n\r\n          // check if this element has a class of project-image\r\n          if(isProjectImage) setTimer(showOpacity, elChildren[0], el)\r\n\r\n          // check if this class has a message-container\r\n          if(isMessageCont) {\r\n            el.classList.add('done')\r\n            showOpacity(elChildren[0])\r\n          }\r\n\r\n          // check if the element does not contain both the class names\r\n          if(!isProjectImage && !isMessageCont) {\r\n            setTimer(slideUp, elChildren[0], el)\r\n          }\r\n          \r\n        }\r\n      }\r\n\r\n  })  \r\n}  \r\n\r\nfunction setTimer(func, child, el) {\r\n  setTimeout(()=>{\r\n    func(child)\r\n    el.classList.add('done')\r\n  }, 600)\r\n}\r\n\r\n\r\n\r\nfunction removeOverlay (el){\r\n  const hasHeaderClass = el.classList.contains('header-social-container')\r\n  const hasScrollClass = el.classList.contains('scroll-cover')\r\n  if(hasHeaderClass || hasScrollClass){\r\n    setTimeout(()=>{\r\n      el.style.overflow = 'visible'\r\n    }, 1200)\r\n  }\r\n  \r\n}\r\n\r\n// animation that will run the slider and we are using the \r\n// timeline animation make a smooth effect\r\nfunction showSlider (el) {\r\n  let tl = anime.timeline({})\r\n  const parent = el[1].closest('.show')\r\n  parent.classList.add('done')\r\n  \r\n  tl.add({\r\n    targets: el[1],\r\n    width: '100%',\r\n    easing:  'easeInSine',\r\n    duration: 300,\r\n  })\r\n  .add({\r\n    targets: el[1],\r\n    duration: 400,\r\n    complete: function (anim) {\r\n      el[1].style.right = 0\r\n    }\r\n  })\r\n  .add({\r\n    targets: el[1],\r\n    width: '0%',\r\n    easing:  'easeInSine',\r\n    duration: 300,\r\n    begin: function (anim) {\r\n      slideUp(el[0])\r\n    }\r\n  })\r\n\r\n}\r\n\r\n// function that will make the image opacity from \r\n// 0 to 1 to make the image visible\r\nfunction showOpacity(el) {\r\n  // el.style.opacity = 0\r\n\r\n  anime({\r\n    targets: el,\r\n    opacity: {\r\n      duration: 500,\r\n      value: 1,\r\n      delay: 200,\r\n      easing: 'easeInSine'\r\n    }\r\n    \r\n  })\r\n}\r\n\r\n// this will make the text or paragraphs visible\r\n// this slide up the text\r\nfunction slideUp (el) {\r\n  let tl = anime.timeline({})\r\n  el.style.transform = 'translateY(60px)'\r\n\r\n  tl.add({\r\n    targets: el,\r\n    opacity: {\r\n      duration: 550,\r\n      value: 1,\r\n      delay: 200,\r\n      easing: 'linear'\r\n    },\r\n    translateY: {\r\n      value: 0,\r\n      easing: 'easeOutElastic(10, 2)',\r\n      duration: 700\r\n    },\r\n  })\r\n}\r\n\r\n// call the animation function when we are scrolling the page\r\nexport function slideInElementsOnScroll() {\r\n  debounce(slideInAnimation())\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}