{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Web Dev\\\\Main Files\\\\Official Website\\\\newdesign\\\\Main\\\\src\\\\components\\\\Buttons\\\\WithBox\\\\WithBox.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Envelop from '../../Svgs/Logos/Logos'; // import * as action from '../../../store/actions/index'\n// import {pageTransition} from '../../../utils/pageAnimation/pageTransitionAnim'\n// import {connect} from 'react-redux'\n// import './WithBox.css'\n\nfunction WithBox(props) {\n  console.log(props);\n  var withlink = props.link;\n  var svg = props.withSvg ? __jsx(Envelop, {\n    type: \"envelop\",\n    colors: props.colors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 31\n    }\n  }) : null; // const redirect = () => {\n  //   pageTransition()\n  //   setTimeout(() => {\n  //     props.setRedirect(true, `/${props.link}`)\n  //   }, 1000)\n  // }\n\n  return __jsx(\"a\", {\n    href: withlink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    className: \"content-center \".concat(props.btnType),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, svg, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, props.text)));\n} // const mapDispatchToProps = (dispatch) => {\n//   return {\n//     // setMenu: (val) => { dispatch(action.menuIsOpen(val)) },\n//     // checkPage: () => {dispatch(action.checkPageLocation())},\n//     setRedirect: (istrue, path) => { dispatch(action.setRedirect(istrue, path)) }\n//   }\n// }\n// export default connect(null, mapDispatchToProps)(WithBox);\n\n\n_c = WithBox;\nexport default WithBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"WithBox\");","map":{"version":3,"sources":["C:/Projects/Web Dev/Main Files/Official Website/newdesign/Main/src/components/Buttons/WithBox/WithBox.js"],"names":["React","Envelop","WithBox","props","console","log","withlink","link","svg","withSvg","colors","btnType","text"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB,C,CACA;AACA;AACA;AACA;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,MAAIG,QAAQ,GAAGH,KAAK,CAACI,IAArB;AAEA,MAAIC,GAAG,GAAGL,KAAK,CAACM,OAAN,GAAkB,MAAC,OAAD;AAAS,IAAA,IAAI,EAAC,SAAd;AAAwB,IAAA,MAAM,EAAEN,KAAK,CAACO,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,GAAuE,IAAjF,CAJsB,CAMtB;AACA;AAEA;AACA;AACA;AAEA;;AAGA,SACE;AAAG,IAAA,IAAI,EAAEJ,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,2BAAoBH,KAAK,CAACQ,OAA1B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,GADL,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACS,IADT,CAFF,CADF,CADF;AASD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;KAnCSV,O;AAoCT,eAAeA,OAAf","sourcesContent":["import React from 'react'\r\nimport Envelop from '../../Svgs/Logos/Logos'\r\n// import * as action from '../../../store/actions/index'\r\n// import {pageTransition} from '../../../utils/pageAnimation/pageTransitionAnim'\r\n// import {connect} from 'react-redux'\r\n// import './WithBox.css'\r\n\r\nfunction WithBox(props) {\r\n  console.log(props)\r\n  let withlink = props.link\r\n  \r\n  let svg = props.withSvg ? ( <Envelop type='envelop' colors={props.colors} /> ) : null\r\n\r\n  // const redirect = () => {\r\n  //   pageTransition()\r\n\r\n  //   setTimeout(() => {\r\n  //     props.setRedirect(true, `/${props.link}`)\r\n  //   }, 1000)\r\n\r\n  // }\r\n\r\n\r\n  return (\r\n    <a href={withlink}>\r\n      <button className={`content-center ${props.btnType}`}>\r\n          {svg}\r\n        <span>\r\n          {props.text}</span>\r\n      </button>\r\n    </a>\r\n  )\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     // setMenu: (val) => { dispatch(action.menuIsOpen(val)) },\r\n//     // checkPage: () => {dispatch(action.checkPageLocation())},\r\n//     setRedirect: (istrue, path) => { dispatch(action.setRedirect(istrue, path)) }\r\n//   }\r\n// }\r\n\r\n// export default connect(null, mapDispatchToProps)(WithBox);\r\nexport default WithBox;"]},"metadata":{},"sourceType":"module"}