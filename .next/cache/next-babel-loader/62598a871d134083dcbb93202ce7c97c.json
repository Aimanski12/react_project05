{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { getIP, getUserData, generateUrl, getTime } from './commonfunctions'; // this function is called after all the form input values\n// are validated. This function is called to store the message\n// to the firebase\n\nexport function saveMessageToFirebase(_x) {\n  return _saveMessageToFirebase.apply(this, arguments);\n}\n\nfunction _saveMessageToFirebase() {\n  _saveMessageToFirebase = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n    var result, message, data, url;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            result = false;\n            message = {\n              title: values[2] === '' ? \"Just sayin' hi!\" : values[2],\n              name: values[0],\n              email: values[1],\n              message: values[3],\n              time: getTime('timeOfVisit')\n            };\n            _context.t0 = message;\n            _context.next = 5;\n            return getIP();\n\n          case 5:\n            _context.t1 = _context.sent;\n            _context.next = 8;\n            return getUserData();\n\n          case 8:\n            _context.t2 = _context.sent;\n            data = {\n              message: _context.t0,\n              userIP: _context.t1,\n              userData: _context.t2\n            };\n            url = generateUrl('messages');\n            _context.next = 13;\n            return axios.post(\"\".concat(url, \".json\"), data).then(function (res) {\n              if (res) {\n                if (res.status === 200) {\n                  result = true;\n                }\n              }\n            })[\"catch\"](function (err) {\n              if (err) {\n                console.log(err);\n              }\n\n              result = false;\n            });\n\n          case 13:\n            return _context.abrupt(\"return\", result);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _saveMessageToFirebase.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}